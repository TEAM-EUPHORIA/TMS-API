æg
\C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\AppDbContext.cs
	namespace 	
TMS
 
. 
API 
{ 
public 

class 
AppDbContext 
: 
	DbContext  )
{ 
public 
AppDbContext 
( 
DbContextOptions ,
options- 4
)4 5
:6 7
base8 <
(< =
options= D
)D E
{		 	
} 	
public	 
static #
DbContextOptionsBuilder .
<. /
AppDbContext/ ;
>; <
dbContextOptions= M
(M N
)N O
{O P
var	 
optionsBuilder 
= 
new !#
DbContextOptionsBuilder" 9
<9 :
AppDbContext: F
>F G
(G H
)H I
;I J
IConfigurationRoot 
configuration ,
=- .
new/ 2 
ConfigurationBuilder3 G
(G H
)H I
. 
SetBasePath 
( 
	AppDomain &
.& '
CurrentDomain' 4
.4 5
BaseDirectory5 B
)B C
. 
AddJsonFile 
( 
$str /
)/ 0
. 
Build 
( 
) 
; 
var 
connectionString $
=% &
configuration' 4
.4 5
GetConnectionString5 H
(H I
$strI R
)R S
;S T
optionsBuilder 
. 
UseSqlServer +
(+ ,
connectionString, <
??) +
throw, 1
new2 5"
NullReferenceException6 L
(L M
$"- /
$str/ S
{S T
nameofT Z
(Z [
connectionString[ k
)k l
}l m
"m n
)n o
)o p
;p q
return 
optionsBuilder !
;! "
} 	
public 
DbSet 
< 
User 
> 
Users  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 
Role 
> 
Roles  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 

Department 
>  
Departments! ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 
DbSet 
< 
Course 
> 
Courses $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 
Topic 
> 
Topics "
{# $
get% (
;( )
set* -
;- .
}/ 0
public   
DbSet   
<   
Review   
>   
Reviews   $
{  % &
get  ' *
;  * +
set  , /
;  / 0
}  1 2
public!! 
DbSet!! 
<!! 
CourseFeedback!! #
>!!# $
CourseFeedbacks!!% 4
{!!5 6
get!!7 :
;!!: ;
set!!< ?
;!!? @
}!!A B
public"" 
DbSet"" 
<"" 
TraineeFeedback"" $
>""$ %
TraineeFeedbacks""& 6
{""7 8
get""9 <
;""< =
set""> A
;""A B
}""C D
public## 
DbSet## 
<## 

Assignment## 
>##  
Assignments##! ,
{##- .
get##/ 2
;##2 3
set##4 7
;##7 8
}##9 :
public$$ 
DbSet$$ 
<$$ 

Attendance$$ 
>$$  
Attendances$$! ,
{$$- .
get$$/ 2
;$$2 3
set$$4 7
;$$7 8
}$$9 :
public%% 
DbSet%% 
<%% 
MOM%% 
>%% 
MOMs%% 
{%%  
get%%! $
;%%$ %
set%%& )
;%%) *
}%%+ ,
public&& 
DbSet&& 
<&& 
ReviewStatus&& !
>&&! "
ReviewStatuses&&# 1
{&&2 3
get&&4 7
;&&7 8
set&&9 <
;&&< =
}&&> ?
public(( 
DbSet(( 
<(( 
CourseUsers((  
>((  !
CourseUsers((" -
{((. /
get((0 3
;((3 4
set((5 8
;((8 9
}((: ;
	protected** 
override** 
void** 
OnModelCreating**  /
(**/ 0
ModelBuilder**0 <
modelBuilder**= I
)**I J
{++ 	
modelBuilder,, 
.,, 
Entity,, 
<,,  

Assignment,,  *
>,,* +
(,,+ ,
),,, -
.,,- .
HasKey,,. 4
(,,4 5
e,,5 6
=>,,6 8
new,,8 ;
{,,; <
e,,< =
.,,= >
CourseId,,> F
,,,F G
e,,G H
.,,H I
TopicId,,I P
,,,P Q
e,,Q R
.,,R S
OwnerId,,S Z
},,Z [
),,[ \
;,,\ ]
modelBuilder-- 
.-- 
Entity-- 
<--  

Attendance--  *
>--* +
(--+ ,
)--, -
.--- .
HasKey--. 4
(--4 5
e--5 6
=>--6 8
new--8 ;
{--; <
e--< =
.--= >
CourseId--> F
,--F G
e--G H
.--H I
TopicId--I P
,--P Q
e--Q R
.--R S
OwnerId--S Z
}--Z [
)--[ \
;--\ ]
modelBuilder.. 
... 
Entity.. 
<..  
CourseUsers..  +
>..+ ,
(.., -
)..- .
.... /
HasKey../ 5
(..5 6
e..6 7
=>..7 9
new..9 <
{..< =
e..= >
...> ?
CourseId..? G
,..G H
e..H I
...I J
UserId..J P
,..P Q
e..Q R
...R S
RoleId..S Y
}..Y Z
)..Z [
;..[ \
modelBuilder// 
.// 
Entity// 
<//  
CourseFeedback//  .
>//. /
(/// 0
)//0 1
.//1 2
HasKey//2 8
(//8 9
e//9 :
=>//: <
new//< ?
{//? @
e//@ A
.//A B
CourseId//B J
,//J K
e//K L
.//L M
	TraineeId//M V
}//V W
)//W X
;//X Y
modelBuilder00 
.00 
Entity00 
<00  
TraineeFeedback00  /
>00/ 0
(000 1
)001 2
.002 3
HasKey003 9
(009 :
e00: ;
=>00; =
new00= @
{00@ A
e00A B
.00B C
CourseId00C K
,00K L
e00L M
.00M N
	TraineeId00N W
,00W X
e00X Y
.00Y Z
	TrainerId00Z c
}00c d
)00d e
;00e f
modelBuilder11 
.11 
Entity11 
<11  
Review11  &
>11& '
(11' (
)11( )
.11) *
HasKey11* 0
(110 1
e111 2
=>112 4
new114 7
{117 8
e118 9
.119 :
Id11: <
}11< =
)11= >
;11> ?
modelBuilder22 
.22 
Entity22 
<22  
MOM22  #
>22# $
(22$ %
)22% &
.22& '
HasKey22' -
(22- .
e22. /
=>22/ 1
new221 4
{224 5
e225 6
.226 7
ReviewId227 ?
,22? @
e22@ A
.22A B
	TraineeId22B K
}22K L
)22L M
;22M N
var33 
	createdOn33 
=33 
DateTime33 $
.33$ %
Now33% (
;33( )
modelBuilder55 
.55 
Entity55 
<55  
Role55  $
>55$ %
(55% &
)55& '
.55' (
HasData55( /
(55/ 0
new66 
Role66 
(66 
)66 
{66 
Id66 
=66 
$num66 
,66  
Name66  $
=66$ %
$str66% 4
,664 5
	CreatedOn665 >
=66> ?
DateTime66? G
.66G H
Now66H K
,66K L

isDisabled66L V
=66V W
false66W \
}66\ ]
,66] ^
new77 
Role77 
(77 
)77 
{77 
Id77 
=77 
$num77 
,77  
Name77  $
=77$ %
$str77% ;
,77; <
	CreatedOn77< E
=77E F
DateTime77F N
.77N O
Now77O R
,77R S

isDisabled77S ]
=77] ^
false77^ c
}77c d
,77d e
new88 
Role88 
(88 
)88 
{88 
Id88 
=88 
$num88 
,88  
Name88  $
=88$ %
$str88% .
,88. /
	CreatedOn88/ 8
=888 9
DateTime889 A
.88A B
Now88B E
,88E F

isDisabled88F P
=88P Q
false88Q V
}88V W
,88W X
new99 
Role99 
(99 
)99 
{99 
Id99 
=99 
$num99 
,99  
Name99  $
=99$ %
$str99% .
,99. /
	CreatedOn99/ 8
=998 9
DateTime999 A
.99A B
Now99B E
,99E F

isDisabled99F P
=99P Q
false99Q V
}99V W
,99W X
new:: 
Role:: 
(:: 
):: 
{:: 
Id:: 
=:: 
$num:: 
,::  
Name::  $
=::$ %
$str::% /
,::/ 0
	CreatedOn::0 9
=::9 :
DateTime::: B
.::B C
Now::C F
,::F G

isDisabled::G Q
=::Q R
false::R W
}::W X
);; 
;;; 
modelBuilder<< 
.<< 
Entity<< 
<<<  

Department<<  *
><<* +
(<<+ ,
)<<, -
.<<- .
HasData<<. 5
(<<5 6
new== 

Department== 
(== 
)==  
{==  !
Id==! #
===# $
$num==$ %
,==% &
Name==& *
===* +
$str==+ 1
,==1 2
	CreatedOn==2 ;
===; <
DateTime==< D
.==D E
Now==E H
,==H I

isDisabled==I S
===S T
false==T Y
}==Y Z
,==Z [
new>> 

Department>> 
(>> 
)>>  
{>>  !
Id>>! #
=>># $
$num>>$ %
,>>% &
Name>>& *
=>>* +
$str>>+ 1
,>>1 2
	CreatedOn>>2 ;
=>>; <
DateTime>>< D
.>>D E
Now>>E H
,>>H I

isDisabled>>I S
=>>S T
false>>T Y
}>>Y Z
,>>Z [
new?? 

Department?? 
(?? 
)??  
{??  !
Id??! #
=??# $
$num??$ %
,??% &
Name??& *
=??* +
$str??+ 1
,??1 2
	CreatedOn??2 ;
=??; <
DateTime??< D
.??D E
Now??E H
,??H I

isDisabled??I S
=??S T
false??T Y
}??Y Z
)@@ 
;@@ 
modelBuilderAA 
.AA 
EntityAA 
<AA  
ReviewStatusAA  ,
>AA, -
(AA- .
)AA. /
.AA/ 0
HasDataAA0 7
(AA7 8
newBB 
ReviewStatusBB  
(BB  !
)BB! "
{BB" #
IdBB# %
=BB% &
$numBB& '
,BB' (
NameBB( ,
=BB, -
$strBB- 7
,BB7 8
	CreatedOnBB8 A
=BBA B
DateTimeBBB J
.BBJ K
NowBBK N
}BBN O
,BBO P
newCC 
ReviewStatusCC  
(CC  !
)CC! "
{CC" #
IdCC# %
=CC% &
$numCC& '
,CC' (
NameCC( ,
=CC, -
$strCC- 8
,CC8 9
	CreatedOnCC9 B
=CCB C
DateTimeCCC K
.CCK L
NowCCL O
}CCO P
,CCP Q
newDD 
ReviewStatusDD  
(DD  !
)DD! "
{DD" #
IdDD# %
=DD% &
$numDD& '
,DD' (
NameDD( ,
=DD, -
$strDD- 7
,DD7 8
	CreatedOnDD8 A
=DDA B
DateTimeDDB J
.DDJ K
NowDDK N
}DDN O
)EE 
;EE 
}
 	
}
 
} Ë
jC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Controllers\AuthController.cs
	namespace 	
TMS
 
. 
API 
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
AuthController 
:  !
ControllerBase" 0
{ 
private 
readonly 
ILogger  
<  !
AuthController! /
>/ 0
_logger1 8
;8 9
private 
readonly 

Validation #
_validation$ /
;/ 0
private 
readonly 
AuthService $
_authService% 1
;1 2
public 
AuthController 
( 
UnitOfService +
service, 3
,3 4
ILogger5 <
<< =
AuthController= K
>K L
loggerM S
)S T
{ 	
_logger 
= 
logger 
; 
_validation 
= 
service !
.! "

Validation" ,
;, -
_authService 
= 
service "
." #
AuthService# .
;. /
} 	
[++ 	
HttpPost++	 
(++ 
$str++ 
)++ 
]++ 
public,, 
IActionResult,, 
Login,, "
(,," #
[,,# $
FromBody,,$ ,
],,, -

LoginModel,,- 7
user,,8 <
),,< =
{-- 	
var.. 

validation.. 
=.. 
_validation.. (
...( ) 
ValidateLoginDetails..) =
(..= >
user..> B
)..B C
;..C D
try// 
{00 
if11 
(11 

validation11 
.11 
ContainsKey11 )
(11) *
$str11* 3
)113 4
)114 5
{22 
var33 
result33 
=33  
_authService33! -
.33- .
Login33. 3
(333 4
user334 8
)338 9
;339 :
if44 
(44 
result44 
is44  
not44! $
null44% )
)44) *
return44+ 1
(442 3
Ok443 5
(445 6
result446 <
)44< =
)44= >
;44> ?
}55 
return66 
Unauthorized66 #
(66# $
)66$ %
;66% &
}77 
catch88 
(88 %
InvalidOperationException88 ,
ex88- /
)88/ 0
{99 
	TMSLogger:: 
.:: "
ServiceInjectionFailed:: 0
(::0 1
ex::1 3
,::3 4
_logger::5 <
,::< =
nameof::> D
(::D E
AuthController::E S
)::S T
,::T U
nameof::V \
(::\ ]
Login::] b
)::b c
)::c d
;::d e
return;; 
Problem;; 
(;; 
);;  
;;;  !
}<< 
}== 	
}>> 
}?? çì
lC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Controllers\CourseController.cs
	namespace

 	
TMS


 
.

 
API

 
.

 
Controllers

 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
CourseController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
ILogger  
<  !
CourseController! 1
>1 2
_logger3 :
;: ;
private 
readonly 
CourseService &
_courseService' 5
;5 6
private 
readonly 

Validation #
_validation$ /
;/ 0
public 
CourseController 
(  
UnitOfService  -
service. 5
,5 6
ILogger7 >
<> ?
CourseController? O
>O P
loggerQ W
)W X
{ 	
_logger 
= 
logger 
; 
_courseService 
= 
service $
.$ %
CourseService% 2
;2 3
_validation 
= 
service !
.! "

Validation" ,
;, -
} 	
[$$ 	
HttpGet$$	 
]$$ 
public&& 
IActionResult&& 

GetCourses&& '
(&&' (
)&&( )
{'' 	
try(( 
{)) 
return** 
Ok** 
(** 
_courseService** (
.**( )

GetCourses**) 3
(**3 4
)**4 5
)**5 6
;**6 7
}++ 
catch,, 
(,, %
InvalidOperationException,, ,
ex,,- /
),,/ 0
{-- 
	TMSLogger.. 
... "
ServiceInjectionFailed.. 0
(..0 1
ex..1 3
,..3 4
_logger..5 <
,..< =
nameof..> D
(..D E
CourseController..E U
)..U V
,..V W
nameof..X ^
(..^ _

GetCourses.._ i
)..i j
)..j k
;..k l
return// 
Problem// 
(// 
)//  
;//  !
}00 
}11 	
[AA 	
HttpGetAA	 
(AA 
$strAA %
)AA% &
]AA& '
publicCC 
IActionResultCC 
GetCoursesByUserIdCC /
(CC/ 0
intCC0 3
userIdCC4 :
)CC: ;
{DD 	
varEE 

userExistsEE 
=EE 
_validationEE (
.EE( )

UserExistsEE) 3
(EE3 4
userIdEE4 :
)EE: ;
;EE; <
ifFF 
(FF 

userExistsFF 
)FF 
{GG 
tryHH 
{II 
returnJJ 
OkJJ 
(JJ 
_courseServiceJJ ,
.JJ, -
GetCoursesByUserIdJJ- ?
(JJ? @
userIdJJ@ F
)JJF G
)JJG H
;JJH I
}KK 
catchLL 
(LL %
InvalidOperationExceptionLL 0
exLL1 3
)LL3 4
{MM 
	TMSLoggerNN 
.NN "
ServiceInjectionFailedNN 4
(NN4 5
exNN5 7
,NN7 8
_loggerNN9 @
,NN@ A
nameofNNB H
(NNH I
CourseControllerNNI Y
)NNY Z
,NNZ [
nameofNN\ b
(NNb c
GetCoursesByUserIdNNc u
)NNu v
)NNv w
;NNw x
returnOO 
ProblemOO "
(OO" #
)OO# $
;OO$ %
}PP 
}QQ 
returnRR 
NotFoundRR 
(RR 
)RR 
;RR 
}SS 	
[cc 	
HttpGetcc	 
(cc 
$strcc 1
)cc1 2
]cc2 3
publicee 
IActionResultee $
GetCoursesByDepartmentIdee 5
(ee5 6
intee6 9
departmentIdee: F
)eeF G
{ff 	
vargg 
departmentExistsgg  
=gg! "
_validationgg# .
.gg. /
DepartmentExistsgg/ ?
(gg? @
departmentIdgg@ L
)ggL M
;ggM N
ifhh 
(hh 
departmentExistshh 
)hh  
{ii 
tryjj 
{kk 
returnll 
Okll 
(ll 
_courseServicell ,
.ll, -$
GetCoursesByDepartmentIdll- E
(llE F
departmentIdllF R
)llR S
)llS T
;llT U
}mm 
catchnn 
(nn %
InvalidOperationExceptionnn 0
exnn1 3
)nn3 4
{oo 
	TMSLoggerpp 
.pp "
ServiceInjectionFailedpp 4
(pp4 5
expp5 7
,pp7 8
_loggerpp9 @
,pp@ A
nameofppB H
(ppH I
CourseControllerppI Y
)ppY Z
,ppZ [
nameofpp\ b
(ppb c$
GetCoursesByDepartmentIdppc {
)pp{ |
)pp| }
;pp} ~
returnqq 
Problemqq "
(qq" #
)qq# $
;qq$ %
}rr 
}ss 
returntt 
NotFoundtt 
(tt 
)tt 
;tt 
}uu 	
[
 	
HttpGet
	 
(
 
$str
 !
)
! "
]
" #
public
 
IActionResult
 
GetCourseById
 *
(
* +
int
+ .
courseId
/ 7
)
7 8
{
 	
var
 
courseExists
 
=
 
_validation
 *
.
* +
CourseExists
+ 7
(
7 8
courseId
8 @
)
@ A
;
A B
if
 
(
 
courseExists
 
)
 
{
 
try
 
{
 
var
 
result
 
=
  
_courseService
! /
.
/ 0
GetCourseById
0 =
(
= >
courseId
> F
)
F G
;
G H
if
 
(
 
result
 
is
 !
not
" %
null
& *
)
* +
return
, 2
Ok
3 5
(
5 6
result
6 <
)
< =
;
= >
}
 
catch
 
(
 '
InvalidOperationException
 0
ex
1 3
)
3 4
{
 
	TMSLogger
 
.
 $
ServiceInjectionFailed
 4
(
4 5
ex
5 7
,
7 8
_logger
9 @
,
@ A
nameof
B H
(
H I
CourseController
I Y
)
Y Z
,
Z [
nameof
\ b
(
b c
GetCourseById
c p
)
p q
)
q r
;
r s
return
 
Problem
 "
(
" #
)
# $
;
$ %
}
 
}
 
return
 
NotFound
 
(
 
)
 
;
 
}
 	
[
²² 	
HttpPost
²²	 
(
²² 
$str
²² 
)
²² 
]
²² 
[
´´ 	
	Authorize
´´	 
(
´´ 
Roles
´´ 
=
´´ 
$str
´´ 1
)
´´1 2
]
´´2 3
public
µµ 
IActionResult
µµ 
CreateCourse
µµ )
(
µµ) *
Course
µµ* 0
course
µµ1 7
)
µµ7 8
{
¶¶ 	
if
·· 
(
·· 
!
·· 

ModelState
·· 
.
·· 
IsValid
·· #
)
··# $
return
··% +

BadRequest
··, 6
(
··6 7

ModelState
··7 A
)
··A B
;
··B C
try
¸¸ 
{
¹¹ 
var
ºº 
IsValid
ºº 
=
ºº 
_validation
ºº )
.
ºº) *
ValidateCourse
ºº* 8
(
ºº8 9
course
ºº9 ?
)
ºº? @
;
ºº@ A
if
»» 
(
»» 
IsValid
»» 
.
»» 
ContainsKey
»» '
(
»»' (
$str
»»( 0
)
»»0 1
)
»»1 2
return
»»3 9

BadRequest
»»: D
(
»»D E
$str
»»E u
)
»»u v
;
»»v w
if
¼¼ 
(
¼¼ 
IsValid
¼¼ 
.
¼¼ 
ContainsKey
¼¼ '
(
¼¼' (
$str
¼¼( 1
)
¼¼1 2
)
¼¼2 3
{
½½ 
course
¾¾ 
.
¾¾ 
	CreatedBy
¾¾ $
=
¾¾% &
ControllerHelper
¾¾' 7
.
¾¾7 8
GetCurrentUserId
¾¾8 H
(
¾¾H I
this
¾¾I M
.
¾¾M N
HttpContext
¾¾N Y
)
¾¾Y Z
;
¾¾Z [
var
¿¿ 
res
¿¿ 
=
¿¿ 
_courseService
¿¿ ,
.
¿¿, -
CreateCourse
¿¿- 9
(
¿¿9 :
course
¿¿: @
)
¿¿@ A
;
¿¿A B
if
ÀÀ 
(
ÀÀ 
res
ÀÀ 
.
ÀÀ 
ContainsKey
ÀÀ '
(
ÀÀ' (
$str
ÀÀ( 1
)
ÀÀ1 2
)
ÀÀ2 3
{
ÁÁ 
return
ÂÂ 
Ok
ÂÂ !
(
ÂÂ! "
new
ÂÂ" %
{
ÂÂ& '
Response
ÂÂ( 0
=
ÂÂ1 2
$str
ÂÂ3 X
}
ÂÂY Z
)
ÂÂZ [
;
ÂÂ[ \
}
ÃÃ 
}
ÄÄ 
return
ÅÅ 

BadRequest
ÅÅ !
(
ÅÅ! "
IsValid
ÅÅ" )
)
ÅÅ) *
;
ÅÅ* +
}
ÆÆ 
catch
ÇÇ 
(
ÇÇ '
InvalidOperationException
ÇÇ ,
ex
ÇÇ- /
)
ÇÇ/ 0
{
ÈÈ 
	TMSLogger
ÉÉ 
.
ÉÉ $
ServiceInjectionFailed
ÉÉ 0
(
ÉÉ0 1
ex
ÉÉ1 3
,
ÉÉ3 4
_logger
ÉÉ5 <
,
ÉÉ< =
nameof
ÉÉ> D
(
ÉÉD E
CourseController
ÉÉE U
)
ÉÉU V
,
ÉÉV W
nameof
ÉÉX ^
(
ÉÉ^ _
CreateCourse
ÉÉ_ k
)
ÉÉk l
)
ÉÉl m
;
ÉÉm n
return
ÊÊ 
Problem
ÊÊ 
(
ÊÊ 
)
ÊÊ  
;
ÊÊ  !
}
ËË 
}
ÌÌ 	
[
çç 	
HttpPut
çç	 
(
çç 
$str
çç 
)
çç 
]
çç 
[
éé 	
	Authorize
éé	 
(
éé 
Roles
éé 
=
éé 
$str
éé 1
)
éé1 2
]
éé2 3
public
êê 
IActionResult
êê 
UpdateCourse
êê )
(
êê) *
Course
êê* 0
course
êê1 7
)
êê7 8
{
ëë 	
if
ìì 
(
ìì 
!
ìì 

ModelState
ìì 
.
ìì 
IsValid
ìì #
)
ìì# $
return
ìì% +

BadRequest
ìì, 6
(
ìì6 7

ModelState
ìì7 A
)
ììA B
;
ììB C
var
íí 
courseExists
íí 
=
íí 
_validation
íí *
.
íí* +
CourseExists
íí+ 7
(
íí7 8
course
íí8 >
.
íí> ?
Id
íí? A
)
ííA B
;
ííB C
if
îî 
(
îî 
courseExists
îî 
)
îî 
{
ïï 
try
ðð 
{
ññ 
var
òò 
IsValid
òò 
=
òò  !
_validation
òò" -
.
òò- .
ValidateCourse
òò. <
(
òò< =
course
òò= C
)
òòC D
;
òòD E
if
óó 
(
óó 
IsValid
óó 
.
óó  
ContainsKey
óó  +
(
óó+ ,
$str
óó, 5
)
óó5 6
&&
óó7 9
IsValid
óó: A
.
óóA B
ContainsKey
óóB M
(
óóM N
$str
óóN V
)
óóV W
)
óóW X
{
ôô 
course
õõ 
.
õõ 
	UpdatedBy
õõ (
=
õõ) *
ControllerHelper
õõ+ ;
.
õõ; <
GetCurrentUserId
õõ< L
(
õõL M
this
õõM Q
.
õõQ R
HttpContext
õõR ]
)
õõ] ^
;
õõ^ _
var
öö 
res
öö 
=
öö  !
_courseService
öö" 0
.
öö0 1
UpdateCourse
öö1 =
(
öö= >
course
öö> D
)
ööD E
;
ööE F
if
÷÷ 
(
÷÷ 
res
÷÷ 
.
÷÷  
ContainsKey
÷÷  +
(
÷÷+ ,
$str
÷÷, 5
)
÷÷5 6
&&
÷÷7 9
res
÷÷: =
.
÷÷= >
ContainsKey
÷÷> I
(
÷÷I J
$str
÷÷J R
)
÷÷R S
)
÷÷S T
return
÷÷U [
Ok
÷÷\ ^
(
÷÷^ _
new
÷÷_ b
{
÷÷c d
Response
÷÷e m
=
÷÷n o
$str÷÷p 
}÷÷ 
)÷÷ 
;÷÷ 
}
øø 
return
ùù 

BadRequest
ùù %
(
ùù% &
IsValid
ùù& -
)
ùù- .
;
ùù. /
}
úú 
catch
ûû 
(
ûû '
InvalidOperationException
ûû 0
ex
ûû1 3
)
ûû3 4
{
üü 
	TMSLogger
ýý 
.
ýý $
ServiceInjectionFailed
ýý 4
(
ýý4 5
ex
ýý5 7
,
ýý7 8
_logger
ýý9 @
,
ýý@ A
nameof
ýýB H
(
ýýH I
CourseController
ýýI Y
)
ýýY Z
,
ýýZ [
nameof
ýý\ b
(
ýýb c
UpdateCourse
ýýc o
)
ýýo p
)
ýýp q
;
ýýq r
return
þþ 
Problem
þþ "
(
þþ" #
)
þþ# $
;
þþ$ %
}
ÿÿ 
}
 
return
 
NotFound
 
(
 
)
 
;
 
}
 	
[
 	
HttpPut
	 
(
 
$str
 )
)
) *
]
* +
[
 	
	Authorize
	 
(
 
Roles
 
=
 
$str
 1
)
1 2
]
2 3
public
 
IActionResult
 
DisableCourse
 *
(
* +
int
+ .
courseId
/ 7
)
7 8
{
 	
var
 
courseExists
 
=
 
_validation
 *
.
* +
CourseExists
+ 7
(
7 8
courseId
8 @
)
@ A
;
A B
if
 
(
 
courseExists
 
)
 
{
 
try
 
{
 
int
 
currentUserId
 %
=
& '
ControllerHelper
( 8
.
8 9
GetCurrentUserId
9 I
(
I J
this
J N
.
N O
HttpContext
O Z
)
Z [
;
[ \
var
 
res
 
=
 
_courseService
 ,
.
, -
DisableCourse
- :
(
: ;
courseId
; C
,
C D
currentUserId
D Q
)
Q R
;
R S
if
 
(
 
res
 
)
 
return
 #
Ok
$ &
(
& '
$str
' M
)
M N
;
N O
}
 
catch
   
(
   '
InvalidOperationException
   0
ex
  1 3
)
  3 4
{
¡¡ 
	TMSLogger
¢¢ 
.
¢¢ $
ServiceInjectionFailed
¢¢ 4
(
¢¢4 5
ex
¢¢5 7
,
¢¢7 8
_logger
¢¢9 @
,
¢¢@ A
nameof
¢¢B H
(
¢¢H I
CourseController
¢¢I Y
)
¢¢Y Z
,
¢¢Z [
nameof
¢¢\ b
(
¢¢b c
DisableCourse
¢¢c p
)
¢¢p q
)
¢¢q r
;
¢¢r s
return
££ 
Problem
££ "
(
££" #
)
££# $
;
££$ %
}
¤¤ 
}
¥¥ 
return
¦¦ 
NotFound
¦¦ 
(
¦¦ 
)
¦¦ 
;
¦¦ 
}
§§ 	
[
·· 	
HttpGet
··	 
(
·· 
$str
·· (
)
··( )
]
··) *
public
¸¸ 
IActionResult
¸¸ !
GetTopicsByCourseId
¸¸ 0
(
¸¸0 1
int
¸¸1 4
courseId
¸¸5 =
)
¸¸= >
{
¹¹ 	
var
ºº 
courseExists
ºº 
=
ºº 
_validation
ºº *
.
ºº* +
CourseExists
ºº+ 7
(
ºº7 8
courseId
ºº8 @
)
ºº@ A
;
ººA B
if
»» 
(
»» 
courseExists
»» 
)
»» 
{
¼¼ 
try
½½ 
{
¾¾ 
return
¿¿ 
Ok
¿¿ 
(
¿¿ 
_courseService
¿¿ ,
.
¿¿, -!
GetTopicsByCourseId
¿¿- @
(
¿¿@ A
courseId
¿¿A I
)
¿¿I J
)
¿¿J K
;
¿¿K L
}
ÀÀ 
catch
ÁÁ 
(
ÁÁ '
InvalidOperationException
ÁÁ 0
ex
ÁÁ1 3
)
ÁÁ3 4
{
ÂÂ 
	TMSLogger
ÃÃ 
.
ÃÃ $
ServiceInjectionFailed
ÃÃ 4
(
ÃÃ4 5
ex
ÃÃ5 7
,
ÃÃ7 8
_logger
ÃÃ9 @
,
ÃÃ@ A
nameof
ÃÃB H
(
ÃÃH I
CourseController
ÃÃI Y
)
ÃÃY Z
,
ÃÃZ [
nameof
ÃÃ\ b
(
ÃÃb c!
GetTopicsByCourseId
ÃÃc v
)
ÃÃv w
)
ÃÃw x
;
ÃÃx y
return
ÄÄ 
Problem
ÄÄ "
(
ÄÄ" #
)
ÄÄ# $
;
ÄÄ$ %
}
ÅÅ 
}
ÆÆ 
return
ÇÇ 
NotFound
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÈÈ 	
[
ÙÙ 	
HttpGet
ÙÙ	 
(
ÙÙ 
$str
ÙÙ 6
)
ÙÙ6 7
]
ÙÙ7 8
public
ÚÚ 
IActionResult
ÚÚ 
GetTopicByIds
ÚÚ *
(
ÚÚ* +
int
ÚÚ+ .
courseId
ÚÚ/ 7
,
ÚÚ7 8
int
ÚÚ9 <
topicId
ÚÚ= D
)
ÚÚD E
{
ÛÛ 	
var
ÜÜ 
topicExists
ÜÜ 
=
ÜÜ 
_validation
ÜÜ )
.
ÜÜ) *
TopicExists
ÜÜ* 5
(
ÜÜ5 6
topicId
ÜÜ6 =
,
ÜÜ= >
courseId
ÜÜ> F
)
ÜÜF G
;
ÜÜG H
if
ÝÝ 
(
ÝÝ 
topicExists
ÝÝ 
)
ÝÝ 
{
ÞÞ 
try
ßß 
{
àà 
int
áá 
userId
áá 
=
áá  
ControllerHelper
áá! 1
.
áá1 2
GetCurrentUserId
áá2 B
(
ááB C
this
ááC G
.
ááG H
HttpContext
ááH S
)
ááS T
;
ááT U
var
ââ 
result
ââ 
=
ââ  
_courseService
ââ! /
.
ââ/ 0
GetTopicById
ââ0 <
(
ââ< =
courseId
ââ= E
,
ââE F
topicId
ââG N
,
ââN O
userId
ââP V
)
ââV W
;
ââW X
if
ãã 
(
ãã 
result
ãã 
is
ãã !
not
ãã" %
null
ãã& *
)
ãã* +
return
ãã, 2
Ok
ãã3 5
(
ãã5 6
result
ãã6 <
)
ãã< =
;
ãã= >
}
ää 
catch
åå 
(
åå '
InvalidOperationException
åå 0
ex
åå1 3
)
åå3 4
{
ææ 
	TMSLogger
çç 
.
çç $
ServiceInjectionFailed
çç 4
(
çç4 5
ex
çç5 7
,
çç7 8
_logger
çç9 @
,
çç@ A
nameof
ççB H
(
ççH I
CourseController
ççI Y
)
ççY Z
,
ççZ [
nameof
çç\ b
(
ççb c
GetTopicByIds
ççc p
)
ççp q
)
ççq r
;
ççr s
return
èè 
Problem
èè "
(
èè" #
)
èè# $
;
èè$ %
}
éé 
}
êê 
return
ëë 
NotFound
ëë 
(
ëë 
)
ëë 
;
ëë 
}
ìì 	
[
 	
HttpPost
	 
(
 
$str
 
)
 
]
 
[
 	
	Authorize
	 
(
 
Roles
 
=
 
$str
 1
)
1 2
]
2 3
public
 
IActionResult
 
CreateTopic
 (
(
( )
Topic
) .
topic
/ 4
)
4 5
{
 	
if
 
(
 
!
 

ModelState
 
.
 
IsValid
 #
)
# $
return
% +

BadRequest
, 6
(
6 7

ModelState
7 A
)
A B
;
B C
try
 
{
 
var
 
IsValid
 
=
 
_validation
 )
.
) *
ValidateTopic
* 7
(
7 8
topic
8 =
)
= >
;
> ?
if
 
(
 
IsValid
 
.
 
ContainsKey
 '
(
' (
$str
( 0
)
0 1
)
1 2
return
3 9

BadRequest
: D
(
D E
$str
E s
)
s t
;
t u
if
 
(
 
IsValid
 
.
 
ContainsKey
 '
(
' (
$str
( 1
)
1 2
)
2 3
{
 
topic
 
.
 
	CreatedBy
 #
=
$ %
ControllerHelper
& 6
.
6 7
GetCurrentUserId
7 G
(
G H
this
H L
.
L M
HttpContext
M X
)
X Y
;
Y Z
var
 
res
 
=
 
_courseService
 ,
.
, -
CreateTopic
- 8
(
8 9
topic
9 >
)
> ?
;
? @
if
 
(
 
res
 
.
 
ContainsKey
 '
(
' (
$str
( 1
)
1 2
)
2 3
return
4 :
Ok
; =
(
= >
new
> A
{
B C
Response
D L
=
M N
$str
O s
}
t u
)
u v
;
v w
}
 
return
 

BadRequest
 !
(
! "
IsValid
" )
)
) *
;
* +
}
 
catch
 
(
 '
InvalidOperationException
 ,
ex
- /
)
/ 0
{
 
	TMSLogger
 
.
 $
ServiceInjectionFailed
 0
(
0 1
ex
1 3
,
3 4
_logger
5 <
,
< =
nameof
> D
(
D E
CourseController
E U
)
U V
,
V W
nameof
X ^
(
^ _
CreateTopic
_ j
)
j k
)
k l
;
l m
return
 
Problem
 
(
 
)
  
;
  !
}
 
}
 	
[
¸¸ 	
HttpPut
¸¸	 
(
¸¸ 
$str
¸¸ 
)
¸¸ 
]
¸¸ 
[
ºº 	
	Authorize
ºº	 
(
ºº 
Roles
ºº 
=
ºº 
$str
ºº 1
)
ºº1 2
]
ºº2 3
public
»» 
IActionResult
»» 
UpdateTopic
»» (
(
»»( )
Topic
»») .
topic
»»/ 4
)
»»4 5
{
¼¼ 	
if
½½ 
(
½½ 
!
½½ 

ModelState
½½ 
.
½½ 
IsValid
½½ #
)
½½# $
return
½½% +

BadRequest
½½, 6
(
½½6 7

ModelState
½½7 A
)
½½A B
;
½½B C
var
¾¾ 
topicExists
¾¾ 
=
¾¾ 
_validation
¾¾ )
.
¾¾) *
TopicExists
¾¾* 5
(
¾¾5 6
topic
¾¾6 ;
.
¾¾; <
TopicId
¾¾< C
,
¾¾C D
topic
¾¾D I
.
¾¾I J
CourseId
¾¾J R
)
¾¾R S
;
¾¾S T
if
¿¿ 
(
¿¿ 
topicExists
¿¿ 
)
¿¿ 
{
ÀÀ 
try
ÁÁ 
{
ÂÂ 
var
ÃÃ 
IsValid
ÃÃ 
=
ÃÃ  !
_validation
ÃÃ" -
.
ÃÃ- .
ValidateTopic
ÃÃ. ;
(
ÃÃ; <
topic
ÃÃ< A
)
ÃÃA B
;
ÃÃB C
if
ÄÄ 
(
ÄÄ 
IsValid
ÄÄ 
.
ÄÄ  
ContainsKey
ÄÄ  +
(
ÄÄ+ ,
$str
ÄÄ, 5
)
ÄÄ5 6
&&
ÄÄ7 9
IsValid
ÄÄ: A
.
ÄÄA B
ContainsKey
ÄÄB M
(
ÄÄM N
$str
ÄÄN V
)
ÄÄV W
)
ÄÄW X
{
ÅÅ 
topic
ÆÆ 
.
ÆÆ 
	UpdatedBy
ÆÆ '
=
ÆÆ( )
ControllerHelper
ÆÆ* :
.
ÆÆ: ;
GetCurrentUserId
ÆÆ; K
(
ÆÆK L
this
ÆÆL P
.
ÆÆP Q
HttpContext
ÆÆQ \
)
ÆÆ\ ]
;
ÆÆ] ^
var
ÇÇ 
res
ÇÇ 
=
ÇÇ  !
_courseService
ÇÇ" 0
.
ÇÇ0 1
UpdateTopic
ÇÇ1 <
(
ÇÇ< =
topic
ÇÇ= B
)
ÇÇB C
;
ÇÇC D
if
ÈÈ 
(
ÈÈ 
res
ÈÈ 
.
ÈÈ  
ContainsKey
ÈÈ  +
(
ÈÈ+ ,
$str
ÈÈ, 5
)
ÈÈ5 6
&&
ÈÈ7 9
res
ÈÈ: =
.
ÈÈ= >
ContainsKey
ÈÈ> I
(
ÈÈI J
$str
ÈÈJ R
)
ÈÈR S
)
ÈÈS T
return
ÈÈU [
Ok
ÈÈ\ ^
(
ÈÈ^ _
new
ÈÈ_ b
{
ÈÈc d
Response
ÈÈe m
=
ÈÈn o
$strÈÈp 
}ÈÈ 
)ÈÈ 
;ÈÈ 
}
ÉÉ 
return
ÊÊ 

BadRequest
ÊÊ %
(
ÊÊ% &
IsValid
ÊÊ& -
)
ÊÊ- .
;
ÊÊ. /
}
ËË 
catch
ÌÌ 
(
ÌÌ '
InvalidOperationException
ÌÌ 0
ex
ÌÌ1 3
)
ÌÌ3 4
{
ÍÍ 
	TMSLogger
ÎÎ 
.
ÎÎ $
ServiceInjectionFailed
ÎÎ 4
(
ÎÎ4 5
ex
ÎÎ5 7
,
ÎÎ7 8
_logger
ÎÎ9 @
,
ÎÎ@ A
nameof
ÎÎB H
(
ÎÎH I
CourseController
ÎÎI Y
)
ÎÎY Z
,
ÎÎZ [
nameof
ÎÎ\ b
(
ÎÎb c
UpdateTopic
ÎÎc n
)
ÎÎn o
)
ÎÎo p
;
ÎÎp q
return
ÏÏ 
Problem
ÏÏ "
(
ÏÏ" #
)
ÏÏ# $
;
ÏÏ$ %
}
ÐÐ 
}
ÑÑ 
return
ÒÒ 
NotFound
ÒÒ 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ 
}
ÓÓ 	
[
ää 	
HttpPut
ää	 
(
ää 
$str
ää >
)
ää> ?
]
ää? @
[
ææ 	
	Authorize
ææ	 
(
ææ 
Roles
ææ 
=
ææ 
$str
ææ 1
)
ææ1 2
]
ææ2 3
public
çç 
IActionResult
çç 
DisableTopic
çç )
(
çç) *
int
çç* -
courseId
çç. 6
,
çç6 7
int
çç7 :
topicId
çç; B
)
ççB C
{
èè 	
var
éé 
topicExists
éé 
=
éé 
_validation
éé )
.
éé) *
TopicExists
éé* 5
(
éé5 6
topicId
éé6 =
,
éé= >
courseId
éé> F
)
ééF G
;
ééG H
if
êê 
(
êê 
topicExists
êê 
)
êê 
{
ëë 
try
ìì 
{
íí 
int
îî 
currentUserId
îî %
=
îî& '
ControllerHelper
îî( 8
.
îî8 9
GetCurrentUserId
îî9 I
(
îîI J
this
îîJ N
.
îîN O
HttpContext
îîO Z
)
îîZ [
;
îî[ \
var
ïï 
res
ïï 
=
ïï 
_courseService
ïï ,
.
ïï, -
DisableTopic
ïï- 9
(
ïï9 :
courseId
ïï: B
,
ïïB C
topicId
ïïC J
,
ïïJ K
currentUserId
ïïK X
)
ïïX Y
;
ïïY Z
if
ðð 
(
ðð 
res
ðð 
)
ðð 
return
ðð #
Ok
ðð$ &
(
ðð& '
$str
ðð' L
)
ððL M
;
ððM N
}
ññ 
catch
òò 
(
òò '
InvalidOperationException
òò 0
ex
òò1 3
)
òò3 4
{
óó 
	TMSLogger
ôô 
.
ôô $
ServiceInjectionFailed
ôô 4
(
ôô4 5
ex
ôô5 7
,
ôô7 8
_logger
ôô9 @
,
ôô@ A
nameof
ôôB H
(
ôôH I
CourseController
ôôI Y
)
ôôY Z
,
ôôZ [
nameof
ôô\ b
(
ôôb c
DisableTopic
ôôc o
)
ôôo p
)
ôôp q
;
ôôq r
return
õõ 
Problem
õõ "
(
õõ" #
)
õõ# $
;
õõ$ %
}
öö 
}
÷÷ 
return
øø 
NotFound
øø 
(
øø 
)
øø 
;
øø 
}
úú 	
[
 	
HttpPut
	 
(
 
$str
 
)
 
]
  
[
 	
	Authorize
	 
(
 
Roles
 
=
 
$str
 1
)
1 2
]
2 3
public
 
IActionResult
 !
AssignUsersToCourse
 0
(
0 1
AddUsersToCourse
1 A
data
B F
)
F G
{
 	
var
 
courseExists
 
=
 
_validation
 *
.
* +
CourseExists
+ 7
(
7 8
data
8 <
.
< =
CourseId
= E
)
E F
;
F G
if
 
(
 
courseExists
 
)
 
{
 
int
   
currentUserId
   !
=
  " #
ControllerHelper
  $ 4
.
  4 5
GetCurrentUserId
  5 E
(
  E F
this
  F J
.
  J K
HttpContext
  K V
)
  V W
;
  W X
var
¡¡ 
result
¡¡ 
=
¡¡ 
_courseService
¡¡ +
.
¡¡+ ,
AddUsersToCourse
¡¡, <
(
¡¡< =
data
¡¡= A
,
¡¡A B
currentUserId
¡¡B O
)
¡¡O P
;
¡¡P Q
return
¢¢ 
Ok
¢¢ 
(
¢¢ 
result
¢¢  
)
¢¢  !
;
¢¢! "
}
££ 
return
¤¤ 
NotFound
¤¤ 
(
¤¤ 
)
¤¤ 
;
¤¤ 
}
¥¥ 	
[
ÃÃ 	
HttpPut
ÃÃ	 
(
ÃÃ 
$str
ÃÃ 
)
ÃÃ 
]
ÃÃ  
[
ÅÅ 	
	Authorize
ÅÅ	 
(
ÅÅ 
Roles
ÅÅ 
=
ÅÅ 
$str
ÅÅ 1
)
ÅÅ1 2
]
ÅÅ2 3
public
ÆÆ 
IActionResult
ÆÆ #
RemoveUsersFromCourse
ÆÆ 2
(
ÆÆ2 3
AddUsersToCourse
ÆÆ3 C
data
ÆÆD H
)
ÆÆH I
{
ÇÇ 	
var
ÈÈ 
courseExists
ÈÈ 
=
ÈÈ 
_validation
ÈÈ *
.
ÈÈ* +
CourseExists
ÈÈ+ 7
(
ÈÈ7 8
data
ÈÈ8 <
.
ÈÈ< =
CourseId
ÈÈ= E
)
ÈÈE F
;
ÈÈF G
if
ÉÉ 
(
ÉÉ 
courseExists
ÉÉ 
)
ÉÉ 
{
ÊÊ 
int
ËË 
currentUserId
ËË !
=
ËË" #
ControllerHelper
ËË$ 4
.
ËË4 5
GetCurrentUserId
ËË5 E
(
ËËE F
this
ËËF J
.
ËËJ K
HttpContext
ËËK V
)
ËËV W
;
ËËW X
var
ÌÌ 
result
ÌÌ 
=
ÌÌ 
_courseService
ÌÌ +
.
ÌÌ+ ,#
RemoveUsersFromCourse
ÌÌ, A
(
ÌÌA B
data
ÌÌB F
,
ÌÌF G
currentUserId
ÌÌG T
)
ÌÌT U
;
ÌÌU V
return
ÍÍ 
Ok
ÍÍ 
(
ÍÍ 
result
ÍÍ  
)
ÍÍ  !
;
ÍÍ! "
}
ÎÎ 
return
ÏÏ 
NotFound
ÏÏ 
(
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÐÐ 	
[
áá 	
HttpGet
áá	 
(
áá 
$str
áá B
)
ááB C
]
ááC D
public
ââ 
IActionResult
ââ %
GetAssignmentsByTopicId
ââ 4
(
ââ4 5
int
ââ5 8
courseId
ââ9 A
,
ââA B
int
ââC F
topicId
ââG N
)
ââN O
{
ãã 	
var
ää 
topicExists
ää 
=
ää 
_validation
ää )
.
ää) *
TopicExists
ää* 5
(
ää5 6
topicId
ää6 =
,
ää= >
courseId
ää> F
)
ääF G
;
ääG H
if
åå 
(
åå 
topicExists
åå 
)
åå 
{
ææ 
try
çç 
{
èè 
return
éé 
Ok
éé 
(
éé 
_courseService
éé ,
.
éé, -%
GetAssignmentsByTopicId
éé- D
(
ééD E
topicId
ééE L
)
ééL M
)
ééM N
;
ééN O
}
êê 
catch
ëë 
(
ëë '
InvalidOperationException
ëë 0
ex
ëë1 3
)
ëë3 4
{
ìì 
	TMSLogger
íí 
.
íí $
ServiceInjectionFailed
íí 4
(
íí4 5
ex
íí5 7
,
íí7 8
_logger
íí9 @
,
íí@ A
nameof
ííB H
(
ííH I
CourseController
ííI Y
)
ííY Z
,
ííZ [
nameof
íí\ b
(
ííb c%
GetAssignmentsByTopicId
ííc z
)
ííz {
)
íí{ |
;
íí| }
return
îî 
Problem
îî "
(
îî" #
)
îî# $
;
îî$ %
}
ïï 
}
ðð 
return
ññ 
NotFound
ññ 
(
ññ 
)
ññ 
;
ññ 
}
òò 	
[
 	
HttpGet
	 
(
 
$str
 P
)
P Q
]
Q R
public
 
IActionResult
 6
(GetAssignmentByCourseIdTopicIdAndOwnerId
 E
(
E F
int
F I
courseId
J R
,
R S
int
T W
topicId
X _
,
_ `
int
a d
ownerId
e l
)
l m
{
 	
var
 
assignmentExists
  
=
! "
_validation
# .
.
. /
AssignmentExists
/ ?
(
? @
courseId
@ H
,
H I
topicId
I P
,
P Q
ownerId
Q X
)
X Y
;
Y Z
if
 
(
 
assignmentExists
 
)
  
{
 
try
 
{
 
var
 
result
 
=
  
_courseService
! /
.
/ 06
(GetAssignmentByCourseIdTopicIdAndOwnerId
0 X
(
X Y
courseId
Y a
,
a b
topicId
b i
,
i j
ownerId
j q
)
q r
;
r s
if
 
(
 
result
 
is
 !
not
" %
null
& *
)
* +
return
, 2
Ok
3 5
(
5 6
result
6 <
)
< =
;
= >
}
 
catch
 
(
 '
InvalidOperationException
 0
ex
1 3
)
3 4
{
 
	TMSLogger
 
.
 $
ServiceInjectionFailed
 4
(
4 5
ex
5 7
,
7 8
_logger
9 @
,
@ A
nameof
B H
(
H I
CourseController
I Y
)
Y Z
,
Z [
nameof
\ b
(
b c7
(GetAssignmentByCourseIdTopicIdAndOwnerIdc 
) 
) 
; 
return
 
Problem
 "
(
" #
)
# $
;
$ %
}
 
}
 
return
 
NotFound
 
(
 
)
 
;
 
}
 	
[
¯¯ 	
HttpPost
¯¯	 
(
¯¯ 
$str
¯¯ 
)
¯¯ 
]
¯¯  
[
±± 	
	Authorize
±±	 
(
±± 
Roles
±± 
=
±± 
$str
±± ,
)
±±, -
]
±±- .
public
²² 
IActionResult
²² 
CreateAssignment
²² -
(
²²- .

Assignment
²². 8

assignment
²²9 C
)
²²C D
{
³³ 	
if
´´ 
(
´´ 
!
´´ 

ModelState
´´ 
.
´´ 
IsValid
´´ #
)
´´# $
return
´´% +

BadRequest
´´, 6
(
´´6 7

ModelState
´´7 A
)
´´A B
;
´´B C
try
µµ 
{
¶¶ 
var
·· 
IsValid
·· 
=
·· 
_validation
·· )
.
··) * 
ValidateAssignment
··* <
(
··< =

assignment
··= G
)
··G H
;
··H I
if
¸¸ 
(
¸¸ 
IsValid
¸¸ 
.
¸¸ 
ContainsKey
¸¸ '
(
¸¸' (
$str
¸¸( 0
)
¸¸0 1
)
¸¸1 2
return
¸¸3 9

BadRequest
¸¸: D
(
¸¸D E
$str
¸¸E }
)
¸¸} ~
;
¸¸~ 
if
¹¹ 
(
¹¹ 
IsValid
¹¹ 
.
¹¹ 
ContainsKey
¹¹ '
(
¹¹' (
$str
¹¹( 1
)
¹¹1 2
)
¹¹2 3
{
ºº 

assignment
»» 
.
»» 
	CreatedBy
»» (
=
»») *
ControllerHelper
»»+ ;
.
»»; <
GetCurrentUserId
»»< L
(
»»L M
this
»»M Q
.
»»Q R
HttpContext
»»R ]
)
»»] ^
;
»»^ _
var
¼¼ 
res
¼¼ 
=
¼¼ 
_courseService
¼¼ ,
.
¼¼, -
CreateAssignment
¼¼- =
(
¼¼= >

assignment
¼¼> H
)
¼¼H I
;
¼¼I J
if
½½ 
(
½½ 
res
½½ 
.
½½ 
ContainsKey
½½ '
(
½½' (
$str
½½( 1
)
½½1 2
)
½½2 3
return
½½4 :
Ok
½½; =
(
½½= >
new
½½> A
{
½½B C
Response
½½D L
=
½½M N
$str
½½O z
}
½½{ |
)
½½| }
;
½½} ~
}
¾¾ 
return
¿¿ 

BadRequest
¿¿ !
(
¿¿! "
IsValid
¿¿" )
)
¿¿) *
;
¿¿* +
}
ÀÀ 
catch
ÁÁ 
(
ÁÁ '
InvalidOperationException
ÁÁ ,
ex
ÁÁ- /
)
ÁÁ/ 0
{
ÂÂ 
	TMSLogger
ÃÃ 
.
ÃÃ $
ServiceInjectionFailed
ÃÃ 0
(
ÃÃ0 1
ex
ÃÃ1 3
,
ÃÃ3 4
_logger
ÃÃ5 <
,
ÃÃ< =
nameof
ÃÃ> D
(
ÃÃD E
CourseController
ÃÃE U
)
ÃÃU V
,
ÃÃV W
nameof
ÃÃX ^
(
ÃÃ^ _
CreateAssignment
ÃÃ_ o
)
ÃÃo p
)
ÃÃp q
;
ÃÃq r
}
ÄÄ 
return
ÅÅ 
Problem
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÆÆ 	
[
àà 	
HttpPut
àà	 
(
àà 
$str
àà 
)
àà 
]
àà 
[
ââ 	
	Authorize
ââ	 
(
ââ 
Roles
ââ 
=
ââ 
$str
ââ ,
)
ââ, -
]
ââ- .
public
ãã 
IActionResult
ãã 
UpdateAssignment
ãã -
(
ãã- .

Assignment
ãã. 8

assignment
ãã9 C
)
ããC D
{
ää 	
if
åå 
(
åå 
!
åå 

ModelState
åå 
.
åå 
IsValid
åå #
)
åå# $
return
åå% +

BadRequest
åå, 6
(
åå6 7

ModelState
åå7 A
)
ååA B
;
ååB C
var
ææ 
assignmentExists
ææ  
=
ææ! "
_validation
ææ# .
.
ææ. /
AssignmentExists
ææ/ ?
(
ææ? @

assignment
ææ@ J
.
ææJ K
CourseId
ææK S
,
ææS T

assignment
ææT ^
.
ææ^ _
TopicId
ææ_ f
,
ææf g

assignment
ææg q
.
ææq r
OwnerId
æær y
)
ææy z
;
ææz {
if
çç 
(
çç 
assignmentExists
çç 
)
çç  
{
èè 
try
éé 
{
êê 
var
ëë 
IsValid
ëë 
=
ëë  !
_validation
ëë" -
.
ëë- . 
ValidateAssignment
ëë. @
(
ëë@ A

assignment
ëëA K
)
ëëK L
;
ëëL M
if
ìì 
(
ìì 
IsValid
ìì 
.
ìì  
ContainsKey
ìì  +
(
ìì+ ,
$str
ìì, 5
)
ìì5 6
&&
ìì7 9
IsValid
ìì: A
.
ììA B
ContainsKey
ììB M
(
ììM N
$str
ììN V
)
ììV W
)
ììW X
{
íí 

assignment
îî "
.
îî" #
	UpdatedBy
îî# ,
=
îî- .
ControllerHelper
îî/ ?
.
îî? @
GetCurrentUserId
îî@ P
(
îîP Q
this
îîQ U
.
îîU V
HttpContext
îîV a
)
îîa b
;
îîb c
var
ïï 
res
ïï 
=
ïï  !
_courseService
ïï" 0
.
ïï0 1
UpdateAssignment
ïï1 A
(
ïïA B

assignment
ïïB L
)
ïïL M
;
ïïM N
if
ðð 
(
ðð 
res
ðð 
.
ðð  
ContainsKey
ðð  +
(
ðð+ ,
$str
ðð, 5
)
ðð5 6
&&
ðð7 9
IsValid
ðð: A
.
ððA B
ContainsKey
ððB M
(
ððM N
$str
ððN V
)
ððV W
)
ððW X
return
ððY _
Ok
ðð` b
(
ððb c
new
ððc f
{
ððg h
Response
ðði q
=
ððr s
$strððt 
}ðð 
)ðð  
;ðð  ¡
}
ññ 
return
òò 

BadRequest
òò %
(
òò% &
IsValid
òò& -
)
òò- .
;
òò. /
}
óó 
catch
ôô 
(
ôô '
InvalidOperationException
ôô 0
ex
ôô1 3
)
ôô3 4
{
õõ 
	TMSLogger
öö 
.
öö $
ServiceInjectionFailed
öö 4
(
öö4 5
ex
öö5 7
,
öö7 8
_logger
öö9 @
,
öö@ A
nameof
ööB H
(
ööH I
CourseController
ööI Y
)
ööY Z
,
ööZ [
nameof
öö\ b
(
ööb c
UpdateAssignment
ööc s
)
öös t
)
ööt u
;
ööu v
}
÷÷ 
return
øø 
Problem
øø 
(
øø 
)
øø  
;
øø  !
}
ùù 
return
úú 
NotFound
úú 
(
úú 
)
úú 
;
úú 
}
ûû 	
[
ýý 	
HttpPut
ýý	 
(
ýý 
$str
ýý 
)
ýý 
]
ýý 
[
ÿÿ 	
	Authorize
ÿÿ	 
(
ÿÿ 
Roles
ÿÿ 
=
ÿÿ 
$str
ÿÿ ,
)
ÿÿ, -
]
ÿÿ- .
public
 
IActionResult
 
MarkAttendance
 +
(
+ ,

Attendance
, 6

attendance
7 A
)
A B
{
 	
if
 
(
 
!
 

ModelState
 
.
 
IsValid
 #
)
# $
return
% +

BadRequest
, 6
(
6 7

ModelState
7 A
)
A B
;
B C
try
 
{
 
var
 
IsValid
 
=
 
_validation
 )
.
) * 
ValidateAttendance
* <
(
< =

attendance
= G
)
G H
;
H I
if
 
(
 
IsValid
 
.
 
ContainsKey
 '
(
' (
$str
( 0
)
0 1
)
1 2
return
3 9

BadRequest
: D
(
D E
$str
E p
)
p q
;
q r
if
 
(
 
IsValid
 
.
 
ContainsKey
 '
(
' (
$str
( 1
)
1 2
)
2 3
{
 
int
 
currentUserId
 %
=
& '
ControllerHelper
( 8
.
8 9
GetCurrentUserId
9 I
(
I J
this
J N
.
N O
HttpContext
O Z
)
Z [
;
[ \

attendance
 
.
 
	CreatedBy
 (
=
) *
currentUserId
+ 8
;
8 9

attendance
 
.
 
OwnerId
 &
=
' (
currentUserId
) 6
;
6 7
var
 
res
 
=
 
_courseService
 ,
.
, -
MarkAttendance
- ;
(
; <

attendance
< F
)
F G
;
G H
if
 
(
 
res
 
.
 
ContainsKey
 '
(
' (
$str
( 1
)
1 2
)
2 3
return
4 :
Ok
; =
(
= >
new
> A
{
B C
Response
D L
=
M N
$str
O w
}
x y
)
y z
;
z {
}
 
return
 

BadRequest
 !
(
! "
IsValid
" )
)
) *
;
* +
}
 
catch
 
(
 '
InvalidOperationException
 ,
ex
- /
)
/ 0
{
 
	TMSLogger
 
.
 $
ServiceInjectionFailed
 0
(
0 1
ex
1 3
,
3 4
_logger
5 <
,
< =
nameof
> D
(
D E
CourseController
E U
)
U V
,
V W
nameof
X ^
(
^ _
MarkAttendance
_ m
)
m n
)
n o
;
o p
}
 
return
 
Problem
 
(
 
)
 
;
 
}
 	
}
 
} g
pC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Controllers\DepartmentController.cs
	namespace 	
TMS
 
. 
API 
. 
Controllers 
{ 
[ 
ApiController 
] 
[		 
Route		 

(		
 
$str		 
)		 
]		 
public

 

class

  
DepartmentController

 %
:

& '
ControllerBase

( 6
{ 
private 
readonly 
ILogger  
<  ! 
DepartmentController! 5
>5 6
_logger7 >
;> ?
private 
readonly 
DepartmentService *
_departmentService, >
;> ?
private 
readonly 

Validation #
_validation$ /
;/ 0
public  
DepartmentController #
(# $
UnitOfService$ 1
service2 9
,9 :
ILogger; B
<B C 
DepartmentControllerC W
>W X
loggerY _
)_ `
{ 	
_logger 
= 
logger 
; 
_departmentService 
= 
service  '
.' (
DepartmentService( 9
;9 :
_validation 
= 
service !
.! "

Validation" ,
;, -
} 	
["" 	
HttpGet""	 
("" 
$str"" 
)"" 
]""  
public$$ 
IActionResult$$ 
GetDepartments$$ +
($$+ ,
)$$, -
{%% 	
try&& 
{'' 
return(( 
Ok(( 
((( 
_departmentService(( ,
.((, -
GetDepartments((- ;
(((; <
)((< =
)((= >
;((> ?
})) 
catch** 
(** %
InvalidOperationException** ,
ex**- /
)**/ 0
{++ 
	TMSLogger,, 
.,, "
ServiceInjectionFailed,, 0
(,,0 1
ex,,1 3
,,,3 4
_logger,,5 <
,,,< =
nameof,,> D
(,,D E 
DepartmentController,,E Y
),,Y Z
,,,Z [
nameof,,\ b
(,,b c
GetDepartments,,c q
),,q r
),,r s
;,,s t
return-- 
Problem-- 
(-- 
)--  
;--  !
}.. 
}// 	
[?? 	
HttpGet??	 
(?? 
$str?? %
)??% &
]??& '
publicAA 
IActionResultAA 
GetDepartmentByIdAA .
(AA. /
intAA/ 2
departmentIdAA3 ?
)AA? @
{BB 	
varCC 
departmentExistsCC  
=CC! "
_validationCC# .
.CC. /
DepartmentExistsCC/ ?
(CC? @
departmentIdCC@ L
)CCL M
;CCM N
ifDD 
(DD 
departmentExistsDD 
)DD  
{EE 
tryFF 
{GG 
varHH 
resultHH 
=HH  
_departmentServiceHH! 3
.HH3 4
GetDepartmentByIdHH4 E
(HHE F
departmentIdHHF R
)HHR S
;HHS T
ifII 
(II 
resultII 
isII !
notII" %
nullII& *
)II* +
returnII, 2
OkII3 5
(II5 6
resultII6 <
)II< =
;II= >
returnJJ 
NotFoundJJ #
(JJ# $
)JJ$ %
;JJ% &
}KK 
catchLL 
(LL %
InvalidOperationExceptionLL 0
exLL1 3
)LL3 4
{MM 
	TMSLoggerNN 
.NN "
ServiceInjectionFailedNN 4
(NN4 5
exNN5 7
,NN7 8
_loggerNN9 @
,NN@ A
nameofNNB H
(NNH I 
DepartmentControllerNNI ]
)NN] ^
,NN^ _
nameofNN` f
(NNf g
GetDepartmentByIdNNg x
)NNx y
)NNy z
;NNz {
returnOO 
ProblemOO "
(OO" #
)OO# $
;OO$ %
}PP 
}QQ 
returnRR 
NotFoundRR 
(RR 
)RR 
;RR 
}SS 	
[ii 	
HttpPostii	 
(ii 
$strii 
)ii 
]ii  
[jj 	$
ValidateAntiForgeryTokenjj	 !
]jj! "
[kk 	
	Authorizekk	 
(kk 
Roleskk 
=kk 
$strkk 1
)kk1 2
]kk2 3
publicll 
IActionResultll 
CreateDepartmentll -
(ll- .

Departmentll. 8

departmentll9 C
)llC D
{mm 	
ifnn 
(nn 
!nn 

ModelStatenn 
.nn 
IsValidnn #
)nn# $
returnnn% +

BadRequestnn, 6
(nn6 7

ModelStatenn7 A
)nnA B
;nnB C
tryoo 
{pp 
varqq 
IsValidqq 
=qq 
_validationqq )
.qq) *
ValidateDepartmentqq* <
(qq< =

departmentqq= G
)qqG H
;qqH I
ifrr 
(rr 
IsValidrr 
.rr 
ContainsKeyrr '
(rr' (
$strrr( 0
)rr0 1
)rr1 2
returnrr3 9

BadRequestrr: D
(rrD E
$strrrE }
)rr} ~
;rr~ 
ifss 
(ss 
IsValidss 
.ss 
ContainsKeyss '
(ss' (
$strss( 1
)ss1 2
)ss2 3
{tt 

departmentuu 
.uu 
	CreatedByuu (
=uu) *
ControllerHelperuu+ ;
.uu; <
GetCurrentUserIduu< L
(uuL M
thisuuM Q
.uuQ R
HttpContextuuR ]
)uu] ^
;uu^ _
varvv 
resvv 
=vv 
_departmentServicevv 0
.vv0 1
CreateDepartmentvv1 A
(vvA B

departmentvvB L
)vvL M
;vvM N
ifww 
(ww 
resww 
.ww 
ContainsKeyww '
(ww' (
$strww( 1
)ww1 2
)ww2 3
returnww4 :
Okww; =
(ww= >
newww> A
{wwB C
ResponsewwD L
=wwM N
$strwwO x
}wwy z
)wwz {
;ww{ |
}xx 
returnyy 

BadRequestyy !
(yy! "
IsValidyy" )
)yy) *
;yy* +
}zz 
catch{{ 
({{ %
InvalidOperationException{{ ,
ex{{- /
){{/ 0
{|| 
	TMSLogger}} 
.}} "
ServiceInjectionFailed}} 0
(}}0 1
ex}}1 3
,}}3 4
_logger}}5 <
,}}< =
nameof}}> D
(}}D E 
DepartmentController}}E Y
)}}Y Z
,}}Z [
nameof}}\ b
(}}b c
CreateDepartment}}c s
)}}s t
)}}t u
;}}u v
return~~ 
Problem~~ 
(~~ 
)~~  
;~~  !
} 
}
 	
[
 	
HttpPut
	 
(
 
$str
 
)
 
]
 
[
 	
	Authorize
	 
(
 
Roles
 
=
 
$str
 1
)
1 2
]
2 3
public
 
IActionResult
 
UpdateDepartment
 -
(
- .

Department
. 8

department
9 C
)
C D
{
 	
if
 
(
 
!
 

ModelState
 
.
 
IsValid
 #
)
# $
return
% +

BadRequest
, 6
(
6 7

ModelState
7 A
)
A B
;
B C
var
 
departmentExists
  
=
! "
_validation
# .
.
. /
DepartmentExists
/ ?
(
? @

department
@ J
.
J K
Id
K M
)
M N
;
N O
if
 
(
 
departmentExists
 
)
  
{
   
try
¡¡ 
{
¢¢ 
var
££ 
IsValid
££ 
=
££  !
_validation
££" -
.
££- . 
ValidateDepartment
££. @
(
££@ A

department
££A K
)
££K L
;
££L M
if
¤¤ 
(
¤¤ 
IsValid
¤¤ 
.
¤¤  
ContainsKey
¤¤  +
(
¤¤+ ,
$str
¤¤, 5
)
¤¤5 6
&&
¤¤7 9
IsValid
¤¤: A
.
¤¤A B
ContainsKey
¤¤B M
(
¤¤M N
$str
¤¤N V
)
¤¤V W
)
¤¤W X
{
¥¥ 

department
¦¦ "
.
¦¦" #
	UpdatedBy
¦¦# ,
=
¦¦- .
ControllerHelper
¦¦/ ?
.
¦¦? @
GetCurrentUserId
¦¦@ P
(
¦¦P Q
this
¦¦Q U
.
¦¦U V
HttpContext
¦¦V a
)
¦¦a b
;
¦¦b c
var
§§ 
res
§§ 
=
§§  ! 
_departmentService
§§" 4
.
§§4 5
UpdateDepartment
§§5 E
(
§§E F

department
§§F P
)
§§P Q
;
§§Q R
if
¨¨ 
(
¨¨ 
res
¨¨ 
.
¨¨  
ContainsKey
¨¨  +
(
¨¨+ ,
$str
¨¨, 5
)
¨¨5 6
&&
¨¨7 9
res
¨¨: =
.
¨¨= >
ContainsKey
¨¨> I
(
¨¨I J
$str
¨¨J R
)
¨¨R S
)
¨¨S T
return
¨¨U [
Ok
¨¨\ ^
(
¨¨^ _
new
¨¨_ b
{
¨¨c d
Response
¨¨e m
=
¨¨n o
$str¨¨p 
}¨¨ 
)¨¨ 
;¨¨ 
}
©© 
return
ªª 

BadRequest
ªª %
(
ªª% &
IsValid
ªª& -
)
ªª- .
;
ªª. /
}
«« 
catch
¬¬ 
(
¬¬ '
InvalidOperationException
¬¬ 0
ex
¬¬1 3
)
¬¬3 4
{
­­ 
	TMSLogger
®® 
.
®® $
ServiceInjectionFailed
®® 4
(
®®4 5
ex
®®5 7
,
®®7 8
_logger
®®9 @
,
®®@ A
nameof
®®B H
(
®®H I"
DepartmentController
®®I ]
)
®®] ^
,
®®^ _
nameof
®®` f
(
®®f g
UpdateDepartment
®®g w
)
®®w x
)
®®x y
;
®®y z
return
¯¯ 
Problem
¯¯ "
(
¯¯" #
)
¯¯# $
;
¯¯$ %
}
°° 
}
±± 
return
²² 
NotFound
²² 
(
²² 
)
²² 
;
²² 
}
³³ 	
[
ÃÃ 	
HttpPut
ÃÃ	 
(
ÃÃ 
$str
ÃÃ -
)
ÃÃ- .
]
ÃÃ. /
[
ÅÅ 	
	Authorize
ÅÅ	 
(
ÅÅ 
Roles
ÅÅ 
=
ÅÅ 
$str
ÅÅ 1
)
ÅÅ1 2
]
ÅÅ2 3
public
ÆÆ 
IActionResult
ÆÆ 
DisableDepartment
ÆÆ .
(
ÆÆ. /
int
ÆÆ/ 2
departmentId
ÆÆ3 ?
)
ÆÆ? @
{
ÇÇ 	
var
ÈÈ 
departmentExists
ÈÈ  
=
ÈÈ! "
_validation
ÈÈ# .
.
ÈÈ. /
DepartmentExists
ÈÈ/ ?
(
ÈÈ? @
departmentId
ÈÈ@ L
)
ÈÈL M
;
ÈÈM N
if
ÉÉ 
(
ÉÉ 
departmentExists
ÉÉ 
)
ÉÉ  
{
ÊÊ 
try
ËË 
{
ÌÌ 
int
ÍÍ 
currentUserId
ÍÍ %
=
ÍÍ& '
ControllerHelper
ÍÍ( 8
.
ÍÍ8 9
GetCurrentUserId
ÍÍ9 I
(
ÍÍI J
this
ÍÍJ N
.
ÍÍN O
HttpContext
ÍÍO Z
)
ÍÍZ [
;
ÍÍ[ \
var
ÎÎ 
res
ÎÎ 
=
ÎÎ  
_departmentService
ÎÎ 0
.
ÎÎ0 1
DisableDepartment
ÎÎ1 B
(
ÎÎB C
departmentId
ÎÎC O
,
ÎÎO P
currentUserId
ÎÎQ ^
)
ÎÎ^ _
;
ÎÎ_ `
if
ÏÏ 
(
ÏÏ 
res
ÏÏ 
)
ÏÏ 
return
ÏÏ #
Ok
ÏÏ$ &
(
ÏÏ& '
$str
ÏÏ' Q
)
ÏÏQ R
;
ÏÏR S
}
ÐÐ 
catch
ÑÑ 
(
ÑÑ '
InvalidOperationException
ÑÑ 0
ex
ÑÑ1 3
)
ÑÑ3 4
{
ÒÒ 
	TMSLogger
ÓÓ 
.
ÓÓ $
ServiceInjectionFailed
ÓÓ 4
(
ÓÓ4 5
ex
ÓÓ5 7
,
ÓÓ7 8
_logger
ÓÓ9 @
,
ÓÓ@ A
nameof
ÓÓB H
(
ÓÓH I"
DepartmentController
ÓÓI ]
)
ÓÓ] ^
,
ÓÓ^ _
nameof
ÓÓ` f
(
ÓÓf g
DisableDepartment
ÓÓg x
)
ÓÓx y
)
ÓÓy z
;
ÓÓz {
return
ÔÔ 
Problem
ÔÔ "
(
ÔÔ" #
)
ÔÔ# $
;
ÔÔ$ %
}
ÕÕ 
}
ÖÖ 
return
×× 
NotFound
×× 
(
×× 
)
×× 
;
×× 
}
ØØ 	
}
ÙÙ 
}ÚÚ ø
nC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Controllers\FeedBackController.cs
	namespace 	
TMS
 
. 
API 
. 
Controllers 
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
FeedBackController #
:$ %
ControllerBase& 4
{ 
private 
readonly 
ILogger  
<  !
FeedBackController! 3
>3 4
_logger5 <
;< =
private 
readonly 
FeedbackService (
_feedbackService) 9
;9 :
private 
readonly 

Validation #
_validation$ /
;/ 0
public 
FeedBackController !
(! "
UnitOfService" /
service0 7
,7 8
ILogger9 @
<@ A
FeedBackControllerA S
>S T
loggerU [
)[ \
{ 	
_logger 
= 
logger 
; 
_feedbackService 
= 
service &
.& '
FeedbackService' 6
;6 7
_validation 
= 
service !
.! "

Validation" ,
;, -
} 	
[(( 	
HttpGet((	 
((( 
$str(( 8
)((8 9
]((9 :
public)) 
IActionResult)) 3
'GetCourseFeedbackByCourseIdAndTraineeId)) D
())D E
int))E H
courseId))I Q
,))Q R
int))R U
	traineeId))V _
)))_ `
{** 	
var++ 
feedbackExists++ 
=++  
_validation++! ,
.++, - 
CourseFeedbackExists++- A
(++A B
courseId++B J
,++J K
	traineeId++K T
)++T U
;++U V
if,, 
(,, 
feedbackExists,, 
),, 
{-- 
try.. 
{// 
var00 
result00 
=00  
_feedbackService00! 1
.001 23
'GetCourseFeedbackByCourseIdAndTraineeId002 Y
(00Y Z
courseId00Z b
,00b c
	traineeId00c l
)00l m
;00m n
if11 
(11 
result11 
is11 !
not11" %
null11& *
)11* +
return11, 2
Ok113 5
(115 6
result116 <
)11< =
;11= >
}22 
catch33 
(33 %
InvalidOperationException33 0
ex331 3
)333 4
{44 
	TMSLogger55 
.55 "
ServiceInjectionFailed55 4
(554 5
ex555 7
,557 8
_logger559 @
,55@ A
nameof55B H
(55H I
FeedBackController55I [
)55[ \
,55\ ]
nameof55^ d
(55d e4
'GetCourseFeedbackByCourseIdAndTraineeId	55e 
)
55 
)
55 
;
55 
return66 
Problem66 "
(66" #
)66# $
;66$ %
}77 
}88 
return99 
NotFound99 
(99 
)99 
;99 
}:: 	
[RR 	
HttpPostRR	 
(RR 
$strRR #
)RR# $
]RR$ %
[TT 	
	AuthorizeTT	 
(TT 
RolesTT 
=TT 
$strTT $
)TT$ %
]TT% &
publicUU 
IActionResultUU  
CreateCourseFeedbackUU 1
(UU1 2
CourseFeedbackUU2 @
feedbackUUA I
)UUI J
{VV 	
ifWW 
(WW 
!WW 

ModelStateWW 
.WW 
IsValidWW #
)WW# $
returnWW% +

BadRequestWW, 6
(WW6 7

ModelStateWW7 A
)WWA B
;WWB C
tryXX 
{YY 
varZZ 
IsValidZZ 
=ZZ 
_validationZZ )
.ZZ) *"
ValidateCourseFeedbackZZ* @
(ZZ@ A
feedbackZZA I
)ZZI J
;ZZJ K
if[[ 
([[ 
IsValid[[ 
.[[ 
ContainsKey[[ &
([[& '
$str[[' /
)[[/ 0
)[[0 1
return[[2 8

BadRequest[[9 C
([[C D
$str[[D |
)[[| }
;[[} ~
if\\ 
(\\ 
IsValid\\ 
.\\ 
ContainsKey\\ '
(\\' (
$str\\( 1
)\\1 2
)\\2 3
{]] 
feedback^^ 
.^^ 
	CreatedBy^^ &
=^^' (
ControllerHelper^^) 9
.^^9 :
GetCurrentUserId^^: J
(^^J K
this^^K O
.^^O P
HttpContext^^P [
)^^[ \
;^^\ ]
var__ 
res__ 
=__ 
_feedbackService__ .
.__. / 
CreateCourseFeedback__/ C
(__C D
feedback__D L
)__L M
;__M N
if`` 
(`` 
res`` 
.`` 
ContainsKey`` '
(``' (
$str``( 1
)``1 2
)``2 3
return``4 :
Ok``; =
(``= >
new``> A
{``B C
Response``D L
=``M N
$str``O v
}``w x
)``x y
;``y z
}aa 
returnbb 

BadRequestbb !
(bb! "
IsValidbb" )
)bb) *
;bb* +
}cc 
catchdd 
(dd %
InvalidOperationExceptiondd ,
exdd- /
)dd/ 0
{ee 
	TMSLoggerff 
.ff "
ServiceInjectionFailedff 0
(ff0 1
exff1 3
,ff3 4
_loggerff5 <
,ff< =
nameofff> D
(ffD E
FeedBackControllerffE W
)ffW X
,ffX Y
nameofffZ `
(ff` a 
CreateCourseFeedbackffa u
)ffu v
)ffv w
;ffw x
returngg 
Problemgg 
(gg 
)gg  
;gg  !
}hh 
}ii 	
[
 	
HttpPut
	 
(
 
$str
 "
)
" #
]
# $
[
 	
	Authorize
	 
(
 
Roles
 
=
 
$str
 $
)
$ %
]
% &
public
 
IActionResult
 "
UpdateCourseFeedback
 1
(
1 2
CourseFeedback
2 @
feedback
A I
)
I J
{
 	
var
 
feedbackExists
 
=
  
_validation
! ,
.
, -"
CourseFeedbackExists
- A
(
A B
feedback
B J
.
J K
CourseId
K S
,
S T
feedback
T \
.
\ ]
	TraineeId
] f
)
f g
;
g h
if
 
(
 
feedbackExists
 
)
 
{
 
if
 
(
 
!
 

ModelState
 
.
 
IsValid
 #
)
# $
return
% +

BadRequest
, 6
(
6 7

ModelState
7 A
)
A B
;
B C
try
 
{
 
var
 
IsValid
 
=
  !
_validation
" -
.
- .$
ValidateCourseFeedback
. D
(
D E
feedback
E M
)
M N
;
N O
if
 
(
 
IsValid
 
.
  
ContainsKey
  +
(
+ ,
$str
, 5
)
5 6
&&
7 9
IsValid
: A
.
A B
ContainsKey
B M
(
M N
$str
N V
)
V W
)
W X
{
 
feedback
  
.
  !
	UpdatedBy
! *
=
+ ,
ControllerHelper
- =
.
= >
GetCurrentUserId
> N
(
N O
this
O S
.
S T
HttpContext
T _
)
_ `
;
` a
var
 
res
 
=
  !
_feedbackService
" 2
.
2 3"
UpdateCourseFeedback
3 G
(
G H
feedback
H P
)
P Q
;
Q R
if
 
(
 
!
 
res
  
.
  !
ContainsKey
! ,
(
, -
$str
- 9
)
9 :
&&
; =
res
> A
.
A B
ContainsKey
B M
(
M N
$str
N W
)
W X
)
X Y
return
Z `
Ok
a c
(
c d
new
d g
{
h i
Response
j r
=
s t
$stru 
} 
) 
;  
}
 
return
 

BadRequest
 %
(
% &
IsValid
& -
)
- .
;
. /
}
 
catch
 
(
 '
InvalidOperationException
 0
ex
1 3
)
3 4
{
 
	TMSLogger
 
.
 $
ServiceInjectionFailed
 4
(
4 5
ex
5 7
,
7 8
_logger
9 @
,
@ A
nameof
B H
(
H I 
FeedBackController
I [
)
[ \
,
\ ]
nameof
^ d
(
d e"
UpdateCourseFeedback
e y
)
y z
)
z {
;
{ |
return
 
Problem
 "
(
" #
)
# $
;
$ %
}
 
}
 
return
 
NotFound
 
(
 
)
 
;
 
}
 	
[
°° 	
HttpGet
°°	 
(
°° 
$str
°° I
)
°°I J
]
°°J K
public
±± 
IActionResult
±± ?
1GetTraineeFeedbackByCourseIdTrainerIdAndTraineeId
±± N
(
±±N O
int
±±O R
courseId
±±S [
,
±±[ \
int
±±\ _
	traineeId
±±` i
,
±±i j
int
±±j m
	trainerId
±±n w
)
±±w x
{
²² 	
var
³³ 
feedbackExists
³³ 
=
³³  
_validation
³³! ,
.
³³, -#
TraineeFeedbackExists
³³- B
(
³³B C
courseId
³³C K
,
³³K L
	traineeId
³³L U
,
³³U V
	trainerId
³³V _
)
³³_ `
;
³³` a
if
´´ 
(
´´ 
feedbackExists
´´ 
)
´´ 
{
µµ 
try
¶¶ 
{
·· 
var
¸¸ 
result
¸¸ 
=
¸¸  
_feedbackService
¸¸! 1
.
¸¸1 2?
1GetTraineeFeedbackByCourseIdTrainerIdAndTraineeId
¸¸2 c
(
¸¸c d
courseId
¸¸d l
,
¸¸l m
	traineeId
¸¸m v
,
¸¸v w
	trainerId¸¸w 
)¸¸ 
;¸¸ 
if
¹¹ 
(
¹¹ 
result
¹¹ 
is
¹¹ !
not
¹¹" %
null
¹¹& *
)
¹¹* +
return
¹¹, 2
Ok
¹¹3 5
(
¹¹5 6
result
¹¹6 <
)
¹¹< =
;
¹¹= >
}
ºº 
catch
»» 
(
»» '
InvalidOperationException
»» 0
ex
»»1 3
)
»»3 4
{
¼¼ 
	TMSLogger
½½ 
.
½½ $
ServiceInjectionFailed
½½ 4
(
½½4 5
ex
½½5 7
,
½½7 8
_logger
½½9 @
,
½½@ A
nameof
½½B H
(
½½H I 
FeedBackController
½½I [
)
½½[ \
,
½½\ ]
nameof
½½^ d
(
½½d e@
1GetTraineeFeedbackByCourseIdTrainerIdAndTraineeId½½e 
)½½ 
)½½ 
;½½ 
return
¾¾ 
Problem
¾¾ "
(
¾¾" #
)
¾¾# $
;
¾¾$ %
}
¿¿ 
}
ÀÀ 
return
ÁÁ 
NotFound
ÁÁ 
(
ÁÁ 
)
ÁÁ 
;
ÁÁ 
}
ÂÂ 	
[
ÛÛ 	
HttpPost
ÛÛ	 
(
ÛÛ 
$str
ÛÛ $
)
ÛÛ$ %
]
ÛÛ% &
[
ÝÝ 	
	Authorize
ÝÝ	 
(
ÝÝ 
Roles
ÝÝ 
=
ÝÝ 
$str
ÝÝ $
)
ÝÝ$ %
]
ÝÝ% &
public
ÞÞ 
IActionResult
ÞÞ #
CreateTraineeFeedback
ÞÞ 2
(
ÞÞ2 3
TraineeFeedback
ÞÞ3 B
feedback
ÞÞC K
)
ÞÞK L
{
ßß 	
if
àà 
(
àà 
!
àà 

ModelState
àà 
.
àà 
IsValid
àà #
)
àà# $
return
àà% +

BadRequest
àà, 6
(
àà6 7

ModelState
àà7 A
)
ààA B
;
ààB C
try
áá 
{
ââ 
var
ãã 
IsValid
ãã 
=
ãã 
_validation
ãã )
.
ãã) *%
ValidateTraineeFeedback
ãã* A
(
ããA B
feedback
ããB J
)
ããJ K
;
ããK L
if
ää 
(
ää 
IsValid
ää 
.
ää 
ContainsKey
ää &
(
ää& '
$str
ää' /
)
ää/ 0
)
ää0 1
return
ää2 8

BadRequest
ää9 C
(
ääC D
$str
ääD x
)
ääx y
;
ääy z
if
åå 
(
åå 
IsValid
åå 
.
åå 
ContainsKey
åå '
(
åå' (
$str
åå( 1
)
åå1 2
)
åå2 3
{
ææ 
feedback
çç 
.
çç 
	CreatedBy
çç &
=
çç' (
ControllerHelper
çç) 9
.
çç9 :
GetCurrentUserId
çç: J
(
ççJ K
this
ççK O
.
ççO P
HttpContext
ççP [
)
çç[ \
;
çç\ ]
var
èè 
res
èè 
=
èè 
_feedbackService
èè .
.
èè. /#
CreateTraineeFeedback
èè/ D
(
èèD E
feedback
èèE M
)
èèM N
;
èèN O
if
éé 
(
éé 
res
éé 
.
éé 
ContainsKey
éé '
(
éé' (
$str
éé( 1
)
éé1 2
)
éé2 3
return
éé4 :
Ok
éé; =
(
éé= >
new
éé> A
{
ééB C
Response
ééD L
=
ééM N
$str
ééO v
}
ééw x
)
ééx y
;
ééy z
}
êê 
return
ëë 

BadRequest
ëë !
(
ëë! "
IsValid
ëë" )
)
ëë) *
;
ëë* +
}
ìì 
catch
íí 
(
íí '
InvalidOperationException
íí ,
ex
íí- /
)
íí/ 0
{
îî 
	TMSLogger
ïï 
.
ïï $
ServiceInjectionFailed
ïï 0
(
ïï0 1
ex
ïï1 3
,
ïï3 4
_logger
ïï5 <
,
ïï< =
nameof
ïï> D
(
ïïD E 
FeedBackController
ïïE W
)
ïïW X
,
ïïX Y
nameof
ïïZ `
(
ïï` a#
CreateTraineeFeedback
ïïa v
)
ïïv w
)
ïïw x
;
ïïx y
return
ðð 
Problem
ðð 
(
ðð 
)
ðð  
;
ðð  !
}
ññ 
}
òò 	
[
 	
HttpPut
	 
(
 
$str
 #
)
# $
]
$ %
[
 	
	Authorize
	 
(
 
Roles
 
=
 
$str
 $
)
$ %
]
% &
public
 
IActionResult
 #
UpdateTraineeFeedback
 2
(
2 3
TraineeFeedback
3 B
feedback
C K
)
K L
{
 	
if
 
(
 
!
 

ModelState
 
.
 
IsValid
 #
)
# $
return
% +

BadRequest
, 6
(
6 7

ModelState
7 A
)
A B
;
B C
var
 
feedbackExists
 
=
  
_validation
! ,
.
, -#
TraineeFeedbackExists
- B
(
B C
feedback
C K
.
K L
CourseId
L T
,
T U
feedback
U ]
.
] ^
	TraineeId
^ g
,
g h
feedback
h p
.
p q
	TrainerId
q z
)
z {
;
{ |
if
 
(
 
feedbackExists
 
)
 
{
 
try
 
{
 
var
 
IsValid
 
=
  !
_validation
" -
.
- .%
ValidateTraineeFeedback
. E
(
E F
feedback
F N
)
N O
;
O P
if
 
(
 
IsValid
 
.
  
ContainsKey
  +
(
+ ,
$str
, 5
)
5 6
)
6 7
{
 
feedback
  
.
  !
	UpdatedBy
! *
=
+ ,
ControllerHelper
- =
.
= >
GetCurrentUserId
> N
(
N O
this
O S
.
S T
HttpContext
T _
)
_ `
;
` a
var
 
res
 
=
  !
_feedbackService
" 2
.
2 3#
UpdateTraineeFeedback
3 H
(
H I
feedback
I Q
)
Q R
;
R S
if
 
(
 
!
 
res
  
.
  !
ContainsKey
! ,
(
, -
$str
- 9
)
9 :
&&
; =
res
> A
.
A B
ContainsKey
B M
(
M N
$str
N W
)
W X
)
X Y
return
Z `
Ok
a c
(
c d
new
d g
{
h i
Response
j r
=
s t
$stru 
} 
) 
;  
}
 
return
 

BadRequest
 %
(
% &
IsValid
& -
)
- .
;
. /
}
 
catch
   
(
   '
InvalidOperationException
   0
ex
  1 3
)
  3 4
{
¡¡ 
	TMSLogger
¢¢ 
.
¢¢ $
ServiceInjectionFailed
¢¢ 4
(
¢¢4 5
ex
¢¢5 7
,
¢¢7 8
_logger
¢¢9 @
,
¢¢@ A
nameof
¢¢B H
(
¢¢H I 
FeedBackController
¢¢I [
)
¢¢[ \
,
¢¢\ ]
nameof
¢¢^ d
(
¢¢d e"
UpdateCourseFeedback
¢¢e y
)
¢¢y z
)
¢¢z {
;
¢¢{ |
return
££ 
Problem
££ "
(
££" #
)
££# $
;
££$ %
}
¤¤ 
}
¥¥ 
return
¦¦ 
NotFound
¦¦ 
(
¦¦ 
)
¦¦ 
;
¦¦ 
}
¨¨ 	
}
©© 
}ªª «ª
lC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Controllers\ReviewController.cs
	namespace 	
TMS
 
. 
API 
. 
Controllers 
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
ReviewController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
ILogger  
<  !
ReviewController! 1
>1 2
_logger3 :
;: ;
private 
readonly 
ReviewService &
_reviewService' 5
;5 6
private 
readonly 

Validation #
_validation$ /
;/ 0
public 
ReviewController 
(  
UnitOfService  -
service. 5
,5 6
ILogger6 =
<= >
ReviewController> N
>N O
loggerP V
)V W
{ 	
_logger 
= 
logger 
; 
_reviewService 
= 
service $
.$ %
ReviewService% 2
;2 3
_validation 
= 
service !
.! "

Validation" ,
;, -
} 	
[&& 
HttpGet&& 
(&& 
$str&& .
)&&. /
]&&/ 0
public'' 
IActionResult'' 
GetReviewByStatusId'' 0
(''0 1
int''1 4
statusId''5 =
)''= >
{(( 	
var)) 
statusExists)) 
=)) 
_validation)) *
.))* +
ReviewStatusExists))+ =
())= >
statusId))> F
)))F G
;))G H
if** 
(** 
statusExists** 
)** 
{++ 
try,, 
{-- 
var.. 
result.. 
=..  
_reviewService..! /
.../ 0
GetReviewByStatusId..0 C
(..C D
statusId..D L
)..L M
;..M N
if// 
(// 
result// 
is// !
not//" %
null//& *
)//* +
return//, 2
Ok//3 5
(//5 6
result//6 <
)//< =
;//= >
}00 
catch11 
(11 %
InvalidOperationException11 0
ex111 3
)113 4
{22 
	TMSLogger33 
.33 "
ServiceInjectionFailed33 4
(334 5
ex335 7
,337 8
_logger339 @
,33@ A
nameof33B H
(33H I
ReviewController33I Y
)33Y Z
,33Z [
nameof33\ b
(33b c
GetReviewByStatusId33c v
)33v w
)33w x
;33x y
return44 
Problem44 "
(44" #
)44# $
;44$ %
}55 
}66 
return77 
NotFound77 
(77 
)77 
;77 
}88 	
[GG 	
HttpGetGG	 
(GG 
$strGG !
)GG! "
]GG" #
publicHH 
IActionResultHH 
GetReviewByIdHH *
(HH* +
intHH+ .
reviewIdHH/ 7
)HH7 8
{II 	
varJJ 
reviewExistsJJ 
=JJ 
_validationJJ *
.JJ* +
ReviewExistsJJ+ 7
(JJ7 8
reviewIdJJ8 @
)JJ@ A
;JJA B
ifKK 
(KK 
reviewExistsKK 
)KK 
{LL 
tryMM 
{NN 
varOO 
resultOO 
=OO  
_reviewServiceOO! /
.OO/ 0
GetReviewByIdOO0 =
(OO= >
reviewIdOO> F
)OOF G
;OOG H
ifPP 
(PP 
resultPP 
isPP !
notPP" %
nullPP& *
)PP* +
returnPP, 2
OkPP3 5
(PP5 6
resultPP6 <
)PP< =
;PP= >
}QQ 
catchRR 
(RR %
InvalidOperationExceptionRR 0
exRR1 3
)RR3 4
{SS 
	TMSLoggerTT 
.TT "
ServiceInjectionFailedTT 4
(TT4 5
exTT5 7
,TT7 8
_loggerTT9 @
,TT@ A
nameofTTB H
(TTH I
ReviewControllerTTI Y
)TTY Z
,TTZ [
nameofTT\ b
(TTb c
GetReviewByIdTTc p
)TTp q
)TTq r
;TTr s
returnUU 
ProblemUU "
(UU" #
)UU# $
;UU$ %
}VV 
}WW 
returnXX 
NotFoundXX 
(XX 
)XX 
;XX 
}YY 	
[tt 	
HttpPosttt	 
(tt 
$strtt 
)tt 
]tt 
[vv 	
	Authorizevv	 
(vv 
Rolesvv 
=vv 
$strvv 1
)vv1 2
]vv2 3
publicww 
IActionResultww 
CreateReviewww )
(ww) *
Reviewww* 0
reviewww1 7
)ww7 8
{xx 	
ifyy 
(yy 
!yy 

ModelStateyy 
.yy 
IsValidyy #
)yy# $
returnyy% +

BadRequestyy, 6
(yy6 7

ModelStateyy7 A
)yyA B
;yyB C
tryzz 
{{{ 
var|| 
IsValid|| 
=|| 
_validation|| )
.||) *
ValidateReview||* 8
(||8 9
review||9 ?
)||? @
;||@ A
if}} 
(}} 
IsValid}} 
.}} 
ContainsKey}} &
(}}& '
$str}}' /
)}}/ 0
)}}0 1
return}}2 8

BadRequest}}9 C
(}}C D
$str}}D x
)}}x y
;}}y z
if~~ 
(~~ 
IsValid~~ 
.~~ 
ContainsKey~~ '
(~~' (
$str~~( 1
)~~1 2
)~~2 3
{ 
review
 
.
 
	CreatedBy
 $
=
% &
ControllerHelper
' 7
.
7 8
GetCurrentUserId
8 H
(
H I
this
I M
.
M N
HttpContext
N Y
)
Y Z
;
Z [
var
 
res
 
=
 
_reviewService
 ,
.
, -
CreateReview
- 9
(
9 :
review
: @
)
@ A
;
A B
if
 
(
 
res
 
.
 
ContainsKey
 '
(
' (
$str
( 1
)
1 2
)
2 3
return
4 :
Ok
; =
(
= >
new
> A
{
B C
Response
D L
=
M N
$str
O t
}
u v
)
v w
;
w x
}
 
return
 

BadRequest
 !
(
! "
IsValid
" )
)
) *
;
* +
}
 
catch
 
(
 '
InvalidOperationException
 ,
ex
- /
)
/ 0
{
 
	TMSLogger
 
.
 $
ServiceInjectionFailed
 0
(
0 1
ex
1 3
,
3 4
_logger
5 <
,
< =
nameof
> D
(
D E
ReviewController
E U
)
U V
,
V W
nameof
X ^
(
^ _
CreateReview
_ k
)
k l
)
l m
;
m n
return
 
Problem
 
(
 
)
  
;
  !
}
 
}
 	
[
©© 	
HttpPut
©©	 
(
©© 
$str
©© 
)
©© 
]
©© 
[
«« 	
	Authorize
««	 
(
«« 
Roles
«« 
=
«« 
$str
«« 1
)
««1 2
]
««2 3
public
¬¬ 
IActionResult
¬¬ 
UpdateReview
¬¬ )
(
¬¬) *
Review
¬¬* 0
review
¬¬1 7
)
¬¬7 8
{
­­ 	
if
®® 
(
®® 
!
®® 

ModelState
®® 
.
®® 
IsValid
®® #
)
®®# $
return
®®% +

BadRequest
®®, 6
(
®®6 7

ModelState
®®7 A
)
®®A B
;
®®B C
var
¯¯ 
reviewExists
¯¯ 
=
¯¯ 
_validation
¯¯ *
.
¯¯* +
ReviewExists
¯¯+ 7
(
¯¯7 8
review
¯¯8 >
.
¯¯> ?
Id
¯¯? A
)
¯¯A B
;
¯¯B C
if
°° 
(
°° 
reviewExists
°° 
)
°° 
{
±± 
try
²² 
{
³³ 
var
´´ 
IsValid
´´ 
=
´´  !
_validation
´´" -
.
´´- .
ValidateReview
´´. <
(
´´< =
review
´´= C
)
´´C D
;
´´D E
if
µµ 
(
µµ 
IsValid
µµ 
.
µµ  
ContainsKey
µµ  +
(
µµ+ ,
$str
µµ, 5
)
µµ5 6
&&
µµ7 9
IsValid
µµ: A
.
µµA B
ContainsKey
µµB M
(
µµM N
$str
µµN V
)
µµV W
)
µµW X
{
¶¶ 
review
·· 
.
·· 
	UpdatedBy
·· (
=
··) *
ControllerHelper
··+ ;
.
··; <
GetCurrentUserId
··< L
(
··L M
this
··M Q
.
··Q R
HttpContext
··R ]
)
··] ^
;
··^ _
var
¸¸ 
res
¸¸ 
=
¸¸  !
_reviewService
¸¸" 0
.
¸¸0 1
UpdateReview
¸¸1 =
(
¸¸= >
review
¸¸> D
)
¸¸D E
;
¸¸E F
if
¹¹ 
(
¹¹ 
res
¹¹ 
.
¹¹  
ContainsKey
¹¹  +
(
¹¹+ ,
$str
¹¹, 4
)
¹¹4 5
&&
¹¹6 8
res
¹¹9 <
.
¹¹< =
ContainsKey
¹¹= H
(
¹¹H I
$str
¹¹I R
)
¹¹R S
)
¹¹S T
return
¹¹U [
Ok
¹¹\ ^
(
¹¹^ _
new
¹¹_ b
{
¹¹c d
Response
¹¹e m
=
¹¹n o
$str¹¹p 
}¹¹ 
)¹¹ 
;¹¹ 
}
ºº 
return
»» 

BadRequest
»» %
(
»»% &
IsValid
»»& -
)
»»- .
;
»». /
}
¼¼ 
catch
½½ 
(
½½ '
InvalidOperationException
½½ 0
ex
½½1 3
)
½½3 4
{
¾¾ 
	TMSLogger
¿¿ 
.
¿¿ $
ServiceInjectionFailed
¿¿ 4
(
¿¿4 5
ex
¿¿5 7
,
¿¿7 8
_logger
¿¿9 @
,
¿¿@ A
nameof
¿¿B H
(
¿¿H I
ReviewController
¿¿I Y
)
¿¿Y Z
,
¿¿Z [
nameof
¿¿\ b
(
¿¿b c
UpdateReview
¿¿c o
)
¿¿o p
)
¿¿p q
;
¿¿q r
return
ÀÀ 
Problem
ÀÀ "
(
ÀÀ" #
)
ÀÀ# $
;
ÀÀ$ %
}
ÁÁ 
}
ÂÂ 
return
ÃÃ 
NotFound
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
}
ÅÅ 	
[
ÕÕ 	
HttpGet
ÕÕ	 
(
ÕÕ 
$str
ÕÕ (
)
ÕÕ( )
]
ÕÕ) *
public
ÖÖ 
IActionResult
ÖÖ "
GetListOfMomByUserId
ÖÖ 1
(
ÖÖ1 2
int
ÖÖ2 5
userId
ÖÖ6 <
)
ÖÖ< =
{
×× 	
var
ØØ 

userExists
ØØ 
=
ØØ 
_validation
ØØ (
.
ØØ( )

UserExists
ØØ) 3
(
ØØ3 4
userId
ØØ4 :
)
ØØ: ;
;
ØØ; <
if
ÙÙ 
(
ÙÙ 

userExists
ÙÙ 
)
ÙÙ 
{
ÚÚ 
try
ÛÛ 
{
ÜÜ 
var
ÝÝ 
result
ÝÝ 
=
ÝÝ  
_reviewService
ÝÝ! /
.
ÝÝ/ 0"
GetListOfMomByUserId
ÝÝ0 D
(
ÝÝD E
userId
ÝÝE K
)
ÝÝK L
;
ÝÝL M
if
ÞÞ 
(
ÞÞ 
result
ÞÞ 
is
ÞÞ !
not
ÞÞ" %
null
ÞÞ& *
)
ÞÞ* +
return
ÞÞ, 2
Ok
ÞÞ3 5
(
ÞÞ5 6
result
ÞÞ6 <
)
ÞÞ< =
;
ÞÞ= >
}
ßß 
catch
àà 
(
àà '
InvalidOperationException
àà 0
ex
àà1 3
)
àà3 4
{
áá 
	TMSLogger
ââ 
.
ââ $
ServiceInjectionFailed
ââ 4
(
ââ4 5
ex
ââ5 7
,
ââ7 8
_logger
ââ9 @
,
ââ@ A
nameof
ââB H
(
ââH I
ReviewController
ââI Y
)
ââY Z
,
ââZ [
nameof
ââ\ b
(
ââb c"
GetListOfMomByUserId
ââc w
)
ââw x
)
ââx y
;
âây z
return
ãã 
Problem
ãã "
(
ãã" #
)
ãã# $
;
ãã$ %
}
ää 
}
åå 
return
ææ 
NotFound
ææ 
(
ææ 
)
ææ 
;
ææ 
}
çç 	
[
øø 	
HttpGet
øø	 
(
øø 
$str
øø 5
)
øø5 6
]
øø6 7
public
ùù 
IActionResult
ùù *
GetMomByReviewIdAndTraineeId
ùù 9
(
ùù9 :
int
ùù: =
reviewId
ùù> F
,
ùùF G
int
ùùG J
	traineeId
ùùK T
)
ùùT U
{
úú 	
var
ûû 
	momExists
ûû 
=
ûû 
_validation
ûû '
.
ûû' (
	MOMExists
ûû( 1
(
ûû1 2
reviewId
ûû2 :
,
ûû: ;
	traineeId
ûû; D
)
ûûD E
;
ûûE F
if
üü 
(
üü 
	momExists
üü 
)
üü 
{
ýý 
try
þþ 
{
ÿÿ 
var
 
result
 
=
  
_reviewService
! /
.
/ 0*
GetMomByReviewIdAndTraineeId
0 L
(
L M
reviewId
M U
,
U V
	traineeId
V _
)
_ `
;
` a
if
 
(
 
result
 
is
 !
not
" %
null
& *
)
* +
return
, 2
Ok
3 5
(
5 6
result
6 <
)
< =
;
= >
}
 
catch
 
(
 '
InvalidOperationException
 0
ex
1 3
)
3 4
{
 
	TMSLogger
 
.
 $
ServiceInjectionFailed
 4
(
4 5
ex
5 7
,
7 8
_logger
9 @
,
@ A
nameof
B H
(
H I
ReviewController
I Y
)
Y Z
,
Z [
nameof
\ b
(
b c*
GetMomByReviewIdAndTraineeId
c 
) 
) 
; 
return
 
Problem
 "
(
" #
)
# $
;
$ %
}
 
}
 
return
 
NotFound
 
(
 
)
 
;
 
}
 	
[
¥¥ 	
HttpPost
¥¥	 
(
¥¥ 
$str
¥¥ 
)
¥¥ 
]
¥¥ 
[
§§ 	
	Authorize
§§	 
(
§§ 
Roles
§§ 
=
§§ 
$str
§§ $
)
§§$ %
]
§§% &
public
¨¨ 
IActionResult
¨¨ 
	CreateMom
¨¨ &
(
¨¨& '
MOM
¨¨' *
mom
¨¨+ .
)
¨¨. /
{
©© 	
if
ªª 
(
ªª 
!
ªª 

ModelState
ªª 
.
ªª 
IsValid
ªª #
)
ªª# $
return
ªª% +

BadRequest
ªª, 6
(
ªª6 7

ModelState
ªª7 A
)
ªªA B
;
ªªB C
try
«« 
{
¬¬ 
var
­­ 
IsValid
­­ 
=
­­ 
_validation
­­ )
.
­­) *
ValidateMOM
­­* 5
(
­­5 6
mom
­­6 9
)
­­9 :
;
­­: ;
if
®® 
(
®® 
IsValid
®® 
.
®® 
ContainsKey
®® &
(
®®& '
$str
®®' /
)
®®/ 0
)
®®0 1
return
®®2 8

BadRequest
®®9 C
(
®®C D
$str
®®D r
)
®®r s
;
®®s t
if
¯¯ 
(
¯¯ 
IsValid
¯¯ 
.
¯¯ 
ContainsKey
¯¯ '
(
¯¯' (
$str
¯¯( 1
)
¯¯1 2
)
¯¯2 3
{
°° 
mom
±± 
.
±± 
	CreatedBy
±± !
=
±±" #
ControllerHelper
±±$ 4
.
±±4 5
GetCurrentUserId
±±5 E
(
±±E F
this
±±F J
.
±±J K
HttpContext
±±K V
)
±±V W
;
±±W X
var
²² 
res
²² 
=
²² 
_reviewService
²² ,
.
²², -
	CreateMom
²²- 6
(
²²6 7
mom
²²7 :
)
²²: ;
;
²²; <
if
³³ 
(
³³ 
res
³³ 
.
³³ 
ContainsKey
³³ '
(
³³' (
$str
³³( 1
)
³³1 2
)
³³2 3
return
³³4 :
Ok
³³; =
(
³³= >
new
³³> A
{
³³B C
Response
³³D L
=
³³M N
$str
³³O q
}
³³r s
)
³³s t
;
³³t u
}
´´ 
return
µµ 

BadRequest
µµ !
(
µµ! "
IsValid
µµ" )
)
µµ) *
;
µµ* +
}
¶¶ 
catch
·· 
(
·· '
InvalidOperationException
·· ,
ex
··- /
)
··/ 0
{
¸¸ 
	TMSLogger
¹¹ 
.
¹¹ $
ServiceInjectionFailed
¹¹ 0
(
¹¹0 1
ex
¹¹1 3
,
¹¹3 4
_logger
¹¹5 <
,
¹¹< =
nameof
¹¹> D
(
¹¹D E
ReviewController
¹¹E U
)
¹¹U V
,
¹¹V W
nameof
¹¹X ^
(
¹¹^ _
	CreateMom
¹¹_ h
)
¹¹h i
)
¹¹i j
;
¹¹j k
return
ºº 
Problem
ºº 
(
ºº 
)
ºº  
;
ºº  !
}
»» 
}
¼¼ 	
[
ÙÙ 	
HttpPut
ÙÙ	 
(
ÙÙ 
$str
ÙÙ 
)
ÙÙ 
]
ÙÙ 
[
ÛÛ 	
	Authorize
ÛÛ	 
(
ÛÛ 
Roles
ÛÛ 
=
ÛÛ 
$str
ÛÛ $
)
ÛÛ$ %
]
ÛÛ% &
public
ÜÜ 
IActionResult
ÜÜ 
	UpdateMom
ÜÜ &
(
ÜÜ& '
MOM
ÜÜ' *
mom
ÜÜ+ .
)
ÜÜ. /
{
ÝÝ 	
if
ÞÞ 
(
ÞÞ 
!
ÞÞ 

ModelState
ÞÞ 
.
ÞÞ 
IsValid
ÞÞ #
)
ÞÞ# $
return
ÞÞ% +

BadRequest
ÞÞ, 6
(
ÞÞ6 7

ModelState
ÞÞ7 A
)
ÞÞA B
;
ÞÞB C
var
ßß 
	momExists
ßß 
=
ßß 
_validation
ßß '
.
ßß' (
	MOMExists
ßß( 1
(
ßß1 2
mom
ßß2 5
.
ßß5 6
ReviewId
ßß6 >
,
ßß> ?
mom
ßß? B
.
ßßB C
	TraineeId
ßßC L
)
ßßL M
;
ßßM N
if
àà 
(
àà 
	momExists
àà 
)
àà 
{
áá 
try
ââ 
{
ãã 
var
ää 
IsValid
ää 
=
ää  !
_validation
ää" -
.
ää- .
ValidateMOM
ää. 9
(
ää9 :
mom
ää: =
)
ää= >
;
ää> ?
if
åå 
(
åå 
IsValid
åå 
.
åå  
ContainsKey
åå  +
(
åå+ ,
$str
åå, 5
)
åå5 6
)
åå6 7
{
ææ 
mom
çç 
.
çç 
	UpdatedBy
çç %
=
çç& '
ControllerHelper
çç( 8
.
çç8 9
GetCurrentUserId
çç9 I
(
ççI J
this
ççJ N
.
ççN O
HttpContext
ççO Z
)
ççZ [
;
çç[ \
var
èè 
res
èè 
=
èè  !
_reviewService
èè" 0
.
èè0 1
	UpdateMom
èè1 :
(
èè: ;
mom
èè; >
)
èè> ?
;
èè? @
if
éé 
(
éé 
res
éé 
.
éé  
ContainsKey
éé  +
(
éé+ ,
$str
éé, 4
)
éé4 5
&&
éé6 8
res
éé9 <
.
éé< =
ContainsKey
éé= H
(
ééH I
$str
ééI R
)
ééR S
)
ééS T
return
ééU [
Ok
éé\ ^
(
éé^ _
new
éé_ b
{
ééc d
Response
éée m
=
één o
$stréép 
}éé 
)éé 
;éé 
}
êê 
return
ëë 

BadRequest
ëë %
(
ëë% &
IsValid
ëë& -
)
ëë- .
;
ëë. /
}
ìì 
catch
íí 
(
íí '
InvalidOperationException
íí 0
ex
íí1 3
)
íí3 4
{
îî 
	TMSLogger
ïï 
.
ïï $
ServiceInjectionFailed
ïï 4
(
ïï4 5
ex
ïï5 7
,
ïï7 8
_logger
ïï9 @
,
ïï@ A
nameof
ïïB H
(
ïïH I
ReviewController
ïïI Y
)
ïïY Z
,
ïïZ [
nameof
ïï\ b
(
ïïb c
	UpdateMom
ïïc l
)
ïïl m
)
ïïm n
;
ïïn o
return
ðð 
Problem
ðð "
(
ðð" #
)
ðð# $
;
ðð$ %
}
ññ 
}
òò 
return
óó 
NotFound
óó 
(
óó 
)
óó 
;
óó 
}
ôô 	
}
õõ 
}öö Í
jC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Controllers\RoleController.cs
	namespace 	
TMS
 
. 
API 
. 
Controllers 
{ 
[ 
ApiController 
] 
[		 
Route		 

(		
 
$str		 
)		 
]		 
public

 

class

 
RoleController

 
:

  !
ControllerBase

" 0
{ 
private 
readonly 
ILogger  
<  !
RoleController! /
>/ 0
_logger1 8
;8 9
private 
readonly 
RoleService $
_roleService% 1
;1 2
private 
readonly 

Validation #
_validation$ /
;/ 0
public 
RoleController 
( 
UnitOfService +
service, 3
,3 4
ILogger5 <
<< =
RoleController= K
>K L
loggerM S
)S T
{ 	
_logger 
= 
logger 
; 
_roleService 
= 
service "
." #
RoleService# .
;. /
_validation 
= 
service !
.! "

Validation" ,
;, -
} 	
[$$ 	
HttpGet$$	 
($$ 
$str$$ 
)$$ 
]$$ 
[%% 	
	Authorize%%	 
(%% 
Roles%% 
=%% 
$str%% 1
)%%1 2
]%%2 3
public&& 
IActionResult&& 
GetRoles&& %
(&&% &
)&&& '
{'' 	
try(( 
{)) 
return** 
Ok** 
(** 
_roleService** &
.**& '
GetRoles**' /
(**/ 0
)**0 1
)**1 2
;**2 3
}++ 
catch,, 
(,, %
InvalidOperationException,, ,
ex,,- /
),,/ 0
{-- 
	TMSLogger.. 
... "
ServiceInjectionFailed.. 0
(..0 1
ex..1 3
,..3 4
_logger..5 <
,..< =
nameof..> D
(..D E
RoleService..E P
)..P Q
,..Q R
nameof..S Y
(..Y Z
GetRoles..Z b
)..b c
)..c d
;..d e
return// 
Problem// 
(// 
)//  
;//  !
}00 
}11 	
}22 
}33 
jC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Controllers\UserController.cs
	namespace 	
TMS
 
. 
API 
. 
Controllers 
{ 
[		 
ApiController		 
]		 
[

 
Route

 

(


 
$str

 
)

 
]

 
public 

class 
UserController 
:  !
ControllerBase" 0
{ 
private 
readonly 
ILogger  
<  !
UserController! /
>/ 0
_logger1 8
;8 9
private 
readonly 
UserService $
_userService% 1
;1 2
private 
readonly 

Validation #
_validation$ /
;/ 0
public 
UserController 
( 
UnitOfService +
service, 3
,3 4
ILogger5 <
<< =
UserController= K
>K L
loggerM S
)S T
{ 	
_logger 
= 
logger 
; 
_userService 
= 
service "
." #
UserService# .
;. /
_validation 
= 
service !
.! "

Validation" ,
;, -
} 	
[&& 	
HttpGet&&	 
(&& 
$str&& $
)&&$ %
]&&% &
public'' 
IActionResult'' 
GetAllUserByRole'' -
(''- .
int''. 1
roleId''2 8
)''8 9
{(( 	
var)) 

roleExists)) 
=)) 
_validation)) (
.))( )

RoleExists))) 3
())3 4
roleId))4 :
))): ;
;)); <
if** 
(** 

roleExists** 
)** 
{++ 
try,, 
{-- 
var.. 
result.. 
=..  
_userService..! -
...- .
GetUsersByRole... <
(..< =
roleId..= C
)..C D
;..D E
if// 
(// 
result// 
is// !
not//" %
null//& *
)//* +
return//, 2
Ok//3 5
(//5 6
result//6 <
)//< =
;//= >
}00 
catch11 
(11 %
InvalidOperationException11 0
ex111 3
)113 4
{22 
	TMSLogger33 
.33 "
ServiceInjectionFailed33 4
(334 5
ex335 7
,337 8
_logger339 @
,33@ A
nameof33B H
(33H I
UserController33I W
)33W X
,33X Y
nameof33Z `
(33` a
GetAllUserByRole33a q
)33q r
)33r s
;33s t
return44 
Problem44 "
(44" #
)44# $
;44$ %
}55 
}66 
return77 
NotFound77 
(77 
)77 
;77 
}88 	
[HH 	
HttpGetHH	 
(HH 
$strHH 0
)HH0 1
]HH1 2
publicII 
IActionResultII "
GetAllUserByDepartmentII 3
(II3 4
intII4 7
departmentIdII8 D
)IID E
{JJ 	
varKK 
departmentExistsKK  
=KK! "
_validationKK# .
.KK. /
DepartmentExistsKK/ ?
(KK? @
departmentIdKK@ L
)KKL M
;KKM N
ifLL 
(LL 
departmentExistsLL 
)LL  
{MM 
tryNN 
{OO 
varPP 
resultPP 
=PP  
_userServicePP! -
.PP- . 
GetUsersByDepartmentPP. B
(PPB C
departmentIdPPC O
)PPO P
;PPP Q
ifQQ 
(QQ 
resultQQ 
isQQ !
notQQ" %
nullQQ& *
)QQ* +
returnQQ, 2
OkQQ3 5
(QQ5 6
resultQQ6 <
)QQ< =
;QQ= >
}RR 
catchSS 
(SS %
InvalidOperationExceptionSS 0
exSS1 3
)SS3 4
{TT 
	TMSLoggerUU 
.UU "
ServiceInjectionFailedUU 4
(UU4 5
exUU5 7
,UU7 8
_loggerUU9 @
,UU@ A
nameofUUB H
(UUH I
UserControllerUUI W
)UUW X
,UUX Y
nameofUUZ `
(UU` a"
GetAllUserByDepartmentUUa w
)UUw x
)UUx y
;UUy z
returnVV 
ProblemVV "
(VV" #
)VV# $
;VV$ %
}WW 
}XX 
returnYY 
NotFoundYY 
(YY 
)YY 
;YY 
}ZZ 	
[ll 	
HttpGetll	 
(ll 
$strll N
)llN O
]llO P
publicmm 
IActionResultmm !
GetUsersByDeptandrolemm 2
(mm2 3
intmm3 6
departmentIdmm7 C
,mmC D
intmmD G
roleIdmmH N
)mmN O
{nn 	
varoo 
departmentExistsoo  
=oo! "
_validationoo# .
.oo. /
DepartmentExistsoo/ ?
(oo? @
departmentIdoo@ L
)ooL M
;ooM N
varpp 

roleExistspp 
=pp 
_validationpp (
.pp( )

RoleExistspp) 3
(pp3 4
roleIdpp4 :
)pp: ;
;pp; <
ifqq 
(qq 
departmentExistsqq 
&&qq  "

roleExistsqq# -
)qq- .
{rr 
tryss 
{tt 
varuu 
resultuu 
=uu  
_userServiceuu! -
.uu- .!
GetUsersByDeptandroleuu. C
(uuC D
departmentIduuD P
,uuP Q
roleIduuQ W
)uuW X
;uuX Y
ifvv 
(vv 
resultvv 
isvv !
notvv" %
nullvv& *
)vv* +
returnvv, 2
Okvv3 5
(vv5 6
resultvv6 <
)vv< =
;vv= >
}ww 
catchxx 
(xx %
InvalidOperationExceptionxx 0
exxx1 3
)xx3 4
{yy 
	TMSLoggerzz 
.zz "
ServiceInjectionFailedzz 4
(zz4 5
exzz5 7
,zz7 8
_loggerzz9 @
,zz@ A
nameofzzB H
(zzH I
UserControllerzzI W
)zzW X
,zzX Y
nameofzzZ `
(zz` a!
GetUsersByDeptandrolezza v
)zzv w
)zzw x
;zzx y
return{{ 
Problem{{ "
({{" #
){{# $
;{{$ %
}|| 
}}} 
return~~ 
NotFound~~ 
(~~ 
)~~ 
;~~ 
} 	
[
 	
HttpGet
	 
(
 
$str
 
)
  
]
  !
public
 
IActionResult
 
GetUserById
 (
(
( )
int
) ,
userId
- 3
)
3 4
{
 	
var
 

userExists
 
=
 
_validation
 (
.
( )

UserExists
) 3
(
3 4
userId
4 :
)
: ;
;
; <
if
 
(
 

userExists
 
)
 
{
 
try
 
{
 
var
 
result
 
=
  
_userService
! -
.
- .
GetUserById
. 9
(
9 :
userId
: @
)
@ A
;
A B
if
 
(
 
result
 
is
 !
not
" %
null
& *
)
* +
return
, 2
Ok
3 5
(
5 6
result
6 <
)
< =
;
= >
return
 
NotFound
 #
(
# $
)
$ %
;
% &
}
 
catch
 
(
 '
InvalidOperationException
 0
ex
1 3
)
3 4
{
 
	TMSLogger
 
.
 $
ServiceInjectionFailed
 4
(
4 5
ex
5 7
,
7 8
_logger
9 @
,
@ A
nameof
B H
(
H I
UserController
I W
)
W X
,
X Y
nameof
Z `
(
` a
GetUserById
a l
)
l m
)
m n
;
n o
return
 
Problem
 "
(
" #
)
# $
;
$ %
}
 
}
   
return
¡¡ 
NotFound
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡ 
}
¢¢ 	
[
¾¾ 	
HttpPost
¾¾	 
(
¾¾ 
$str
¾¾ 
)
¾¾ 
]
¾¾ 
public
ÁÁ 
IActionResult
ÁÁ 

CreateUser
ÁÁ '
(
ÁÁ' (
User
ÁÁ( ,
user
ÁÁ- 1
)
ÁÁ1 2
{
ÂÂ 	
if
ÃÃ 
(
ÃÃ 
!
ÃÃ 

ModelState
ÃÃ 
.
ÃÃ 
IsValid
ÃÃ #
)
ÃÃ# $
return
ÃÃ% +

BadRequest
ÃÃ, 6
(
ÃÃ6 7

ModelState
ÃÃ7 A
)
ÃÃA B
;
ÃÃB C
try
ÄÄ 
{
ÅÅ 
var
ÆÆ 
IsValid
ÆÆ 
=
ÆÆ 
_validation
ÆÆ )
.
ÆÆ) *
ValidateUser
ÆÆ* 6
(
ÆÆ6 7
user
ÆÆ7 ;
)
ÆÆ; <
;
ÆÆ< =
if
ÇÇ 
(
ÇÇ 
IsValid
ÇÇ 
.
ÇÇ 
ContainsKey
ÇÇ &
(
ÇÇ& '
$str
ÇÇ' /
)
ÇÇ/ 0
)
ÇÇ0 1
return
ÇÇ2 8

BadRequest
ÇÇ9 C
(
ÇÇC D
$str
ÇÇD u
)
ÇÇu v
;
ÇÇv w
if
ÈÈ 
(
ÈÈ 
IsValid
ÈÈ 
.
ÈÈ 
ContainsKey
ÈÈ '
(
ÈÈ' (
$str
ÈÈ( 1
)
ÈÈ1 2
)
ÈÈ2 3
{
ÉÉ 
var
ËË 
res
ËË 
=
ËË 
_userService
ËË *
.
ËË* +

CreateUser
ËË+ 5
(
ËË5 6
user
ËË6 :
)
ËË: ;
;
ËË; <
if
ÌÌ 
(
ÌÌ 
res
ÌÌ 
.
ÌÌ 
ContainsKey
ÌÌ '
(
ÌÌ' (
$str
ÌÌ( 1
)
ÌÌ1 2
)
ÌÌ2 3
return
ÌÌ4 :
Ok
ÌÌ; =
(
ÌÌ= >
new
ÌÌ> A
{
ÌÌB C
Response
ÌÌD L
=
ÌÌM N
$str
ÌÌO r
}
ÌÌs t
)
ÌÌt u
;
ÌÌu v
}
ÍÍ 
return
ÎÎ 

BadRequest
ÎÎ !
(
ÎÎ! "
IsValid
ÎÎ" )
)
ÎÎ) *
;
ÎÎ* +
}
ÏÏ 
catch
ÐÐ 
(
ÐÐ '
InvalidOperationException
ÐÐ ,
ex
ÐÐ- /
)
ÐÐ/ 0
{
ÑÑ 
	TMSLogger
ÒÒ 
.
ÒÒ $
ServiceInjectionFailed
ÒÒ 0
(
ÒÒ0 1
ex
ÒÒ1 3
,
ÒÒ3 4
_logger
ÒÒ5 <
,
ÒÒ< =
nameof
ÒÒ> D
(
ÒÒD E
UserController
ÒÒE S
)
ÒÒS T
,
ÒÒT U
nameof
ÒÒV \
(
ÒÒ\ ]

CreateUser
ÒÒ] g
)
ÒÒg h
)
ÒÒh i
;
ÒÒi j
return
ÓÓ 
Problem
ÓÓ 
(
ÓÓ 
)
ÓÓ  
;
ÓÓ  !
}
ÔÔ 
}
ÕÕ 	
[
òò 	
HttpPut
òò	 
(
òò 
$str
òò 
)
òò 
]
òò 
public
õõ 
IActionResult
õõ 

UpdateUser
õõ '
(
õõ' (
User
õõ( ,
user
õõ- 1
)
õõ1 2
{
öö 	
if
÷÷ 
(
÷÷ 
!
÷÷ 

ModelState
÷÷ 
.
÷÷ 
IsValid
÷÷ #
)
÷÷# $
return
÷÷% +

BadRequest
÷÷, 6
(
÷÷6 7

ModelState
÷÷7 A
)
÷÷A B
;
÷÷B C
var
øø 

userExists
øø 
=
øø 
_validation
øø (
.
øø( )

UserExists
øø) 3
(
øø3 4
user
øø4 8
.
øø8 9
Id
øø9 ;
)
øø; <
;
øø< =
if
ùù 
(
ùù 

userExists
ùù 
)
ùù 
{
úú 
try
ûû 
{
üü 
var
ýý 
IsValid
ýý 
=
ýý  !
_validation
ýý" -
.
ýý- .
ValidateUser
ýý. :
(
ýý: ;
user
ýý; ?
)
ýý? @
;
ýý@ A
if
þþ 
(
þþ 
IsValid
þþ 
.
þþ  
ContainsKey
þþ  +
(
þþ+ ,
$str
þþ, 5
)
þþ5 6
&&
þþ7 9
IsValid
þþ: A
.
þþA B
ContainsKey
þþB M
(
þþM N
$str
þþN V
)
þþV W
)
þþW X
{
ÿÿ 
user
 
.
 
	UpdatedBy
 &
=
' (
ControllerHelper
) 9
.
9 :
GetCurrentUserId
: J
(
J K
this
K O
.
O P
HttpContext
P [
)
[ \
;
\ ]
var
 
res
 
=
  !
_userService
" .
.
. /

UpdateUser
/ 9
(
9 :
user
: >
)
> ?
;
? @
if
 
(
 
res
 
.
  
ContainsKey
  +
(
+ ,
$str
, 5
)
5 6
&&
7 9
res
: =
.
= >
ContainsKey
> I
(
I J
$str
J R
)
R S
)
S T
return
U [
Ok
\ ^
(
^ _
new
_ b
{
c d
Response
e m
=
n o
$strp 
} 
) 
; 
}
 
return
 

BadRequest
 %
(
% &
IsValid
& -
)
- .
;
. /
}
 
catch
 
(
 '
InvalidOperationException
 0
ex
1 3
)
3 4
{
 
	TMSLogger
 
.
 $
ServiceInjectionFailed
 4
(
4 5
ex
5 7
,
7 8
_logger
9 @
,
@ A
nameof
B H
(
H I
UserController
I W
)
W X
,
X Y
nameof
Z `
(
` a

UpdateUser
a k
)
k l
)
l m
;
m n
return
 
Problem
 "
(
" #
)
# $
;
$ %
}
 
}
 
return
 
NotFound
 
(
 
)
 
;
 
}
 	
[
 	
HttpPut
	 
(
 
$str
 '
)
' (
]
( )
public
   
IActionResult
   
DisableUser
   (
(
  ( )
int
  ) ,
userId
  - 3
)
  3 4
{
¡¡ 	
var
¢¢ 

userExists
¢¢ 
=
¢¢ 
_validation
¢¢ (
.
¢¢( )

UserExists
¢¢) 3
(
¢¢3 4
userId
¢¢4 :
)
¢¢: ;
;
¢¢; <
if
££ 
(
££ 

userExists
££ 
)
££ 
{
¤¤ 
try
¥¥ 
{
¦¦ 
int
§§ 
currentUserId
§§ %
=
§§& '
ControllerHelper
§§( 8
.
§§8 9
GetCurrentUserId
§§9 I
(
§§I J
this
§§J N
.
§§N O
HttpContext
§§O Z
)
§§Z [
;
§§[ \
var
¨¨ 
res
¨¨ 
=
¨¨ 
_userService
¨¨ *
.
¨¨* +
DisableUser
¨¨+ 6
(
¨¨6 7
userId
¨¨7 =
,
¨¨= >
currentUserId
¨¨> K
)
¨¨K L
;
¨¨L M
if
©© 
(
©© 
res
©© 
)
©© 
return
©© #
Ok
©©$ &
(
©©& '
$str
©©' K
)
©©K L
;
©©L M
}
ªª 
catch
«« 
(
«« '
InvalidOperationException
«« 0
ex
««1 3
)
««3 4
{
¬¬ 
	TMSLogger
­­ 
.
­­ $
ServiceInjectionFailed
­­ 4
(
­­4 5
ex
­­5 7
,
­­7 8
_logger
­­9 @
,
­­@ A
nameof
­­B H
(
­­H I
UserController
­­I W
)
­­W X
,
­­X Y
nameof
­­Z `
(
­­` a
DisableUser
­­a l
)
­­l m
)
­­m n
;
­­n o
return
®® 
Problem
®® "
(
®®" #
)
®®# $
;
®®$ %
}
¯¯ 
}
°° 
return
±± 
NotFound
±± 
(
±± 
)
±± 
;
±± 
}
²² 	
[
ÀÀ 	
HttpGet
ÀÀ	 
(
ÀÀ 
$str
ÀÀ 
)
ÀÀ 
]
ÀÀ 
public
ÂÂ 
IActionResult
ÂÂ 
DashboardData
ÂÂ *
(
ÂÂ* +
)
ÂÂ+ ,
{
ÃÃ 	
int
ÅÅ 
currentUserId
ÅÅ 
=
ÅÅ 
$num
ÅÅ  !
;
ÅÅ! "
return
ÆÆ 
Ok
ÆÆ 
(
ÆÆ 
_userService
ÆÆ "
.
ÆÆ" #
	Dashboard
ÆÆ# ,
(
ÆÆ, -
currentUserId
ÆÆ- :
)
ÆÆ: ;
)
ÆÆ; <
;
ÆÆ< =
}
ÇÇ 	
}
ÈÈ 
}ÉÉ ÿ
qC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Migrations\20220623045717_initial.cs
	namespace 	
TMS
 
. 
API 
. 

Migrations 
{ 
public 

partial 
class 
initial  
:! "
	Migration# ,
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
falseQ V
)V W
,W X

isDisabled 
=  
table! &
.& '
Column' -
<- .
bool. 2
>2 3
(3 4
type4 8
:8 9
$str: ?
,? @
nullableA I
:I J
trueK O
)O P
,P Q
	CreatedOn 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= H
,H I
nullableJ R
:R S
falseT Y
)Y Z
,Z [
	CreatedBy 
= 
table  %
.% &
Column& ,
<, -
int- 0
>0 1
(1 2
type2 6
:6 7
$str8 =
,= >
nullable? G
:G H
falseI N
)N O
,O P
	UpdatedOn 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= H
,H I
nullableJ R
:R S
trueT X
)X Y
,Y Z
	UpdatedBy 
= 
table  %
.% &
Column& ,
<, -
int- 0
>0 1
(1 2
type2 6
:6 7
$str8 =
,= >
nullable? G
:G H
trueI M
)M N
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str &
,& '
columns   
:   
table   
=>   !
new  " %
{!! 
Id"" 
="" 
table"" 
."" 
Column"" %
<""% &
int""& )
>"") *
(""* +
type""+ /
:""/ 0
$str""1 6
,""6 7
nullable""8 @
:""@ A
false""B G
)""G H
.## 

Annotation## #
(### $
$str##$ 8
,##8 9
$str##: @
)##@ A
,##A B
Name$$ 
=$$ 
table$$  
.$$  !
Column$$! '
<$$' (
string$$( .
>$$. /
($$/ 0
type$$0 4
:$$4 5
$str$$6 E
,$$E F
nullable$$G O
:$$O P
false$$Q V
)$$V W
,$$W X
	CreatedOn%% 
=%% 
table%%  %
.%%% &
Column%%& ,
<%%, -
DateTime%%- 5
>%%5 6
(%%6 7
type%%7 ;
:%%; <
$str%%= H
,%%H I
nullable%%J R
:%%R S
false%%T Y
)%%Y Z
,%%Z [
	CreatedBy&& 
=&& 
table&&  %
.&&% &
Column&&& ,
<&&, -
int&&- 0
>&&0 1
(&&1 2
type&&2 6
:&&6 7
$str&&8 =
,&&= >
nullable&&? G
:&&G H
false&&I N
)&&N O
,&&O P
	UpdatedOn'' 
='' 
table''  %
.''% &
Column''& ,
<'', -
DateTime''- 5
>''5 6
(''6 7
type''7 ;
:''; <
$str''= H
,''H I
nullable''J R
:''R S
true''T X
)''X Y
,''Y Z
	UpdatedBy(( 
=(( 
table((  %
.((% &
Column((& ,
<((, -
int((- 0
>((0 1
(((1 2
type((2 6
:((6 7
$str((8 =
,((= >
nullable((? G
:((G H
true((I M
)((M N
})) 
,)) 
constraints** 
:** 
table** "
=>**# %
{++ 
table,, 
.,, 

PrimaryKey,, $
(,,$ %
$str,,% 8
,,,8 9
x,,: ;
=>,,< >
x,,? @
.,,@ A
Id,,A C
),,C D
;,,D E
}-- 
)-- 
;-- 
migrationBuilder// 
.// 
CreateTable// (
(//( )
name00 
:00 
$str00 
,00 
columns11 
:11 
table11 
=>11 !
new11" %
{22 
Id33 
=33 
table33 
.33 
Column33 %
<33% &
int33& )
>33) *
(33* +
type33+ /
:33/ 0
$str331 6
,336 7
nullable338 @
:33@ A
false33B G
)33G H
.44 

Annotation44 #
(44# $
$str44$ 8
,448 9
$str44: @
)44@ A
,44A B
Name55 
=55 
table55  
.55  !
Column55! '
<55' (
string55( .
>55. /
(55/ 0
type550 4
:554 5
$str556 E
,55E F
nullable55G O
:55O P
false55Q V
)55V W
,55W X

isDisabled66 
=66  
table66! &
.66& '
Column66' -
<66- .
bool66. 2
>662 3
(663 4
type664 8
:668 9
$str66: ?
,66? @
nullable66A I
:66I J
true66K O
)66O P
,66P Q
	CreatedOn77 
=77 
table77  %
.77% &
Column77& ,
<77, -
DateTime77- 5
>775 6
(776 7
type777 ;
:77; <
$str77= H
,77H I
nullable77J R
:77R S
false77T Y
)77Y Z
,77Z [
	CreatedBy88 
=88 
table88  %
.88% &
Column88& ,
<88, -
int88- 0
>880 1
(881 2
type882 6
:886 7
$str888 =
,88= >
nullable88? G
:88G H
false88I N
)88N O
,88O P
	UpdatedOn99 
=99 
table99  %
.99% &
Column99& ,
<99, -
DateTime99- 5
>995 6
(996 7
type997 ;
:99; <
$str99= H
,99H I
nullable99J R
:99R S
true99T X
)99X Y
,99Y Z
	UpdatedBy:: 
=:: 
table::  %
.::% &
Column::& ,
<::, -
int::- 0
>::0 1
(::1 2
type::2 6
:::6 7
$str::8 =
,::= >
nullable::? G
:::G H
true::I M
)::M N
};; 
,;; 
constraints<< 
:<< 
table<< "
=><<# %
{== 
table>> 
.>> 

PrimaryKey>> $
(>>$ %
$str>>% /
,>>/ 0
x>>1 2
=>>>3 5
x>>6 7
.>>7 8
Id>>8 :
)>>: ;
;>>; <
}?? 
)?? 
;?? 
migrationBuilderAA 
.AA 
CreateTableAA (
(AA( )
nameBB 
:BB 
$strBB 
,BB  
columnsCC 
:CC 
tableCC 
=>CC !
newCC" %
{DD 
IdEE 
=EE 
tableEE 
.EE 
ColumnEE %
<EE% &
intEE& )
>EE) *
(EE* +
typeEE+ /
:EE/ 0
$strEE1 6
,EE6 7
nullableEE8 @
:EE@ A
falseEEB G
)EEG H
.FF 

AnnotationFF #
(FF# $
$strFF$ 8
,FF8 9
$strFF: @
)FF@ A
,FFA B
DepartmentIdGG  
=GG! "
tableGG# (
.GG( )
ColumnGG) /
<GG/ 0
intGG0 3
>GG3 4
(GG4 5
typeGG5 9
:GG9 :
$strGG; @
,GG@ A
nullableGGB J
:GGJ K
falseGGL Q
)GGQ R
,GGR S
NameHH 
=HH 
tableHH  
.HH  !
ColumnHH! '
<HH' (
stringHH( .
>HH. /
(HH/ 0
typeHH0 4
:HH4 5
$strHH6 E
,HHE F
nullableHHG O
:HHO P
falseHHQ V
)HHV W
,HHW X
DurationII 
=II 
tableII $
.II$ %
ColumnII% +
<II+ ,
stringII, 2
>II2 3
(II3 4
typeII4 8
:II8 9
$strII: I
,III J
nullableIIK S
:IIS T
falseIIU Z
)IIZ [
,II[ \
DescriptionJJ 
=JJ  !
tableJJ" '
.JJ' (
ColumnJJ( .
<JJ. /
stringJJ/ 5
>JJ5 6
(JJ6 7
typeJJ7 ;
:JJ; <
$strJJ= L
,JJL M
nullableJJN V
:JJV W
falseJJX ]
)JJ] ^
,JJ^ _

isDisabledKK 
=KK  
tableKK! &
.KK& '
ColumnKK' -
<KK- .
boolKK. 2
>KK2 3
(KK3 4
typeKK4 8
:KK8 9
$strKK: ?
,KK? @
nullableKKA I
:KKI J
trueKKK O
)KKO P
,KKP Q
	CreatedOnLL 
=LL 
tableLL  %
.LL% &
ColumnLL& ,
<LL, -
DateTimeLL- 5
>LL5 6
(LL6 7
typeLL7 ;
:LL; <
$strLL= H
,LLH I
nullableLLJ R
:LLR S
falseLLT Y
)LLY Z
,LLZ [
	CreatedByMM 
=MM 
tableMM  %
.MM% &
ColumnMM& ,
<MM, -
intMM- 0
>MM0 1
(MM1 2
typeMM2 6
:MM6 7
$strMM8 =
,MM= >
nullableMM? G
:MMG H
falseMMI N
)MMN O
,MMO P
	UpdatedOnNN 
=NN 
tableNN  %
.NN% &
ColumnNN& ,
<NN, -
DateTimeNN- 5
>NN5 6
(NN6 7
typeNN7 ;
:NN; <
$strNN= H
,NNH I
nullableNNJ R
:NNR S
trueNNT X
)NNX Y
,NNY Z
	UpdatedByOO 
=OO 
tableOO  %
.OO% &
ColumnOO& ,
<OO, -
intOO- 0
>OO0 1
(OO1 2
typeOO2 6
:OO6 7
$strOO8 =
,OO= >
nullableOO? G
:OOG H
trueOOI M
)OOM N
}PP 
,PP 
constraintsQQ 
:QQ 
tableQQ "
=>QQ# %
{RR 
tableSS 
.SS 

PrimaryKeySS $
(SS$ %
$strSS% 1
,SS1 2
xSS3 4
=>SS5 7
xSS8 9
.SS9 :
IdSS: <
)SS< =
;SS= >
tableTT 
.TT 

ForeignKeyTT $
(TT$ %
nameUU 
:UU 
$strUU C
,UUC D
columnVV 
:VV 
xVV  !
=>VV" $
xVV% &
.VV& '
DepartmentIdVV' 3
,VV3 4
principalTableWW &
:WW& '
$strWW( 5
,WW5 6
principalColumnXX '
:XX' (
$strXX) -
,XX- .
onDeleteYY  
:YY  !
ReferentialActionYY" 3
.YY3 4
NoActionYY4 <
)YY< =
;YY= >
}ZZ 
)ZZ 
;ZZ 
migrationBuilder\\ 
.\\ 
CreateTable\\ (
(\\( )
name]] 
:]] 
$str]] 
,]] 
columns^^ 
:^^ 
table^^ 
=>^^ !
new^^" %
{__ 
Id`` 
=`` 
table`` 
.`` 
Column`` %
<``% &
int``& )
>``) *
(``* +
type``+ /
:``/ 0
$str``1 6
,``6 7
nullable``8 @
:``@ A
false``B G
)``G H
.aa 

Annotationaa #
(aa# $
$straa$ 8
,aa8 9
$straa: @
)aa@ A
,aaA B
RoleIdbb 
=bb 
tablebb "
.bb" #
Columnbb# )
<bb) *
intbb* -
>bb- .
(bb. /
typebb/ 3
:bb3 4
$strbb5 :
,bb: ;
nullablebb< D
:bbD E
falsebbF K
)bbK L
,bbL M
DepartmentIdcc  
=cc! "
tablecc# (
.cc( )
Columncc) /
<cc/ 0
intcc0 3
>cc3 4
(cc4 5
typecc5 9
:cc9 :
$strcc; @
,cc@ A
nullableccB J
:ccJ K
trueccL P
)ccP Q
,ccQ R
FullNamedd 
=dd 
tabledd $
.dd$ %
Columndd% +
<dd+ ,
stringdd, 2
>dd2 3
(dd3 4
typedd4 8
:dd8 9
$strdd: I
,ddI J
nullableddK S
:ddS T
falseddU Z
)ddZ [
,dd[ \
UserNameee 
=ee 
tableee $
.ee$ %
Columnee% +
<ee+ ,
stringee, 2
>ee2 3
(ee3 4
typeee4 8
:ee8 9
$stree: I
,eeI J
nullableeeK S
:eeS T
falseeeU Z
)eeZ [
,ee[ \
Passwordff 
=ff 
tableff $
.ff$ %
Columnff% +
<ff+ ,
stringff, 2
>ff2 3
(ff3 4
typeff4 8
:ff8 9
$strff: I
,ffI J
nullableffK S
:ffS T
falseffU Z
)ffZ [
,ff[ \
Emailgg 
=gg 
tablegg !
.gg! "
Columngg" (
<gg( )
stringgg) /
>gg/ 0
(gg0 1
typegg1 5
:gg5 6
$strgg7 F
,ggF G
nullableggH P
:ggP Q
falseggR W
)ggW X
,ggX Y
Base64hh 
=hh 
tablehh "
.hh" #
Columnhh# )
<hh) *
stringhh* 0
>hh0 1
(hh1 2
typehh2 6
:hh6 7
$strhh8 G
,hhG H
nullablehhI Q
:hhQ R
falsehhS X
)hhX Y
,hhY Z
Imageii 
=ii 
tableii !
.ii! "
Columnii" (
<ii( )
byteii) -
[ii- .
]ii. /
>ii/ 0
(ii0 1
typeii1 5
:ii5 6
$strii7 G
,iiG H
nullableiiI Q
:iiQ R
trueiiS W
)iiW X
,iiX Y

EmployeeIdjj 
=jj  
tablejj! &
.jj& '
Columnjj' -
<jj- .
stringjj. 4
>jj4 5
(jj5 6
typejj6 :
:jj: ;
$strjj< K
,jjK L
nullablejjM U
:jjU V
truejjW [
)jj[ \
,jj\ ]

isDisabledkk 
=kk  
tablekk! &
.kk& '
Columnkk' -
<kk- .
boolkk. 2
>kk2 3
(kk3 4
typekk4 8
:kk8 9
$strkk: ?
,kk? @
nullablekkA I
:kkI J
truekkK O
)kkO P
,kkP Q
	CreatedOnll 
=ll 
tablell  %
.ll% &
Columnll& ,
<ll, -
DateTimell- 5
>ll5 6
(ll6 7
typell7 ;
:ll; <
$strll= H
,llH I
nullablellJ R
:llR S
falsellT Y
)llY Z
,llZ [
	CreatedBymm 
=mm 
tablemm  %
.mm% &
Columnmm& ,
<mm, -
intmm- 0
>mm0 1
(mm1 2
typemm2 6
:mm6 7
$strmm8 =
,mm= >
nullablemm? G
:mmG H
falsemmI N
)mmN O
,mmO P
	UpdatedOnnn 
=nn 
tablenn  %
.nn% &
Columnnn& ,
<nn, -
DateTimenn- 5
>nn5 6
(nn6 7
typenn7 ;
:nn; <
$strnn= H
,nnH I
nullablennJ R
:nnR S
truennT X
)nnX Y
,nnY Z
	UpdatedByoo 
=oo 
tableoo  %
.oo% &
Columnoo& ,
<oo, -
intoo- 0
>oo0 1
(oo1 2
typeoo2 6
:oo6 7
$stroo8 =
,oo= >
nullableoo? G
:ooG H
trueooI M
)ooM N
}pp 
,pp 
constraintsqq 
:qq 
tableqq "
=>qq# %
{rr 
tabless 
.ss 

PrimaryKeyss $
(ss$ %
$strss% /
,ss/ 0
xss1 2
=>ss3 5
xss6 7
.ss7 8
Idss8 :
)ss: ;
;ss; <
tablett 
.tt 

ForeignKeytt $
(tt$ %
nameuu 
:uu 
$struu A
,uuA B
columnvv 
:vv 
xvv  !
=>vv" $
xvv% &
.vv& '
DepartmentIdvv' 3
,vv3 4
principalTableww &
:ww& '
$strww( 5
,ww5 6
principalColumnxx '
:xx' (
$strxx) -
)xx- .
;xx. /
tableyy 
.yy 

ForeignKeyyy $
(yy$ %
namezz 
:zz 
$strzz 5
,zz5 6
column{{ 
:{{ 
x{{  !
=>{{" $
x{{% &
.{{& '
RoleId{{' -
,{{- .
principalTable|| &
:||& '
$str||( /
,||/ 0
principalColumn}} '
:}}' (
$str}}) -
,}}- .
onDelete~~  
:~~  !
ReferentialAction~~" 3
.~~3 4
NoAction~~4 <
)~~< =
;~~= >
} 
) 
; 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 
,
 
columns
 
:
 
table
 
=>
 !
new
" %
{
 
TopicId
 
=
 
table
 #
.
# $
Column
$ *
<
* +
int
+ .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 ;
,
; <
nullable
= E
:
E F
false
G L
)
L M
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
CourseId
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
int
, /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 <
,
< =
nullable
> F
:
F G
false
H M
)
M N
,
N O
Name
 
=
 
table
  
.
  !
Column
! '
<
' (
string
( .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 E
,
E F
nullable
G O
:
O P
false
Q V
)
V W
,
W X
Duration
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
string
, 2
>
2 3
(
3 4
type
4 8
:
8 9
$str
: I
,
I J
nullable
K S
:
S T
false
U Z
)
Z [
,
[ \
Content
 
=
 
table
 #
.
# $
Column
$ *
<
* +
string
+ 1
>
1 2
(
2 3
type
3 7
:
7 8
$str
9 H
,
H I
nullable
J R
:
R S
false
T Y
)
Y Z
,
Z [

isDisabled
 
=
  
table
! &
.
& '
Column
' -
<
- .
bool
. 2
>
2 3
(
3 4
type
4 8
:
8 9
$str
: ?
,
? @
nullable
A I
:
I J
true
K O
)
O P
,
P Q
	CreatedOn
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
false
T Y
)
Y Z
,
Z [
	CreatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
,
O P
	UpdatedOn
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
true
T X
)
X Y
,
Y Z
	UpdatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
true
I M
)
M N
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 0
,
0 1
x
2 3
=>
4 6
x
7 8
.
8 9
TopicId
9 @
)
@ A
;
A B
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 :
,
: ;
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
CourseId
' /
,
/ 0
principalTable
 &
:
& '
$str
( 1
,
1 2
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
NoAction
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 '
,
' (
columns
 
:
 
table
 
=>
 !
new
" %
{
 
CourseId
   
=
   
table
   $
.
  $ %
Column
  % +
<
  + ,
int
  , /
>
  / 0
(
  0 1
type
  1 5
:
  5 6
$str
  7 <
,
  < =
nullable
  > F
:
  F G
false
  H M
)
  M N
,
  N O
	TraineeId
¡¡ 
=
¡¡ 
table
¡¡  %
.
¡¡% &
Column
¡¡& ,
<
¡¡, -
int
¡¡- 0
>
¡¡0 1
(
¡¡1 2
type
¡¡2 6
:
¡¡6 7
$str
¡¡8 =
,
¡¡= >
nullable
¡¡? G
:
¡¡G H
false
¡¡I N
)
¡¡N O
,
¡¡O P
Feedback
¢¢ 
=
¢¢ 
table
¢¢ $
.
¢¢$ %
Column
¢¢% +
<
¢¢+ ,
string
¢¢, 2
>
¢¢2 3
(
¢¢3 4
type
¢¢4 8
:
¢¢8 9
$str
¢¢: J
,
¢¢J K
	maxLength
¢¢L U
:
¢¢U V
$num
¢¢W [
,
¢¢[ \
nullable
¢¢] e
:
¢¢e f
false
¢¢g l
)
¢¢l m
,
¢¢m n
Rating
££ 
=
££ 
table
££ "
.
££" #
Column
££# )
<
££) *
float
££* /
>
££/ 0
(
££0 1
type
££1 5
:
££5 6
$str
££7 =
,
££= >
nullable
££? G
:
££G H
false
££I N
)
££N O
,
££O P
	CreatedOn
¤¤ 
=
¤¤ 
table
¤¤  %
.
¤¤% &
Column
¤¤& ,
<
¤¤, -
DateTime
¤¤- 5
>
¤¤5 6
(
¤¤6 7
type
¤¤7 ;
:
¤¤; <
$str
¤¤= H
,
¤¤H I
nullable
¤¤J R
:
¤¤R S
false
¤¤T Y
)
¤¤Y Z
,
¤¤Z [
	CreatedBy
¥¥ 
=
¥¥ 
table
¥¥  %
.
¥¥% &
Column
¥¥& ,
<
¥¥, -
int
¥¥- 0
>
¥¥0 1
(
¥¥1 2
type
¥¥2 6
:
¥¥6 7
$str
¥¥8 =
,
¥¥= >
nullable
¥¥? G
:
¥¥G H
false
¥¥I N
)
¥¥N O
,
¥¥O P
	UpdatedOn
¦¦ 
=
¦¦ 
table
¦¦  %
.
¦¦% &
Column
¦¦& ,
<
¦¦, -
DateTime
¦¦- 5
>
¦¦5 6
(
¦¦6 7
type
¦¦7 ;
:
¦¦; <
$str
¦¦= H
,
¦¦H I
nullable
¦¦J R
:
¦¦R S
true
¦¦T X
)
¦¦X Y
,
¦¦Y Z
	UpdatedBy
§§ 
=
§§ 
table
§§  %
.
§§% &
Column
§§& ,
<
§§, -
int
§§- 0
>
§§0 1
(
§§1 2
type
§§2 6
:
§§6 7
$str
§§8 =
,
§§= >
nullable
§§? G
:
§§G H
true
§§I M
)
§§M N
}
¨¨ 
,
¨¨ 
constraints
©© 
:
©© 
table
©© "
=>
©©# %
{
ªª 
table
«« 
.
«« 

PrimaryKey
«« $
(
««$ %
$str
««% 9
,
««9 :
x
««; <
=>
««= ?
new
««@ C
{
««D E
x
««F G
.
««G H
CourseId
««H P
,
««P Q
x
««R S
.
««S T
	TraineeId
««T ]
}
««^ _
)
««_ `
;
««` a
table
¬¬ 
.
¬¬ 

ForeignKey
¬¬ $
(
¬¬$ %
name
­­ 
:
­­ 
$str
­­ C
,
­­C D
column
®® 
:
®® 
x
®®  !
=>
®®" $
x
®®% &
.
®®& '
CourseId
®®' /
,
®®/ 0
principalTable
¯¯ &
:
¯¯& '
$str
¯¯( 1
,
¯¯1 2
principalColumn
°° '
:
°°' (
$str
°°) -
,
°°- .
onDelete
±±  
:
±±  !
ReferentialAction
±±" 3
.
±±3 4
NoAction
±±4 <
)
±±< =
;
±±= >
table
²² 
.
²² 

ForeignKey
²² $
(
²²$ %
name
³³ 
:
³³ 
$str
³³ B
,
³³B C
column
´´ 
:
´´ 
x
´´  !
=>
´´" $
x
´´% &
.
´´& '
	TraineeId
´´' 0
,
´´0 1
principalTable
µµ &
:
µµ& '
$str
µµ( /
,
µµ/ 0
principalColumn
¶¶ '
:
¶¶' (
$str
¶¶) -
,
¶¶- .
onDelete
··  
:
··  !
ReferentialAction
··" 3
.
··3 4
NoAction
··4 <
)
··< =
;
··= >
}
¸¸ 
)
¸¸ 
;
¸¸ 
migrationBuilder
ºº 
.
ºº 
CreateTable
ºº (
(
ºº( )
name
»» 
:
»» 
$str
»» #
,
»»# $
columns
¼¼ 
:
¼¼ 
table
¼¼ 
=>
¼¼ !
new
¼¼" %
{
½½ 
CourseId
¾¾ 
=
¾¾ 
table
¾¾ $
.
¾¾$ %
Column
¾¾% +
<
¾¾+ ,
int
¾¾, /
>
¾¾/ 0
(
¾¾0 1
type
¾¾1 5
:
¾¾5 6
$str
¾¾7 <
,
¾¾< =
nullable
¾¾> F
:
¾¾F G
false
¾¾H M
)
¾¾M N
,
¾¾N O
UserId
¿¿ 
=
¿¿ 
table
¿¿ "
.
¿¿" #
Column
¿¿# )
<
¿¿) *
int
¿¿* -
>
¿¿- .
(
¿¿. /
type
¿¿/ 3
:
¿¿3 4
$str
¿¿5 :
,
¿¿: ;
nullable
¿¿< D
:
¿¿D E
false
¿¿F K
)
¿¿K L
,
¿¿L M
RoleId
ÀÀ 
=
ÀÀ 
table
ÀÀ "
.
ÀÀ" #
Column
ÀÀ# )
<
ÀÀ) *
int
ÀÀ* -
>
ÀÀ- .
(
ÀÀ. /
type
ÀÀ/ 3
:
ÀÀ3 4
$str
ÀÀ5 :
,
ÀÀ: ;
nullable
ÀÀ< D
:
ÀÀD E
false
ÀÀF K
)
ÀÀK L
,
ÀÀL M
	CreatedOn
ÁÁ 
=
ÁÁ 
table
ÁÁ  %
.
ÁÁ% &
Column
ÁÁ& ,
<
ÁÁ, -
DateTime
ÁÁ- 5
>
ÁÁ5 6
(
ÁÁ6 7
type
ÁÁ7 ;
:
ÁÁ; <
$str
ÁÁ= H
,
ÁÁH I
nullable
ÁÁJ R
:
ÁÁR S
false
ÁÁT Y
)
ÁÁY Z
,
ÁÁZ [
	CreatedBy
ÂÂ 
=
ÂÂ 
table
ÂÂ  %
.
ÂÂ% &
Column
ÂÂ& ,
<
ÂÂ, -
int
ÂÂ- 0
>
ÂÂ0 1
(
ÂÂ1 2
type
ÂÂ2 6
:
ÂÂ6 7
$str
ÂÂ8 =
,
ÂÂ= >
nullable
ÂÂ? G
:
ÂÂG H
false
ÂÂI N
)
ÂÂN O
,
ÂÂO P
	UpdatedOn
ÃÃ 
=
ÃÃ 
table
ÃÃ  %
.
ÃÃ% &
Column
ÃÃ& ,
<
ÃÃ, -
DateTime
ÃÃ- 5
>
ÃÃ5 6
(
ÃÃ6 7
type
ÃÃ7 ;
:
ÃÃ; <
$str
ÃÃ= H
,
ÃÃH I
nullable
ÃÃJ R
:
ÃÃR S
true
ÃÃT X
)
ÃÃX Y
,
ÃÃY Z
	UpdatedBy
ÄÄ 
=
ÄÄ 
table
ÄÄ  %
.
ÄÄ% &
Column
ÄÄ& ,
<
ÄÄ, -
int
ÄÄ- 0
>
ÄÄ0 1
(
ÄÄ1 2
type
ÄÄ2 6
:
ÄÄ6 7
$str
ÄÄ8 =
,
ÄÄ= >
nullable
ÄÄ? G
:
ÄÄG H
true
ÄÄI M
)
ÄÄM N
}
ÅÅ 
,
ÅÅ 
constraints
ÆÆ 
:
ÆÆ 
table
ÆÆ "
=>
ÆÆ# %
{
ÇÇ 
table
ÈÈ 
.
ÈÈ 

PrimaryKey
ÈÈ $
(
ÈÈ$ %
$str
ÈÈ% 5
,
ÈÈ5 6
x
ÈÈ7 8
=>
ÈÈ9 ;
new
ÈÈ< ?
{
ÈÈ@ A
x
ÈÈB C
.
ÈÈC D
CourseId
ÈÈD L
,
ÈÈL M
x
ÈÈN O
.
ÈÈO P
UserId
ÈÈP V
,
ÈÈV W
x
ÈÈX Y
.
ÈÈY Z
RoleId
ÈÈZ `
}
ÈÈa b
)
ÈÈb c
;
ÈÈc d
table
ÉÉ 
.
ÉÉ 

ForeignKey
ÉÉ $
(
ÉÉ$ %
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ ?
,
ÊÊ? @
column
ËË 
:
ËË 
x
ËË  !
=>
ËË" $
x
ËË% &
.
ËË& '
CourseId
ËË' /
,
ËË/ 0
principalTable
ÌÌ &
:
ÌÌ& '
$str
ÌÌ( 1
,
ÌÌ1 2
principalColumn
ÍÍ '
:
ÍÍ' (
$str
ÍÍ) -
,
ÍÍ- .
onDelete
ÎÎ  
:
ÎÎ  !
ReferentialAction
ÎÎ" 3
.
ÎÎ3 4
NoAction
ÎÎ4 <
)
ÎÎ< =
;
ÎÎ= >
table
ÏÏ 
.
ÏÏ 

ForeignKey
ÏÏ $
(
ÏÏ$ %
name
ÐÐ 
:
ÐÐ 
$str
ÐÐ ;
,
ÐÐ; <
column
ÑÑ 
:
ÑÑ 
x
ÑÑ  !
=>
ÑÑ" $
x
ÑÑ% &
.
ÑÑ& '
UserId
ÑÑ' -
,
ÑÑ- .
principalTable
ÒÒ &
:
ÒÒ& '
$str
ÒÒ( /
,
ÒÒ/ 0
principalColumn
ÓÓ '
:
ÓÓ' (
$str
ÓÓ) -
,
ÓÓ- .
onDelete
ÔÔ  
:
ÔÔ  !
ReferentialAction
ÔÔ" 3
.
ÔÔ3 4
NoAction
ÔÔ4 <
)
ÔÔ< =
;
ÔÔ= >
}
ÕÕ 
)
ÕÕ 
;
ÕÕ 
migrationBuilder
×× 
.
×× 
CreateTable
×× (
(
××( )
name
ØØ 
:
ØØ 
$str
ØØ 
,
ØØ  
columns
ÙÙ 
:
ÙÙ 
table
ÙÙ 
=>
ÙÙ !
new
ÙÙ" %
{
ÚÚ 
Id
ÛÛ 
=
ÛÛ 
table
ÛÛ 
.
ÛÛ 
Column
ÛÛ %
<
ÛÛ% &
int
ÛÛ& )
>
ÛÛ) *
(
ÛÛ* +
type
ÛÛ+ /
:
ÛÛ/ 0
$str
ÛÛ1 6
,
ÛÛ6 7
nullable
ÛÛ8 @
:
ÛÛ@ A
false
ÛÛB G
)
ÛÛG H
.
ÜÜ 

Annotation
ÜÜ #
(
ÜÜ# $
$str
ÜÜ$ 8
,
ÜÜ8 9
$str
ÜÜ: @
)
ÜÜ@ A
,
ÜÜA B
DepartmentId
ÝÝ  
=
ÝÝ! "
table
ÝÝ# (
.
ÝÝ( )
Column
ÝÝ) /
<
ÝÝ/ 0
int
ÝÝ0 3
>
ÝÝ3 4
(
ÝÝ4 5
type
ÝÝ5 9
:
ÝÝ9 :
$str
ÝÝ; @
,
ÝÝ@ A
nullable
ÝÝB J
:
ÝÝJ K
true
ÝÝL P
)
ÝÝP Q
,
ÝÝQ R

ReviewerId
ÞÞ 
=
ÞÞ  
table
ÞÞ! &
.
ÞÞ& '
Column
ÞÞ' -
<
ÞÞ- .
int
ÞÞ. 1
>
ÞÞ1 2
(
ÞÞ2 3
type
ÞÞ3 7
:
ÞÞ7 8
$str
ÞÞ9 >
,
ÞÞ> ?
nullable
ÞÞ@ H
:
ÞÞH I
false
ÞÞJ O
)
ÞÞO P
,
ÞÞP Q
	TraineeId
ßß 
=
ßß 
table
ßß  %
.
ßß% &
Column
ßß& ,
<
ßß, -
int
ßß- 0
>
ßß0 1
(
ßß1 2
type
ßß2 6
:
ßß6 7
$str
ßß8 =
,
ßß= >
nullable
ßß? G
:
ßßG H
false
ßßI N
)
ßßN O
,
ßßO P
StatusId
àà 
=
àà 
table
àà $
.
àà$ %
Column
àà% +
<
àà+ ,
int
àà, /
>
àà/ 0
(
àà0 1
type
àà1 5
:
àà5 6
$str
àà7 <
,
àà< =
nullable
àà> F
:
ààF G
false
ààH M
)
ààM N
,
ààN O

ReviewDate
áá 
=
áá  
table
áá! &
.
áá& '
Column
áá' -
<
áá- .
DateTime
áá. 6
>
áá6 7
(
áá7 8
type
áá8 <
:
áá< =
$str
áá> I
,
ááI J
nullable
ááK S
:
ááS T
false
ááU Z
)
ááZ [
,
áá[ \

ReviewTime
ââ 
=
ââ  
table
ââ! &
.
ââ& '
Column
ââ' -
<
ââ- .
DateTime
ââ. 6
>
ââ6 7
(
ââ7 8
type
ââ8 <
:
ââ< =
$str
ââ> I
,
ââI J
nullable
ââK S
:
ââS T
false
ââU Z
)
ââZ [
,
ââ[ \
Mode
ãã 
=
ãã 
table
ãã  
.
ãã  !
Column
ãã! '
<
ãã' (
string
ãã( .
>
ãã. /
(
ãã/ 0
type
ãã0 4
:
ãã4 5
$str
ãã6 E
,
ããE F
nullable
ããG O
:
ããO P
false
ããQ V
)
ããV W
,
ããW X
	CreatedOn
ää 
=
ää 
table
ää  %
.
ää% &
Column
ää& ,
<
ää, -
DateTime
ää- 5
>
ää5 6
(
ää6 7
type
ää7 ;
:
ää; <
$str
ää= H
,
ääH I
nullable
ääJ R
:
ääR S
false
ääT Y
)
ääY Z
,
ääZ [
	CreatedBy
åå 
=
åå 
table
åå  %
.
åå% &
Column
åå& ,
<
åå, -
int
åå- 0
>
åå0 1
(
åå1 2
type
åå2 6
:
åå6 7
$str
åå8 =
,
åå= >
nullable
åå? G
:
ååG H
false
ååI N
)
ååN O
,
ååO P
	UpdatedOn
ææ 
=
ææ 
table
ææ  %
.
ææ% &
Column
ææ& ,
<
ææ, -
DateTime
ææ- 5
>
ææ5 6
(
ææ6 7
type
ææ7 ;
:
ææ; <
$str
ææ= H
,
ææH I
nullable
ææJ R
:
ææR S
true
ææT X
)
ææX Y
,
ææY Z
	UpdatedBy
çç 
=
çç 
table
çç  %
.
çç% &
Column
çç& ,
<
çç, -
int
çç- 0
>
çç0 1
(
çç1 2
type
çç2 6
:
çç6 7
$str
çç8 =
,
çç= >
nullable
çç? G
:
ççG H
true
ççI M
)
ççM N
}
èè 
,
èè 
constraints
éé 
:
éé 
table
éé "
=>
éé# %
{
êê 
table
ëë 
.
ëë 

PrimaryKey
ëë $
(
ëë$ %
$str
ëë% 1
,
ëë1 2
x
ëë3 4
=>
ëë5 7
x
ëë8 9
.
ëë9 :
Id
ëë: <
)
ëë< =
;
ëë= >
table
ìì 
.
ìì 

ForeignKey
ìì $
(
ìì$ %
name
íí 
:
íí 
$str
íí C
,
ííC D
column
îî 
:
îî 
x
îî  !
=>
îî" $
x
îî% &
.
îî& '
DepartmentId
îî' 3
,
îî3 4
principalTable
ïï &
:
ïï& '
$str
ïï( 5
,
ïï5 6
principalColumn
ðð '
:
ðð' (
$str
ðð) -
)
ðð- .
;
ðð. /
table
ññ 
.
ññ 

ForeignKey
ññ $
(
ññ$ %
name
òò 
:
òò 
$str
òò B
,
òòB C
column
óó 
:
óó 
x
óó  !
=>
óó" $
x
óó% &
.
óó& '
StatusId
óó' /
,
óó/ 0
principalTable
ôô &
:
ôô& '
$str
ôô( 8
,
ôô8 9
principalColumn
õõ '
:
õõ' (
$str
õõ) -
,
õõ- .
onDelete
öö  
:
öö  !
ReferentialAction
öö" 3
.
öö3 4
NoAction
öö4 <
)
öö< =
;
öö= >
table
÷÷ 
.
÷÷ 

ForeignKey
÷÷ $
(
÷÷$ %
name
øø 
:
øø 
$str
øø ;
,
øø; <
column
ùù 
:
ùù 
x
ùù  !
=>
ùù" $
x
ùù% &
.
ùù& '

ReviewerId
ùù' 1
,
ùù1 2
principalTable
úú &
:
úú& '
$str
úú( /
,
úú/ 0
principalColumn
ûû '
:
ûû' (
$str
ûû) -
,
ûû- .
onDelete
üü  
:
üü  !
ReferentialAction
üü" 3
.
üü3 4
NoAction
üü4 <
)
üü< =
;
üü= >
table
ýý 
.
ýý 

ForeignKey
ýý $
(
ýý$ %
name
þþ 
:
þþ 
$str
þþ :
,
þþ: ;
column
ÿÿ 
:
ÿÿ 
x
ÿÿ  !
=>
ÿÿ" $
x
ÿÿ% &
.
ÿÿ& '
	TraineeId
ÿÿ' 0
,
ÿÿ0 1
principalTable
 &
:
& '
$str
( /
,
/ 0
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
NoAction
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 (
,
( )
columns
 
:
 
table
 
=>
 !
new
" %
{
 
CourseId
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
int
, /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 <
,
< =
nullable
> F
:
F G
false
H M
)
M N
,
N O
	TraineeId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
,
O P
	TrainerId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
,
O P
Feedback
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
string
, 2
>
2 3
(
3 4
type
4 8
:
8 9
$str
: I
,
I J
	maxLength
K T
:
T U
$num
V Y
,
Y Z
nullable
[ c
:
c d
false
e j
)
j k
,
k l
	CreatedOn
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
false
T Y
)
Y Z
,
Z [
	CreatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
,
O P
	UpdatedOn
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
true
T X
)
X Y
,
Y Z
	UpdatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
true
I M
)
M N
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% :
,
: ;
x
< =
=>
> @
new
A D
{
E F
x
G H
.
H I
CourseId
I Q
,
Q R
x
S T
.
T U
	TraineeId
U ^
,
^ _
x
` a
.
a b
	TrainerId
b k
}
l m
)
m n
;
n o
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 D
,
D E
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
CourseId
' /
,
/ 0
principalTable
 &
:
& '
$str
( 1
,
1 2
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
NoAction
4 <
)
< =
;
= >
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 C
,
C D
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	TraineeId
' 0
,
0 1
principalTable
 &
:
& '
$str
( /
,
/ 0
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
    
:
    !
ReferentialAction
  " 3
.
  3 4
NoAction
  4 <
)
  < =
;
  = >
table
¡¡ 
.
¡¡ 

ForeignKey
¡¡ $
(
¡¡$ %
name
¢¢ 
:
¢¢ 
$str
¢¢ C
,
¢¢C D
column
££ 
:
££ 
x
££  !
=>
££" $
x
££% &
.
££& '
	TrainerId
££' 0
,
££0 1
principalTable
¤¤ &
:
¤¤& '
$str
¤¤( /
,
¤¤/ 0
principalColumn
¥¥ '
:
¥¥' (
$str
¥¥) -
,
¥¥- .
onDelete
¦¦  
:
¦¦  !
ReferentialAction
¦¦" 3
.
¦¦3 4
NoAction
¦¦4 <
)
¦¦< =
;
¦¦= >
}
§§ 
)
§§ 
;
§§ 
migrationBuilder
©© 
.
©© 
CreateTable
©© (
(
©©( )
name
ªª 
:
ªª 
$str
ªª #
,
ªª# $
columns
«« 
:
«« 
table
«« 
=>
«« !
new
««" %
{
¬¬ 
CourseId
­­ 
=
­­ 
table
­­ $
.
­­$ %
Column
­­% +
<
­­+ ,
int
­­, /
>
­­/ 0
(
­­0 1
type
­­1 5
:
­­5 6
$str
­­7 <
,
­­< =
nullable
­­> F
:
­­F G
false
­­H M
)
­­M N
,
­­N O
TopicId
®® 
=
®® 
table
®® #
.
®®# $
Column
®®$ *
<
®®* +
int
®®+ .
>
®®. /
(
®®/ 0
type
®®0 4
:
®®4 5
$str
®®6 ;
,
®®; <
nullable
®®= E
:
®®E F
false
®®G L
)
®®L M
,
®®M N
OwnerId
¯¯ 
=
¯¯ 
table
¯¯ #
.
¯¯# $
Column
¯¯$ *
<
¯¯* +
int
¯¯+ .
>
¯¯. /
(
¯¯/ 0
type
¯¯0 4
:
¯¯4 5
$str
¯¯6 ;
,
¯¯; <
nullable
¯¯= E
:
¯¯E F
false
¯¯G L
)
¯¯L M
,
¯¯M N
Base64
°° 
=
°° 
table
°° "
.
°°" #
Column
°°# )
<
°°) *
string
°°* 0
>
°°0 1
(
°°1 2
type
°°2 6
:
°°6 7
$str
°°8 G
,
°°G H
nullable
°°I Q
:
°°Q R
false
°°S X
)
°°X Y
,
°°Y Z
Document
±± 
=
±± 
table
±± $
.
±±$ %
Column
±±% +
<
±±+ ,
byte
±±, 0
[
±±0 1
]
±±1 2
>
±±2 3
(
±±3 4
type
±±4 8
:
±±8 9
$str
±±: J
,
±±J K
nullable
±±L T
:
±±T U
true
±±V Z
)
±±Z [
,
±±[ \
	CreatedOn
²² 
=
²² 
table
²²  %
.
²²% &
Column
²²& ,
<
²², -
DateTime
²²- 5
>
²²5 6
(
²²6 7
type
²²7 ;
:
²²; <
$str
²²= H
,
²²H I
nullable
²²J R
:
²²R S
false
²²T Y
)
²²Y Z
,
²²Z [
	CreatedBy
³³ 
=
³³ 
table
³³  %
.
³³% &
Column
³³& ,
<
³³, -
int
³³- 0
>
³³0 1
(
³³1 2
type
³³2 6
:
³³6 7
$str
³³8 =
,
³³= >
nullable
³³? G
:
³³G H
false
³³I N
)
³³N O
,
³³O P
	UpdatedOn
´´ 
=
´´ 
table
´´  %
.
´´% &
Column
´´& ,
<
´´, -
DateTime
´´- 5
>
´´5 6
(
´´6 7
type
´´7 ;
:
´´; <
$str
´´= H
,
´´H I
nullable
´´J R
:
´´R S
true
´´T X
)
´´X Y
,
´´Y Z
	UpdatedBy
µµ 
=
µµ 
table
µµ  %
.
µµ% &
Column
µµ& ,
<
µµ, -
int
µµ- 0
>
µµ0 1
(
µµ1 2
type
µµ2 6
:
µµ6 7
$str
µµ8 =
,
µµ= >
nullable
µµ? G
:
µµG H
true
µµI M
)
µµM N
}
¶¶ 
,
¶¶ 
constraints
·· 
:
·· 
table
·· "
=>
··# %
{
¸¸ 
table
¹¹ 
.
¹¹ 

PrimaryKey
¹¹ $
(
¹¹$ %
$str
¹¹% 5
,
¹¹5 6
x
¹¹7 8
=>
¹¹9 ;
new
¹¹< ?
{
¹¹@ A
x
¹¹B C
.
¹¹C D
CourseId
¹¹D L
,
¹¹L M
x
¹¹N O
.
¹¹O P
TopicId
¹¹P W
,
¹¹W X
x
¹¹Y Z
.
¹¹Z [
OwnerId
¹¹[ b
}
¹¹c d
)
¹¹d e
;
¹¹e f
table
ºº 
.
ºº 

ForeignKey
ºº $
(
ºº$ %
name
»» 
:
»» 
$str
»» ?
,
»»? @
column
¼¼ 
:
¼¼ 
x
¼¼  !
=>
¼¼" $
x
¼¼% &
.
¼¼& '
CourseId
¼¼' /
,
¼¼/ 0
principalTable
½½ &
:
½½& '
$str
½½( 1
,
½½1 2
principalColumn
¾¾ '
:
¾¾' (
$str
¾¾) -
,
¾¾- .
onDelete
¿¿  
:
¿¿  !
ReferentialAction
¿¿" 3
.
¿¿3 4
NoAction
¿¿4 <
)
¿¿< =
;
¿¿= >
table
ÀÀ 
.
ÀÀ 

ForeignKey
ÀÀ $
(
ÀÀ$ %
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ =
,
ÁÁ= >
column
ÂÂ 
:
ÂÂ 
x
ÂÂ  !
=>
ÂÂ" $
x
ÂÂ% &
.
ÂÂ& '
TopicId
ÂÂ' .
,
ÂÂ. /
principalTable
ÃÃ &
:
ÃÃ& '
$str
ÃÃ( 0
,
ÃÃ0 1
principalColumn
ÄÄ '
:
ÄÄ' (
$str
ÄÄ) 2
,
ÄÄ2 3
onDelete
ÅÅ  
:
ÅÅ  !
ReferentialAction
ÅÅ" 3
.
ÅÅ3 4
NoAction
ÅÅ4 <
)
ÅÅ< =
;
ÅÅ= >
table
ÆÆ 
.
ÆÆ 

ForeignKey
ÆÆ $
(
ÆÆ$ %
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ <
,
ÇÇ< =
column
ÈÈ 
:
ÈÈ 
x
ÈÈ  !
=>
ÈÈ" $
x
ÈÈ% &
.
ÈÈ& '
OwnerId
ÈÈ' .
,
ÈÈ. /
principalTable
ÉÉ &
:
ÉÉ& '
$str
ÉÉ( /
,
ÉÉ/ 0
principalColumn
ÊÊ '
:
ÊÊ' (
$str
ÊÊ) -
,
ÊÊ- .
onDelete
ËË  
:
ËË  !
ReferentialAction
ËË" 3
.
ËË3 4
NoAction
ËË4 <
)
ËË< =
;
ËË= >
}
ÌÌ 
)
ÌÌ 
;
ÌÌ 
migrationBuilder
ÎÎ 
.
ÎÎ 
CreateTable
ÎÎ (
(
ÎÎ( )
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ #
,
ÏÏ# $
columns
ÐÐ 
:
ÐÐ 
table
ÐÐ 
=>
ÐÐ !
new
ÐÐ" %
{
ÑÑ 
CourseId
ÒÒ 
=
ÒÒ 
table
ÒÒ $
.
ÒÒ$ %
Column
ÒÒ% +
<
ÒÒ+ ,
int
ÒÒ, /
>
ÒÒ/ 0
(
ÒÒ0 1
type
ÒÒ1 5
:
ÒÒ5 6
$str
ÒÒ7 <
,
ÒÒ< =
nullable
ÒÒ> F
:
ÒÒF G
false
ÒÒH M
)
ÒÒM N
,
ÒÒN O
TopicId
ÓÓ 
=
ÓÓ 
table
ÓÓ #
.
ÓÓ# $
Column
ÓÓ$ *
<
ÓÓ* +
int
ÓÓ+ .
>
ÓÓ. /
(
ÓÓ/ 0
type
ÓÓ0 4
:
ÓÓ4 5
$str
ÓÓ6 ;
,
ÓÓ; <
nullable
ÓÓ= E
:
ÓÓE F
false
ÓÓG L
)
ÓÓL M
,
ÓÓM N
OwnerId
ÔÔ 
=
ÔÔ 
table
ÔÔ #
.
ÔÔ# $
Column
ÔÔ$ *
<
ÔÔ* +
int
ÔÔ+ .
>
ÔÔ. /
(
ÔÔ/ 0
type
ÔÔ0 4
:
ÔÔ4 5
$str
ÔÔ6 ;
,
ÔÔ; <
nullable
ÔÔ= E
:
ÔÔE F
false
ÔÔG L
)
ÔÔL M
,
ÔÔM N
Status
ÕÕ 
=
ÕÕ 
table
ÕÕ "
.
ÕÕ" #
Column
ÕÕ# )
<
ÕÕ) *
bool
ÕÕ* .
>
ÕÕ. /
(
ÕÕ/ 0
type
ÕÕ0 4
:
ÕÕ4 5
$str
ÕÕ6 ;
,
ÕÕ; <
nullable
ÕÕ= E
:
ÕÕE F
false
ÕÕG L
)
ÕÕL M
,
ÕÕM N
	CreatedOn
ÖÖ 
=
ÖÖ 
table
ÖÖ  %
.
ÖÖ% &
Column
ÖÖ& ,
<
ÖÖ, -
DateTime
ÖÖ- 5
>
ÖÖ5 6
(
ÖÖ6 7
type
ÖÖ7 ;
:
ÖÖ; <
$str
ÖÖ= H
,
ÖÖH I
nullable
ÖÖJ R
:
ÖÖR S
false
ÖÖT Y
)
ÖÖY Z
,
ÖÖZ [
	CreatedBy
×× 
=
×× 
table
××  %
.
××% &
Column
××& ,
<
××, -
int
××- 0
>
××0 1
(
××1 2
type
××2 6
:
××6 7
$str
××8 =
,
××= >
nullable
××? G
:
××G H
false
××I N
)
××N O
,
××O P
	UpdatedOn
ØØ 
=
ØØ 
table
ØØ  %
.
ØØ% &
Column
ØØ& ,
<
ØØ, -
DateTime
ØØ- 5
>
ØØ5 6
(
ØØ6 7
type
ØØ7 ;
:
ØØ; <
$str
ØØ= H
,
ØØH I
nullable
ØØJ R
:
ØØR S
true
ØØT X
)
ØØX Y
,
ØØY Z
	UpdatedBy
ÙÙ 
=
ÙÙ 
table
ÙÙ  %
.
ÙÙ% &
Column
ÙÙ& ,
<
ÙÙ, -
int
ÙÙ- 0
>
ÙÙ0 1
(
ÙÙ1 2
type
ÙÙ2 6
:
ÙÙ6 7
$str
ÙÙ8 =
,
ÙÙ= >
nullable
ÙÙ? G
:
ÙÙG H
true
ÙÙI M
)
ÙÙM N
}
ÚÚ 
,
ÚÚ 
constraints
ÛÛ 
:
ÛÛ 
table
ÛÛ "
=>
ÛÛ# %
{
ÜÜ 
table
ÝÝ 
.
ÝÝ 

PrimaryKey
ÝÝ $
(
ÝÝ$ %
$str
ÝÝ% 5
,
ÝÝ5 6
x
ÝÝ7 8
=>
ÝÝ9 ;
new
ÝÝ< ?
{
ÝÝ@ A
x
ÝÝB C
.
ÝÝC D
CourseId
ÝÝD L
,
ÝÝL M
x
ÝÝN O
.
ÝÝO P
TopicId
ÝÝP W
,
ÝÝW X
x
ÝÝY Z
.
ÝÝZ [
OwnerId
ÝÝ[ b
}
ÝÝc d
)
ÝÝd e
;
ÝÝe f
table
ÞÞ 
.
ÞÞ 

ForeignKey
ÞÞ $
(
ÞÞ$ %
name
ßß 
:
ßß 
$str
ßß ?
,
ßß? @
column
àà 
:
àà 
x
àà  !
=>
àà" $
x
àà% &
.
àà& '
CourseId
àà' /
,
àà/ 0
principalTable
áá &
:
áá& '
$str
áá( 1
,
áá1 2
principalColumn
ââ '
:
ââ' (
$str
ââ) -
,
ââ- .
onDelete
ãã  
:
ãã  !
ReferentialAction
ãã" 3
.
ãã3 4
NoAction
ãã4 <
)
ãã< =
;
ãã= >
table
ää 
.
ää 

ForeignKey
ää $
(
ää$ %
name
åå 
:
åå 
$str
åå =
,
åå= >
column
ææ 
:
ææ 
x
ææ  !
=>
ææ" $
x
ææ% &
.
ææ& '
TopicId
ææ' .
,
ææ. /
principalTable
çç &
:
çç& '
$str
çç( 0
,
çç0 1
principalColumn
èè '
:
èè' (
$str
èè) 2
,
èè2 3
onDelete
éé  
:
éé  !
ReferentialAction
éé" 3
.
éé3 4
NoAction
éé4 <
)
éé< =
;
éé= >
table
êê 
.
êê 

ForeignKey
êê $
(
êê$ %
name
ëë 
:
ëë 
$str
ëë <
,
ëë< =
column
ìì 
:
ìì 
x
ìì  !
=>
ìì" $
x
ìì% &
.
ìì& '
OwnerId
ìì' .
,
ìì. /
principalTable
íí &
:
íí& '
$str
íí( /
,
íí/ 0
principalColumn
îî '
:
îî' (
$str
îî) -
,
îî- .
onDelete
ïï  
:
ïï  !
ReferentialAction
ïï" 3
.
ïï3 4
NoAction
ïï4 <
)
ïï< =
;
ïï= >
}
ðð 
)
ðð 
;
ðð 
migrationBuilder
òò 
.
òò 
CreateTable
òò (
(
òò( )
name
óó 
:
óó 
$str
óó 
,
óó 
columns
ôô 
:
ôô 
table
ôô 
=>
ôô !
new
ôô" %
{
õõ 
ReviewId
öö 
=
öö 
table
öö $
.
öö$ %
Column
öö% +
<
öö+ ,
int
öö, /
>
öö/ 0
(
öö0 1
type
öö1 5
:
öö5 6
$str
öö7 <
,
öö< =
nullable
öö> F
:
ööF G
false
ööH M
)
ööM N
,
ööN O
	TraineeId
÷÷ 
=
÷÷ 
table
÷÷  %
.
÷÷% &
Column
÷÷& ,
<
÷÷, -
int
÷÷- 0
>
÷÷0 1
(
÷÷1 2
type
÷÷2 6
:
÷÷6 7
$str
÷÷8 =
,
÷÷= >
nullable
÷÷? G
:
÷÷G H
false
÷÷I N
)
÷÷N O
,
÷÷O P
Agenda
øø 
=
øø 
table
øø "
.
øø" #
Column
øø# )
<
øø) *
string
øø* 0
>
øø0 1
(
øø1 2
type
øø2 6
:
øø6 7
$str
øø8 G
,
øøG H
nullable
øøI Q
:
øøQ R
false
øøS X
)
øøX Y
,
øøY Z
MeetingNotes
ùù  
=
ùù! "
table
ùù# (
.
ùù( )
Column
ùù) /
<
ùù/ 0
string
ùù0 6
>
ùù6 7
(
ùù7 8
type
ùù8 <
:
ùù< =
$str
ùù> M
,
ùùM N
nullable
ùùO W
:
ùùW X
false
ùùY ^
)
ùù^ _
,
ùù_ `
PurposeOfMeeting
úú $
=
úú% &
table
úú' ,
.
úú, -
Column
úú- 3
<
úú3 4
string
úú4 :
>
úú: ;
(
úú; <
type
úú< @
:
úú@ A
$str
úúB Q
,
úúQ R
nullable
úúS [
:
úú[ \
false
úú] b
)
úúb c
,
úúc d
	CreatedOn
ûû 
=
ûû 
table
ûû  %
.
ûû% &
Column
ûû& ,
<
ûû, -
DateTime
ûû- 5
>
ûû5 6
(
ûû6 7
type
ûû7 ;
:
ûû; <
$str
ûû= H
,
ûûH I
nullable
ûûJ R
:
ûûR S
false
ûûT Y
)
ûûY Z
,
ûûZ [
	CreatedBy
üü 
=
üü 
table
üü  %
.
üü% &
Column
üü& ,
<
üü, -
int
üü- 0
>
üü0 1
(
üü1 2
type
üü2 6
:
üü6 7
$str
üü8 =
,
üü= >
nullable
üü? G
:
üüG H
false
üüI N
)
üüN O
,
üüO P
	UpdatedOn
ýý 
=
ýý 
table
ýý  %
.
ýý% &
Column
ýý& ,
<
ýý, -
DateTime
ýý- 5
>
ýý5 6
(
ýý6 7
type
ýý7 ;
:
ýý; <
$str
ýý= H
,
ýýH I
nullable
ýýJ R
:
ýýR S
true
ýýT X
)
ýýX Y
,
ýýY Z
	UpdatedBy
þþ 
=
þþ 
table
þþ  %
.
þþ% &
Column
þþ& ,
<
þþ, -
int
þþ- 0
>
þþ0 1
(
þþ1 2
type
þþ2 6
:
þþ6 7
$str
þþ8 =
,
þþ= >
nullable
þþ? G
:
þþG H
true
þþI M
)
þþM N
}
ÿÿ 
,
ÿÿ 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% .
,
. /
x
0 1
=>
2 4
new
5 8
{
9 :
x
; <
.
< =
ReviewId
= E
,
E F
x
G H
.
H I
	TraineeId
I R
}
S T
)
T U
;
U V
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 8
,
8 9
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
ReviewId
' /
,
/ 0
principalTable
 &
:
& '
$str
( 1
,
1 2
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
NoAction
4 <
)
< =
;
= >
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 7
,
7 8
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	TraineeId
' 0
,
0 1
principalTable
 &
:
& '
$str
( /
,
/ 0
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
NoAction
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
 $
,
$ %
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! %
,
% &
$str
' 2
,
2 3
$str
4 ?
,
? @
$str
A G
,
G H
$str
I T
,
T U
$str
V a
,
a b
$str
c o
}
p q
,
q r
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
 
$num
 
,
 
$num
 
,
 
new
 
DateTime
  (
(
( )
$num
) -
,
- .
$num
/ 0
,
0 1
$num
2 4
,
4 5
$num
6 8
,
8 9
$num
: <
,
< =
$num
> @
,
@ A
$num
B E
,
E F
DateTimeKind
G S
.
S T
Local
T Y
)
Y Z
.
Z [
AddTicks
[ c
(
c d
$num
d h
)
h i
,
i j
$str
k q
,
q r
null
s w
,
w x
null
y }
,
} ~
false 
} 
, 
{
 
$num
 
,
 
$num
 
,
 
new
 
DateTime
  (
(
( )
$num
) -
,
- .
$num
/ 0
,
0 1
$num
2 4
,
4 5
$num
6 8
,
8 9
$num
: <
,
< =
$num
> @
,
@ A
$num
B E
,
E F
DateTimeKind
G S
.
S T
Local
T Y
)
Y Z
.
Z [
AddTicks
[ c
(
c d
$num
d h
)
h i
,
i j
$str
k q
,
q r
null
s w
,
w x
null
y }
,
} ~
false 
} 
, 
{
 
$num
 
,
 
$num
 
,
 
new
 
DateTime
  (
(
( )
$num
) -
,
- .
$num
/ 0
,
0 1
$num
2 4
,
4 5
$num
6 8
,
8 9
$num
: <
,
< =
$num
> @
,
@ A
$num
B E
,
E F
DateTimeKind
G S
.
S T
Local
T Y
)
Y Z
.
Z [
AddTicks
[ c
(
c d
$num
d h
)
h i
,
i j
$str
k q
,
q r
null
s w
,
w x
null
y }
,
} ~
false 
} 
}
 
)
 
;
 
migrationBuilder
 
.
 

InsertData
 '
(
' (
table
 
:
 
$str
 '
,
' (
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! %
,
% &
$str
' 2
,
2 3
$str
4 ?
,
? @
$str
A G
,
G H
$str
I T
,
T U
$str
V a
}
b c
,
c d
values
 
:
 
new
 
object
 "
[
" #
,
# $
]
$ %
{
 
{
   
$num
   
,
   
$num
   
,
   
new
   
DateTime
    (
(
  ( )
$num
  ) -
,
  - .
$num
  / 0
,
  0 1
$num
  2 4
,
  4 5
$num
  6 8
,
  8 9
$num
  : <
,
  < =
$num
  > @
,
  @ A
$num
  B E
,
  E F
DateTimeKind
  G S
.
  S T
Local
  T Y
)
  Y Z
.
  Z [
AddTicks
  [ c
(
  c d
$num
  d h
)
  h i
,
  i j
$str
  k u
,
  u v
null
  w {
,
  { |
null  } 
}   
,   
{
¡¡ 
$num
¡¡ 
,
¡¡ 
$num
¡¡ 
,
¡¡ 
new
¡¡ 
DateTime
¡¡  (
(
¡¡( )
$num
¡¡) -
,
¡¡- .
$num
¡¡/ 0
,
¡¡0 1
$num
¡¡2 4
,
¡¡4 5
$num
¡¡6 8
,
¡¡8 9
$num
¡¡: <
,
¡¡< =
$num
¡¡> @
,
¡¡@ A
$num
¡¡B E
,
¡¡E F
DateTimeKind
¡¡G S
.
¡¡S T
Local
¡¡T Y
)
¡¡Y Z
.
¡¡Z [
AddTicks
¡¡[ c
(
¡¡c d
$num
¡¡d h
)
¡¡h i
,
¡¡i j
$str
¡¡k v
,
¡¡v w
null
¡¡x |
,
¡¡| }
null¡¡~ 
}¡¡ 
,¡¡ 
{
¢¢ 
$num
¢¢ 
,
¢¢ 
$num
¢¢ 
,
¢¢ 
new
¢¢ 
DateTime
¢¢  (
(
¢¢( )
$num
¢¢) -
,
¢¢- .
$num
¢¢/ 0
,
¢¢0 1
$num
¢¢2 4
,
¢¢4 5
$num
¢¢6 8
,
¢¢8 9
$num
¢¢: <
,
¢¢< =
$num
¢¢> @
,
¢¢@ A
$num
¢¢B E
,
¢¢E F
DateTimeKind
¢¢G S
.
¢¢S T
Local
¢¢T Y
)
¢¢Y Z
.
¢¢Z [
AddTicks
¢¢[ c
(
¢¢c d
$num
¢¢d h
)
¢¢h i
,
¢¢i j
$str
¢¢k u
,
¢¢u v
null
¢¢w {
,
¢¢{ |
null¢¢} 
}¢¢ 
}
££ 
)
££ 
;
££ 
migrationBuilder
¥¥ 
.
¥¥ 

InsertData
¥¥ '
(
¥¥' (
table
¦¦ 
:
¦¦ 
$str
¦¦ 
,
¦¦ 
columns
§§ 
:
§§ 
new
§§ 
[
§§ 
]
§§ 
{
§§  
$str
§§! %
,
§§% &
$str
§§' 2
,
§§2 3
$str
§§4 ?
,
§§? @
$str
§§A G
,
§§G H
$str
§§I T
,
§§T U
$str
§§V a
,
§§a b
$str
§§c o
}
§§p q
,
§§q r
values
¨¨ 
:
¨¨ 
new
¨¨ 
object
¨¨ "
[
¨¨" #
,
¨¨# $
]
¨¨$ %
{
©© 
{
ªª 
$num
ªª 
,
ªª 
$num
ªª 
,
ªª 
new
ªª 
DateTime
ªª  (
(
ªª( )
$num
ªª) -
,
ªª- .
$num
ªª/ 0
,
ªª0 1
$num
ªª2 4
,
ªª4 5
$num
ªª6 8
,
ªª8 9
$num
ªª: <
,
ªª< =
$num
ªª> @
,
ªª@ A
$num
ªªB E
,
ªªE F
DateTimeKind
ªªG S
.
ªªS T
Local
ªªT Y
)
ªªY Z
.
ªªZ [
AddTicks
ªª[ c
(
ªªc d
$num
ªªd h
)
ªªh i
,
ªªi j
$str
ªªk z
,
ªªz {
nullªª| 
,ªª 
nullªª 
,ªª 
falseªª 
}ªª 
,ªª 
{
«« 
$num
«« 
,
«« 
$num
«« 
,
«« 
new
«« 
DateTime
««  (
(
««( )
$num
««) -
,
««- .
$num
««/ 0
,
««0 1
$num
««2 4
,
««4 5
$num
««6 8
,
««8 9
$num
««: <
,
««< =
$num
««> @
,
««@ A
$num
««B E
,
««E F
DateTimeKind
««G S
.
««S T
Local
««T Y
)
««Y Z
.
««Z [
AddTicks
««[ c
(
««c d
$num
««d h
)
««h i
,
««i j
$str««k 
,«« 
null«« 
,«« 
null«« 
,«« 
false«« 
}«« 
,«« 
{
¬¬ 
$num
¬¬ 
,
¬¬ 
$num
¬¬ 
,
¬¬ 
new
¬¬ 
DateTime
¬¬  (
(
¬¬( )
$num
¬¬) -
,
¬¬- .
$num
¬¬/ 0
,
¬¬0 1
$num
¬¬2 4
,
¬¬4 5
$num
¬¬6 8
,
¬¬8 9
$num
¬¬: <
,
¬¬< =
$num
¬¬> @
,
¬¬@ A
$num
¬¬B E
,
¬¬E F
DateTimeKind
¬¬G S
.
¬¬S T
Local
¬¬T Y
)
¬¬Y Z
.
¬¬Z [
AddTicks
¬¬[ c
(
¬¬c d
$num
¬¬d h
)
¬¬h i
,
¬¬i j
$str
¬¬k t
,
¬¬t u
null
¬¬v z
,
¬¬z {
null¬¬| 
,¬¬ 
false¬¬ 
}¬¬ 
,¬¬ 
{
­­ 
$num
­­ 
,
­­ 
$num
­­ 
,
­­ 
new
­­ 
DateTime
­­  (
(
­­( )
$num
­­) -
,
­­- .
$num
­­/ 0
,
­­0 1
$num
­­2 4
,
­­4 5
$num
­­6 8
,
­­8 9
$num
­­: <
,
­­< =
$num
­­> @
,
­­@ A
$num
­­B E
,
­­E F
DateTimeKind
­­G S
.
­­S T
Local
­­T Y
)
­­Y Z
.
­­Z [
AddTicks
­­[ c
(
­­c d
$num
­­d h
)
­­h i
,
­­i j
$str
­­k t
,
­­t u
null
­­v z
,
­­z {
null­­| 
,­­ 
false­­ 
}­­ 
,­­ 
{
®® 
$num
®® 
,
®® 
$num
®® 
,
®® 
new
®® 
DateTime
®®  (
(
®®( )
$num
®®) -
,
®®- .
$num
®®/ 0
,
®®0 1
$num
®®2 4
,
®®4 5
$num
®®6 8
,
®®8 9
$num
®®: <
,
®®< =
$num
®®> @
,
®®@ A
$num
®®B E
,
®®E F
DateTimeKind
®®G S
.
®®S T
Local
®®T Y
)
®®Y Z
.
®®Z [
AddTicks
®®[ c
(
®®c d
$num
®®d h
)
®®h i
,
®®i j
$str
®®k u
,
®®u v
null
®®w {
,
®®{ |
null®®} 
,®® 
false®® 
}®® 
}
¯¯ 
)
¯¯ 
;
¯¯ 
migrationBuilder
±± 
.
±± 
CreateIndex
±± (
(
±±( )
name
²² 
:
²² 
$str
²² .
,
²². /
table
³³ 
:
³³ 
$str
³³ $
,
³³$ %
column
´´ 
:
´´ 
$str
´´ !
)
´´! "
;
´´" #
migrationBuilder
¶¶ 
.
¶¶ 
CreateIndex
¶¶ (
(
¶¶( )
name
·· 
:
·· 
$str
·· .
,
··. /
table
¸¸ 
:
¸¸ 
$str
¸¸ $
,
¸¸$ %
column
¹¹ 
:
¹¹ 
$str
¹¹ !
)
¹¹! "
;
¹¹" #
migrationBuilder
»» 
.
»» 
CreateIndex
»» (
(
»»( )
name
¼¼ 
:
¼¼ 
$str
¼¼ .
,
¼¼. /
table
½½ 
:
½½ 
$str
½½ $
,
½½$ %
column
¾¾ 
:
¾¾ 
$str
¾¾ !
)
¾¾! "
;
¾¾" #
migrationBuilder
ÀÀ 
.
ÀÀ 
CreateIndex
ÀÀ (
(
ÀÀ( )
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ .
,
ÁÁ. /
table
ÂÂ 
:
ÂÂ 
$str
ÂÂ $
,
ÂÂ$ %
column
ÃÃ 
:
ÃÃ 
$str
ÃÃ !
)
ÃÃ! "
;
ÃÃ" #
migrationBuilder
ÅÅ 
.
ÅÅ 
CreateIndex
ÅÅ (
(
ÅÅ( )
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ 4
,
ÆÆ4 5
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ (
,
ÇÇ( )
column
ÈÈ 
:
ÈÈ 
$str
ÈÈ #
)
ÈÈ# $
;
ÈÈ$ %
migrationBuilder
ÊÊ 
.
ÊÊ 
CreateIndex
ÊÊ (
(
ÊÊ( )
name
ËË 
:
ËË 
$str
ËË /
,
ËË/ 0
table
ÌÌ 
:
ÌÌ 
$str
ÌÌ  
,
ÌÌ  !
column
ÍÍ 
:
ÍÍ 
$str
ÍÍ &
)
ÍÍ& '
;
ÍÍ' (
migrationBuilder
ÏÏ 
.
ÏÏ 
CreateIndex
ÏÏ (
(
ÏÏ( )
name
ÐÐ 
:
ÐÐ 
$str
ÐÐ -
,
ÐÐ- .
table
ÑÑ 
:
ÑÑ 
$str
ÑÑ $
,
ÑÑ$ %
column
ÒÒ 
:
ÒÒ 
$str
ÒÒ  
)
ÒÒ  !
;
ÒÒ! "
migrationBuilder
ÔÔ 
.
ÔÔ 
CreateIndex
ÔÔ (
(
ÔÔ( )
name
ÕÕ 
:
ÕÕ 
$str
ÕÕ )
,
ÕÕ) *
table
ÖÖ 
:
ÖÖ 
$str
ÖÖ 
,
ÖÖ 
column
×× 
:
×× 
$str
×× #
)
××# $
;
××$ %
migrationBuilder
ÙÙ 
.
ÙÙ 
CreateIndex
ÙÙ (
(
ÙÙ( )
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ /
,
ÚÚ/ 0
table
ÛÛ 
:
ÛÛ 
$str
ÛÛ  
,
ÛÛ  !
column
ÜÜ 
:
ÜÜ 
$str
ÜÜ &
)
ÜÜ& '
;
ÜÜ' (
migrationBuilder
ÞÞ 
.
ÞÞ 
CreateIndex
ÞÞ (
(
ÞÞ( )
name
ßß 
:
ßß 
$str
ßß -
,
ßß- .
table
àà 
:
àà 
$str
àà  
,
àà  !
column
áá 
:
áá 
$str
áá $
)
áá$ %
;
áá% &
migrationBuilder
ãã 
.
ãã 
CreateIndex
ãã (
(
ãã( )
name
ää 
:
ää 
$str
ää +
,
ää+ ,
table
åå 
:
åå 
$str
åå  
,
åå  !
column
ææ 
:
ææ 
$str
ææ "
)
ææ" #
;
ææ# $
migrationBuilder
èè 
.
èè 
CreateIndex
èè (
(
èè( )
name
éé 
:
éé 
$str
éé ,
,
éé, -
table
êê 
:
êê 
$str
êê  
,
êê  !
column
ëë 
:
ëë 
$str
ëë #
)
ëë# $
;
ëë$ %
migrationBuilder
íí 
.
íí 
CreateIndex
íí (
(
íí( )
name
îî 
:
îî 
$str
îî *
,
îî* +
table
ïï 
:
ïï 
$str
ïï 
,
ïï  
column
ðð 
:
ðð 
$str
ðð "
)
ðð" #
;
ðð# $
migrationBuilder
òò 
.
òò 
CreateIndex
òò (
(
òò( )
name
óó 
:
óó 
$str
óó 5
,
óó5 6
table
ôô 
:
ôô 
$str
ôô )
,
ôô) *
column
õõ 
:
õõ 
$str
õõ #
)
õõ# $
;
õõ$ %
migrationBuilder
÷÷ 
.
÷÷ 
CreateIndex
÷÷ (
(
÷÷( )
name
øø 
:
øø 
$str
øø 5
,
øø5 6
table
ùù 
:
ùù 
$str
ùù )
,
ùù) *
column
úú 
:
úú 
$str
úú #
)
úú# $
;
úú$ %
migrationBuilder
üü 
.
üü 
CreateIndex
üü (
(
üü( )
name
ýý 
:
ýý 
$str
ýý -
,
ýý- .
table
þþ 
:
þþ 
$str
þþ 
,
þþ 
column
ÿÿ 
:
ÿÿ 
$str
ÿÿ &
)
ÿÿ& '
;
ÿÿ' (
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 '
,
' (
table
 
:
 
$str
 
,
 
column
 
:
 
$str
  
)
  !
;
! "
}
 	
	protected
 
override
 
void
 
Down
  $
(
$ %
MigrationBuilder
% 5
migrationBuilder
6 F
)
F G
{
 	
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
 
;
 
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 (
)
( )
;
) *
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
 
;
  
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
  
;
  !
migrationBuilder
¡¡ 
.
¡¡ 
	DropTable
¡¡ &
(
¡¡& '
name
¢¢ 
:
¢¢ 
$str
¢¢ 
)
¢¢  
;
¢¢  !
migrationBuilder
¤¤ 
.
¤¤ 
	DropTable
¤¤ &
(
¤¤& '
name
¥¥ 
:
¥¥ 
$str
¥¥ &
)
¥¥& '
;
¥¥' (
migrationBuilder
§§ 
.
§§ 
	DropTable
§§ &
(
§§& '
name
¨¨ 
:
¨¨ 
$str
¨¨ 
)
¨¨ 
;
¨¨ 
migrationBuilder
ªª 
.
ªª 
	DropTable
ªª &
(
ªª& '
name
«« 
:
«« 
$str
«« #
)
««# $
;
««$ %
migrationBuilder
­­ 
.
­­ 
	DropTable
­­ &
(
­­& '
name
®® 
:
®® 
$str
®® 
)
®® 
;
®® 
}
¯¯ 	
}
°° 
}±± ïA
WC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddAuthentication "
(" #
opt# &
=>' )
{ 
opt 
. %
DefaultAuthenticateScheme !
=" #
JwtBearerDefaults$ 5
.5 6 
AuthenticationScheme6 J
;J K
opt 
. "
DefaultChallengeScheme 
=  
JwtBearerDefaults! 2
.2 3 
AuthenticationScheme3 G
;G H
} 
) 
. 
AddJwtBearer 
( 
options 
=> 
{ 
options 
. %
TokenValidationParameters %
=& '
new( +%
TokenValidationParameters, E
{ 
ValidateIssuer 
= 
true 
, 
ValidateAudience 
= 
true 
,  
ValidateLifetime 
= 
true 
,  $
ValidateIssuerSigningKey  
=! "
true# '
,' (
ValidIssuer 
= 
$str .
,. /
ValidAudience 
= 
$str 0
,0 1
IssuerSigningKey 
= 
new  
SymmetricSecurityKey 3
(3 4
Encoding4 <
.< =
UTF8= A
.A B
GetBytesB J
(J K
$strK _
)_ `
)` a
} 
; 
} 
) 
; 
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
var"" 
logger"" 

="" 
new"" 
LoggerConfiguration"" $
(""$ %
)""% &
.## 
ReadFrom## 
.## 
Configuration## 
(## 
builder## !
.##! "
Configuration##" /
)##/ 0
.$$ 
Enrich$$ 	
.$$	 

FromLogContext$$
 
($$ 
)$$ 
.%% 
CreateLogger%% 
(%% 
)%% 
;%% 
builder(( 
.(( 
Logging(( 
.(( 

AddSerilog(( 
((( 
logger(( !
)((! "
;((" #
builder++ 
.++ 
Services++ 
.++ 
AddDbContext++ 
<++ 
AppDbContext++ *
>++* +
(+++ ,
options++, 3
=>++4 6
options++7 >
.++> ?
UseSqlServer++? K
(++K L
builder++L S
.++S T
Configuration++T a
.++a b
GetConnectionString++b u
(++u v
$str++v 
)	++ 
)
++ 
)
++ 
;
++ 
builder,, 
.,, 
Services,, 
.,, 
AddTransient,, 
<,, 

Validation,, (
>,,( )
(,,) *
),,* +
;,,+ ,
builder-- 
.-- 
Services-- 
.-- 
AddTransient-- 
<-- 

UnitOfWork-- (
>--( )
(--) *
)--* +
;--+ ,
builder.. 
... 
Services.. 
... 
AddTransient.. 
<.. 
UnitOfService.. +
>..+ ,
(.., -
)..- .
;... /
builder11 
.11 
Services11 
.11 #
AddEndpointsApiExplorer11 (
(11( )
)11) *
;11* +
builder33 
.33 
Services33 
.33 
AddSwaggerGen33 
(33 
options33 &
=>33' )
{44 
var55 
xmlFilename55 
=55 
$"55 
{55 
Assembly55 !
.55! " 
GetExecutingAssembly55" 6
(556 7
)557 8
.558 9
GetName559 @
(55@ A
)55A B
.55B C
Name55C G
}55G H
$str55H L
"55L M
;55M N
options66 
.66 
IncludeXmlComments66 
(66 
Path66 #
.66# $
Combine66$ +
(66+ ,

AppContext66, 6
.666 7
BaseDirectory667 D
,66D E
xmlFilename66F Q
)66Q R
)66R S
;66S T
}77 
)77 
;77 
builder:: 
.:: 
Services:: 
.:: 
AddCors:: 
(:: 
(:: 
setup:: 
)::  
=>::! #
{;; 
setup<< 	
.<<	 

	AddPolicy<<
 
(<< 
$str<< 
,<< 
(<<  
options<<  '
)<<' (
=><<) +
{== 
options>> 
.>> 
AllowAnyMethod>> 
(>> 
)>>  
.>>  !
AllowAnyHeader>>! /
(>>/ 0
)>>0 1
.>>1 2
AllowAnyOrigin>>2 @
(>>@ A
)>>A B
;>>B C
}?? 
)?? 
;?? 
}@@ 
)@@ 
;@@ 
builderBB 
.BB 
ServicesBB 
.BB 
AddCorsBB 
(BB 
setupBB 
=>BB !
{BB" #
setupCC 	
.CC	 

	AddPolicyCC
 
(CC 
$strCC  
,CC  !
builderCC" )
=>CC* ,
{CC- .
builderDD 
.DD 
AllowAnyOriginDD 
(DD 
)DD  
.DD  !
AllowAnyHeaderDD! /
(DD/ 0
)DD0 1
.DD1 2
AllowAnyMethodDD2 @
(DD@ A
)DDA B
;DDB C
}EE 
)EE 
;EE 
}FF 
)FF 
;FF 
builderHH 
.HH 
ServicesHH 
.HH #
AddControllersWithViewsHH (
(HH( )
)HH) *
.II 
AddNewtonsoftJsonII 
(II 
optionsII 
=>II !
optionsJJ 
.JJ 
SerializerSettingsJJ 
.JJ !
ReferenceLoopHandlingJJ 4
=JJ5 6

NewtonsoftJJ7 A
.JJA B
JsonJJB F
.JJF G!
ReferenceLoopHandlingJJG \
.JJ\ ]
IgnoreJJ] c
)KK 
;KK 
varMM 
appMM 
=MM 	
builderMM
 
.MM 
BuildMM 
(MM 
)MM 
;MM 
ifPP 
(PP 
appPP 
.PP 
EnvironmentPP 
.PP 
IsDevelopmentPP !
(PP! "
)PP" #
)PP# $
{QQ 
appRR 
.RR 

UseSwaggerRR 
(RR 
optionsRR 
=>RR 
{SS 
optionsTT 
.TT 
SerializeAsV2TT 
=TT 
trueTT  $
;TT$ %
}UU 
)UU 
;UU 
appWW 
.WW 
UseSwaggerUIWW 
(WW 
optionsWW 
=>WW 
{XX 
optionsYY 
.YY 
SwaggerEndpointYY 
(YY  
$strYY  :
,YY: ;
$strYY< @
)YY@ A
;YYA B
optionsZZ 
.ZZ 
RoutePrefixZZ 
=ZZ 
stringZZ $
.ZZ$ %
EmptyZZ% *
;ZZ* +
}[[ 
)[[ 
;[[ 
}\\ 
app^^ 
.^^ 
UseCors^^ 
(^^ 
$str^^ 
)^^ 
;^^ 
app`` 
.`` 
UseHttpsRedirection`` 
(`` 
)`` 
;`` 
appbb 
.bb 
UseAuthenticationbb 
(bb 
)bb 
;bb 
appdd 
.dd 
UseAuthorizationdd 
(dd 
)dd 
;dd 
appff 
.ff 
MapControllersff 
(ff 
)ff 
;ff 
apphh 
.hh 
Runhh 
(hh 
)hh 	
;hh	 
ã
xC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Interface\ICourseRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
public 

partial 
	interface 
ICourseRepository .
{ 
IEnumerable		 
<		 

Assignment		 
>		 #
GetAssignmentsByTopicId		  7
(		7 8
int		8 ;
topicId		< C
)		C D
;		D E

Assignment

 4
(GetAssignmentByCourseIdTopicIdAndOwnerId

 ;
(

; <
int

< ?
courseId

@ H
,

H I
int

J M
topicId

N U
,

U V
int

W Z
ownerId

[ b
)

b c
;

c d
void 
CreateAssignment 
( 

Assignment (

assignment) 3
)3 4
;4 5
void 
UpdateAssignment 
( 

Assignment (

assignment) 3
)3 4
;4 5
IEnumerable 
< 
Course 
> 

GetCourses &
(& '
)' (
;( )
IEnumerable 
< 
Course 
> $
GetCoursesByDepartmentId 4
(4 5
int5 8
departmentId9 E
)E F
;F G
IEnumerable 
< 
Course 
> 
GetCoursesByUserId .
(. /
int/ 2
userId3 9
)9 :
;: ;
Course 
GetCourseById 
( 
int  
courseId! )
)) *
;* +
void 
CreateCourse 
( 
Course  
course! '
)' (
;( )
void 
UpdateCourse 
( 
Course  
course! '
)' (
;( )
void 
AddUsersToCourse 
( 
List "
<" #
CourseUsers# .
>. /
data0 4
)4 5
;5 6
void !
RemoveUsersFromCourse "
(" #
List# '
<' (
CourseUsers( 3
>3 4
data5 9
)9 :
;: ;
void 
MarkAttendance 
( 

Attendance &

attendance' 1
)1 2
;2 3
IEnumerable 
< 
Topic 
> 
GetTopicsByCourseId .
(. /
int/ 2
courseId3 ;
); <
;< =
Topic 
GetTopicById 
( 
int 
courseId '
,' (
int( +
topicId, 3
,3 4
int4 7
userId8 >
)> ?
;? @
Topic 
GetTopicById 
( 
int 
courseId '
,' (
int( +
topicId, 3
)3 4
;4 5
void 
CreateTopic 
( 
Topic 
topic $
)$ %
;% &
void 
UpdateTopic 
( 
Topic 
topic $
)$ %
;% &
} 
} ª
|C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Interface\IDepartmentRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
public 

	interface !
IDepartmentRepository *
{ 
IEnumerable 
< 

Department 
> 
GetDepartments  .
(. /
)/ 0
;0 1

Department 
GetDepartmentById $
($ %
int% (
id) +
)+ ,
;, -
void		 
CreateDepartment		 
(		 

Department		 (

department		) 3
)		3 4
;		4 5
void

 
UpdateDepartment

 
(

 

Department

 (

department

) 3
)

3 4
;

4 5
} 
} Ó
zC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Interface\IFeedbackRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
public 

	interface 
IFeedbackRepository (
{ 
CourseFeedback 3
'GetCourseFeedbackByCourseIdAndTraineeId >
(> ?
int? B
courseIdC K
,K L
intM P
	traineeIdQ Z
)Z [
;[ \
void  
CreateCourseFeedback !
(! "
CourseFeedback" 0
courseFeedback1 ?
)? @
;@ A
void		  
UpdateCourseFeedback		 !
(		! "
CourseFeedback		" 0
courseFeedback		1 ?
)		? @
;		@ A
TraineeFeedback

 =
1GetTraineeFeedbackByCourseIdTrainerIdAndTraineeId

 I
(

I J
int

J M
courseId

N V
,

V W
int

X [
	traineeId

\ e
,

e f
int

g j
	trainerId

k t
)

t u
;

u v
void !
CreateTraineeFeedback "
(" #
TraineeFeedback# 2
traineeFeedback3 B
)B C
;C D
void !
UpdateTraineeFeedback "
(" #
TraineeFeedback# 2
traineeFeedback3 B
)B C
;C D
} 
} ¢
xC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Interface\IReviewRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
public 

	interface 
IReviewRepository &
{ 
IEnumerable 
< 
Review 
> 
GetReviewByStatusId /
(/ 0
int0 3
statusId4 <
)< =
;= >
Review 
GetReviewById 
( 
int  
reviewId! )
)) *
;* +
void		 
CreateReview		 
(		 
Review		  
review		! '
)		' (
;		( )
void

 
UpdateReview

 
(

 
Review

  
review

! '
)

' (
;

( )
void 
	CreateMom 
( 
MOM 
mom 
) 
;  
void 
	UpdateMom 
( 
MOM 
mom 
) 
;  
IEnumerable 
< 
MOM 
>  
GetListOfMomByUserId -
(- .
int. 1
userId2 8
)8 9
;9 :
MOM (
GetMomByReviewIdAndTraineeId (
(( )
int) ,
reviewId- 5
,5 6
int7 :
	traineeId; D
)D E
;E F
} 
} ó
vC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Interface\IRoleRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
public 

	interface 
IRoleRepository $
{ 
IEnumerable 
< 
Role 
> 
GetRoles "
(" #
)# $
;$ %
} 
}		 Ø
vC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Interface\IUserRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
public 

	interface 
IUserRepository $
{ 
IEnumerable 
< 
User 
> 
GetUsersByRole (
(( )
int) ,
roleId- 3
)3 4
;4 5
IEnumerable		 
<		 
User		 
>		  
GetUsersByDepartment		 .
(		. /
int		/ 2
departmentId		3 ?
)		? @
;		@ A
IEnumerable

 
<

 
User

 
>

 !
GetUsersByDeptandrole

 /
(

/ 0
int

0 3
departmentId

4 @
,

@ A
int

B E
roleId

F L
)

L M
;

M N
User %
GetUserByEmailAndPassword &
(& '

LoginModel' 1
user2 6
)6 7
;7 8
User 
GetUserById 
( 
int 
id 
)  
;  !
void 

CreateUser 
( 
User 
user !
)! "
;" #
void 

UpdateUser 
( 
User 
user !
)! "
;" #
} 
} Òn
xC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Persistent\CourseRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
class 	
CourseRepository
 
: 
ICourseRepository .
{		 
private

 
readonly

 
AppDbContext

 %
	dbContext

& /
;

/ 0
public 
CourseRepository 
(  
AppDbContext  ,
	dbContext- 6
)6 7
{ 	
this 
. 
	dbContext 
= 
	dbContext &
;& '
} 	
public 
void 
AddUsersToCourse $
($ %
List% )
<) *
CourseUsers* 5
>5 6
data7 ;
); <
{ 	
	dbContext 
. 
CourseUsers !
.! "
AddRange" *
(* +
data+ /
)/ 0
;0 1
} 	
public 
void !
RemoveUsersFromCourse )
() *
List* .
<. /
CourseUsers/ :
>: ;
data< @
)@ A
{ 	
	dbContext 
. 
CourseUsers !
.! "
RemoveRange" -
(- .
data. 2
)2 3
;3 4
} 	
public 
void 
CreateAssignment $
($ %

Assignment% /

assignment0 :
): ;
{ 	
	dbContext 
. 
Assignments !
.! "
Add" %
(% &

assignment& 0
)0 1
;1 2
} 	
public 
void 
CreateCourse  
(  !
Course! '
course( .
). /
{   	
	dbContext!! 
.!! 
Courses!! 
.!! 
Add!! !
(!!! "
course!!" (
)!!( )
;!!) *
}"" 	
public$$ 
void$$ 
CreateTopic$$ 
($$  
Topic$$  %
topic$$& +
)$$+ ,
{%% 	
	dbContext&& 
.&& 
Topics&& 
.&& 
Add&&  
(&&  !
topic&&! &
)&&& '
;&&' (
}'' 	
public)) 

Assignment)) 4
(GetAssignmentByCourseIdTopicIdAndOwnerId)) B
())B C
int))C F
courseId))G O
,))O P
int))Q T
topicId))U \
,))\ ]
int))^ a
ownerId))b i
)))i j
{** 	
return++ 
	dbContext++ 
.++ 
Assignments++ (
.++( )
Where++) .
(++. /
a++/ 0
=>++0 2
a,, 
.,, 
CourseId,, 
==,, !
courseId,," *
&&,,+ -
a-- 
.-- 
TopicId-- 
==--  
topicId--! (
&&--) +
a.. 
... 
OwnerId.. 
==..  
ownerId..! (
)// 
.// 
Include// 
(// 
a// 
=>// 
a// 
.// 
Owner// $
)//$ %
.//% &
FirstOrDefault//& 4
(//4 5
)//5 6
;//6 7
}00 	
public11 

Attendance11 4
(GetAttendanceByCourseIdTopicIdAndOwnerId11 B
(11B C
int11C F
courseId11G O
,11O P
int11Q T
topicId11U \
,11\ ]
int11^ a
ownerId11b i
)11i j
{22 	
return33 
	dbContext33 
.33 
Attendances33 (
.33( )
Where33) .
(33. /
a33/ 0
=>330 2
a44 
.44 
CourseId44 
==44 !
courseId44" *
&&44+ -
a55 
.55 
TopicId55 
==55  
topicId55! (
&&55) +
a66 
.66 
OwnerId66 
==66  
ownerId66! (
)77 
.77 
Include77 
(77 
a77 
=>77 
a77 
.77 
Owner77 $
)77$ %
.77% &
FirstOrDefault77& 4
(774 5
)775 6
;776 7
}88 	
public:: 
Course:: 
GetCourseById:: #
(::# $
int::$ '
courseId::( 0
)::0 1
{;; 	
var<< 
result<< 
=<< 
	dbContext<< "
.<<" #
Courses<<# *
.== 
Where== "
(==" #
c==# $
=>==$ &
c==& '
.==' (
Id==( *
====+ -
courseId==. 6
)==6 7
.>> 
Include>> $
(>>$ %
c>>% &
=>>>& (
c>>( )
.>>) *
Topics>>* 0
)>>0 1
.?? 
FirstOrDefault?? +
(??+ ,
)??, -
;??- .
resultAA 
.AA 
TrainerAA 
=AA 
	dbContextAA &
.AA& '
CourseUsersAA' 2
.BB  !
WhereBB! &
(BB& '
cuBB' )
=>BB) +
cuBB+ -
.BB- .
CourseIdBB. 6
==BB7 9
resultBB: @
.BB@ A
IdBBA C
&&BBD F
cuBBG I
.BBI J
RoleIdBBJ P
==BBQ S
$numBBT U
)BBU V
.CC  !
IncludeCC! (
(CC( )
uCC) *
=>CC* ,
uCC, -
.CC- .
UserCC. 2
)CC2 3
.DD  !
SelectDD! '
(DD' (
cuDD( *
=>DD* ,
cuDD, .
.DD. /
UserDD/ 3
)DD3 4
.EE  !
FirstOrDefaultEE! /
(EE/ 0
)EE0 1
;EE1 2
returnFF 
resultFF 
;FF 
}GG 	
publicHH 
TopicHH 
GetTopicByIdHH !
(HH! "
intHH" %
courseIdHH& .
,HH. /
intHH/ 2
topicIdHH3 :
,HH: ;
intHH; >
userIdHH? E
)HHE F
{II 	
varJJ 
resultJJ 
=JJ 
	dbContextJJ "
.JJ" #
TopicsJJ# )
.KK 
WhereKK "
(KK" #
tKK# $
=>KK$ &
tKK& '
.KK' (
CourseIdKK( 0
==KK1 3
courseIdKK4 <
&&KK= ?
tKK@ A
.KKA B
TopicIdKKB I
==KKJ L
topicIdKKM T
)KKT U
.LL 
FirstOrDefaultLL +
(LL+ ,
)LL, -
;LL- .
varNN 
	trainerIdNN 
=NN 
	dbContextNN %
.NN% &
CourseUsersNN& 1
.OO  !
WhereOO! &
(OO& '
cuOO' )
=>OO) +
cuOO+ -
.OO- .
CourseIdOO. 6
==OO7 9
courseIdOO: B
&&OOC E
cuOOF H
.OOH I
RoleIdOOI O
==OOP R
$numOOS T
)OOT U
.PP  !
FirstOrDefaultPP! /
(PP/ 0
)PP0 1
.QQ  !
UserIdQQ! '
;QQ' (
varSS 

assignmentSS 
=SS 4
(GetAssignmentByCourseIdTopicIdAndOwnerIdSS E
(SSE F
courseIdSSF N
,SSN O
topicIdSSO V
,SSV W
	trainerIdSSW `
)SS` a
;SSa b
varUU 
presentUU 
=UU 
	dbContextUU #
.UU# $
AssignmentsUU$ /
.UU/ 0
AnyUU0 3
(UU3 4
aUU4 5
=>UU5 7
aUU7 8
.UU8 9
CourseIdUU9 A
==UUB D
courseIdUUE M
&&UUN P
aUUQ R
.UUR S
TopicIdUUS Z
==UU[ ]
topicIdUU^ e
&&UUf h
aUUi j
.UUj k
OwnerIdUUk r
==UUs u
userIdUUv |
)UU| }
;UU} ~
resultWW 
.WW 
AssignmentsWW 
=WW  
newWW! $
ListWW% )
<WW) *

AssignmentWW* 4
>WW4 5
(WW5 6
)WW6 7
{WW7 8

assignmentWW8 B
}WWB C
;WWC D
ifXX 
(XX 
presentXX 
)XX 
{YY 
varZZ 

attendanceZZ 
=ZZ  4
(GetAttendanceByCourseIdTopicIdAndOwnerIdZZ! I
(ZZI J
courseIdZZJ R
,ZZR S
topicIdZZS Z
,ZZZ [
userIdZZ[ a
)ZZa b
;ZZb c
result[[ 
.[[ 
Attendances[[ "
=[[# $
new[[% (
List[[) -
<[[- .

Attendance[[. 8
>[[8 9
([[9 :
)[[: ;
;[[; <
result\\ 
.\\ 
Attendances\\ "
.\\" #
Add\\# &
(\\& '

attendance\\' 1
)\\1 2
;\\2 3
}]] 
return^^ 
result^^ 
;^^ 
}__ 	
public`` 
Topic`` 
GetTopicById`` !
(``! "
int``" %
courseId``& .
,``. /
int``/ 2
topicId``3 :
)``: ;
{aa 	
varbb 
resultbb 
=bb 
	dbContextbb "
.bb" #
Topicsbb# )
.cc 
Wherecc "
(cc" #
tcc# $
=>cc$ &
tcc& '
.cc' (
CourseIdcc( 0
==cc1 3
courseIdcc4 <
&&cc= ?
tcc@ A
.ccA B
TopicIdccB I
==ccJ L
topicIdccM T
)ccT U
.dd 
FirstOrDefaultdd +
(dd+ ,
)dd, -
;dd- .
returnee 
resultee 
;ee 
}ff 	
publichh 
IEnumerablehh 
<hh 

Assignmenthh %
>hh% &#
GetAssignmentsByTopicIdhh' >
(hh> ?
inthh? B
topicIdhhC J
)hhJ K
{ii 	
returnjj 
	dbContextjj 
.jj 
Assignmentsjj (
.kk 
Wherekk 
(kk 
akk 
=>kk 
akk 
.kk  
TopicIdkk  '
==kk( *
topicIdkk+ 2
)kk2 3
.ll 
Includell 
(ll 
all 
=>ll  
all  !
.ll! "
Ownerll" '
)ll' (
;ll( )
}mm 	
publicoo 
IEnumerableoo 
<oo 
Courseoo !
>oo! "

GetCoursesoo# -
(oo- .
)oo. /
{pp 	
returnqq 
	dbContextqq 
.qq 
Coursesqq $
.qq$ %
ToListqq% +
(qq+ ,
)qq, -
;qq- .
}rr 	
publictt 
IEnumerablett 
<tt 
Coursett !
>tt! "$
GetCoursesByDepartmentIdtt# ;
(tt; <
inttt< ?
departmentIdtt@ L
)ttL M
{uu 	
returnvv 
	dbContextvv 
.vv 
Coursesvv $
.ww 
Whereww 
(ww 
cww 
=>ww 
cww 
.ww  
DepartmentIdww  ,
==ww- /
departmentIdww0 <
)ww< =
;ww= >
}xx 	
publiczz 
IEnumerablezz 
<zz 
Coursezz !
>zz! "
GetCoursesByUserIdzz# 5
(zz5 6
intzz6 9
userIdzz: @
)zz@ A
{{{ 	
return|| 
	dbContext|| 
.|| 
CourseUsers|| '
.}} 
Where}} 
(}} 
cu}} 
=>}} 
cu}} !
.}}! "
UserId}}" (
==}}) +
userId}}, 2
)}}2 3
.~~ 
Select~~ 
(~~ 
cu~~ 
=>~~  
cu~~  "
.~~" #
Course~~# )
)~~) *
;~~* +
} 	
public
 
IEnumerable
 
<
 
Topic
  
>
  !!
GetTopicsByCourseId
" 5
(
5 6
int
6 9
courseId
: B
)
B C
{
 	
return
 
	dbContext
 
.
 
Topics
 #
.
 
Where
 
(
 
t
 
=>
 
t
 
.
  
CourseId
  (
==
) +
courseId
, 4
)
4 5
;
5 6
}
 	
public
 
void
 
UpdateAssignment
 $
(
$ %

Assignment
% /

assignment
0 :
)
: ;
{
 	
	dbContext
 
.
 
Assignments
 !
.
! "
Update
" (
(
( )

assignment
) 3
)
3 4
;
4 5
}
 	
public
 
void
 
UpdateCourse
  
(
  !
Course
! '
course
( .
)
. /
{
 	
	dbContext
 
.
 
Courses
 
.
 
Update
 $
(
$ %
course
% +
)
+ ,
;
, -
}
 	
public
 
void
 
UpdateTopic
 
(
  
Topic
  %
topic
& +
)
+ ,
{
 	
	dbContext
 
.
 
Topics
 
.
 
Update
 #
(
# $
topic
$ )
)
) *
;
* +
}
 	
public
 
void
 
MarkAttendance
 "
(
" #

Attendance
# -

attendance
. 8
)
8 9
{
 	
	dbContext
 
.
 
Attendances
 !
.
! "
Add
" %
(
% &

attendance
& 0
)
0 1
;
1 2
}
 	
}
 
} ý
|C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Persistent\DepartmentRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
class 	 
DepartmentRepository
 
:  !
IDepartmentRepository! 6
{ 
private 
readonly 
AppDbContext %
	dbContext& /
;/ 0
public		  
DepartmentRepository		 #
(		# $
AppDbContext		$ 0
	dbContext		1 :
)		: ;
{

 	
this 
. 
	dbContext 
= 
	dbContext &
;& '
} 	
public 
void 
CreateDepartment $
($ %

Department% /

department0 :
): ;
{ 	
	dbContext 
. 
Departments !
.! "
Add" %
(% &

department& 0
)0 1
;1 2
} 	
public 

Department 
GetDepartmentById +
(+ ,
int, /
departmentId0 <
)< =
{ 	
return 
	dbContext 
. 
Departments (
.( )
Find) -
(- .
departmentId. :
): ;
;; <
} 	
public 
IEnumerable 
< 

Department %
>% &
GetDepartments' 5
(5 6
)6 7
{ 	
return 
	dbContext 
. 
Departments (
.( )
ToList) /
(/ 0
)0 1
;1 2
} 	
public 
void 
UpdateDepartment $
($ %

Department% /

department0 :
): ;
{ 	
	dbContext 
. 
Departments !
.! "
Update" (
(( )

department) 3
)3 4
;4 5
} 	
}   
}!! £&
zC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Persistent\FeedbackRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
class 	
FeedbackRepository
 
: 
IFeedbackRepository 2
{ 
private 
readonly 
AppDbContext %
	dbContext& /
;/ 0
public		 
FeedbackRepository		 !
(		! "
AppDbContext		" .
	dbContext		/ 8
)		8 9
{

 	
this 
. 
	dbContext 
= 
	dbContext &
;& '
} 	
public 
void  
CreateCourseFeedback (
(( )
CourseFeedback) 7
courseFeedback8 F
)F G
{ 	
	dbContext 
. 
CourseFeedbacks %
.% &
Add& )
() *
courseFeedback* 8
)8 9
;9 :
} 	
public 
void !
CreateTraineeFeedback )
() *
TraineeFeedback* 9
traineeFeedback: I
)I J
{ 	
	dbContext 
. 
TraineeFeedbacks &
.& '
Add' *
(* +
traineeFeedback+ :
): ;
;; <
} 	
public 
CourseFeedback 3
'GetCourseFeedbackByCourseIdAndTraineeId E
(E F
intF I
courseIdJ R
,R S
intT W
	traineeIdX a
)a b
{ 	
return 
	dbContext 
. 
CourseFeedbacks ,
. 
Where 
( 
cf 
=> 
cf  "
." #
CourseId# +
==, .
courseId/ 7
&&8 :
cf; =
.= >
	TraineeId> G
==H J
	traineeIdK T
)T U
. 
FirstOrDefault #
(# $
)$ %
;% &
} 	
public 
IEnumerable 
< 
CourseFeedback )
>) *(
GetCourseFeedbacksByCourseId+ G
(G H
intH K
courseIdL T
)T U
{ 	
return 
	dbContext 
. 
CourseFeedbacks ,
., -
Where- 2
(2 3
cf3 5
=>5 7
cf8 :
.: ;
CourseId; C
==D F
courseIdG O
)O P
.P Q
IncludeQ X
(X Y
cfY [
=>[ ]
cf] _
._ `
Trainee` g
)g h
.h i
ToListi o
(o p
)p q
;q r
}   	
public"" 
TraineeFeedback"" =
1GetTraineeFeedbackByCourseIdTrainerIdAndTraineeId"" P
(""P Q
int""Q T
courseId""U ]
,""] ^
int""_ b
	traineeId""c l
,""l m
int""n q
	trainerId""r {
)""{ |
{## 	
return$$ 
	dbContext$$ 
.$$ 
TraineeFeedbacks$$ -
.%% 
Where%% 
(%% 
tf%% 
=>%% 
tf%%  "
.%%" #
CourseId%%# +
==%%, .
courseId%%/ 7
&&%%8 :
tf%%; =
.%%= >
	TraineeId%%> G
==%%H J
	traineeId%%K T
&&%%U W
tf%%X Z
.%%Z [
	TrainerId%%[ d
==%%e g
	trainerId%%h q
)%%q r
.&& 
Include&& 
(&& 
tf&& 
=>&& !
tf&&! #
.&&# $
Trainee&&$ +
)&&+ ,
.&&, -
Include&&- 4
(&&4 5
tf&&5 7
=>&&7 9
tf&&9 ;
.&&; <
Trainer&&< C
)&&C D
.'' 
FirstOrDefault'' #
(''# $
)''$ %
;''% &
}(( 	
public** 
void**  
UpdateCourseFeedback** (
(**( )
CourseFeedback**) 7
courseFeedback**8 F
)**F G
{++ 	
	dbContext,, 
.,, 
CourseFeedbacks,, %
.,,% &
Update,,& ,
(,,, -
courseFeedback,,- ;
),,; <
;,,< =
}-- 	
public// 
void// !
UpdateTraineeFeedback// )
(//) *
TraineeFeedback//* 9
traineeFeedback//: I
)//I J
{00 	
	dbContext11 
.11 
TraineeFeedbacks11 &
.11& '
Update11' -
(11- .
traineeFeedback11. =
)11= >
;11> ?
}22 	
}33 
}44 é+
xC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Persistent\ReviewRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
class 	
ReviewRepository
 
: 
IReviewRepository .
{ 
private 
readonly 
AppDbContext %
	dbContext& /
;/ 0
public		 
ReviewRepository		 
(		  
AppDbContext		  ,
	dbContext		- 6
)		6 7
{

 	
this 
. 
	dbContext 
= 
	dbContext &
;& '
} 	
public 
void 
	CreateMom 
( 
MOM !
mom" %
)% &
{ 	
var 
review 
= 
	dbContext "
." #
Reviews# *
.* +
Find+ /
(/ 0
mom0 3
.3 4
ReviewId4 <
)< =
;= >
review 
. 
StatusId 
= 
$num 
;  
	dbContext 
. 
MOMs 
. 
Add 
( 
mom "
)" #
;# $
} 	
public 
void 
CreateReview  
(  !
Review! '
review( .
). /
{ 	
	dbContext 
. 
Reviews 
. 
Add !
(! "
review" (
)( )
;) *
} 	
public 
IEnumerable 
< 
MOM 
>  
GetListOfMomByUserId  4
(4 5
int5 8
userId9 ?
)? @
{ 	
return 
	dbContext 
. 
MOMs !
. 
Where 
( 
m 
=> 
m 
.  
	TraineeId  )
==* ,
userId- 3
)3 4
. 
Include 
( 
m 
=>  
m  !
.! "
Trainee" )
)) *
;* +
} 	
public!! 
MOM!! (
GetMomByReviewIdAndTraineeId!! /
(!!/ 0
int!!0 3
reviewId!!4 <
,!!< =
int!!> A
	traineeId!!B K
)!!K L
{"" 	
return## 
	dbContext## 
.## 
MOMs## !
.$$ 
Where$$ 
($$ 
m$$ 
=>$$ 
m$$ 
.$$  
ReviewId$$  (
==$$) +
reviewId$$, 4
&&$$5 7
m$$8 9
.$$9 :
	TraineeId$$: C
==$$D F
	traineeId$$G P
)$$P Q
.%% 
Include%% 
(%% 
m%% 
=>%%  
m%%  !
.%%! "
Review%%" (
)%%( )
.%%) *
ThenInclude%%* 5
(%%5 6
r%%6 7
=>%%7 9
r%%9 :
.%%: ;
Reviewer%%; C
)%%C D
.&& 
Include&& 
(&& 
m&& 
=>&&  
m&&  !
.&&! "
Trainee&&" )
)&&) *
.'' 
FirstOrDefault'' #
(''# $
)''$ %
;''% &
}(( 	
public** 
Review** 
GetReviewById** #
(**# $
int**$ '
reviewId**( 0
)**0 1
{++ 	
return,, 
	dbContext,, 
.,, 
Reviews,, $
.-- 
Where-- 
(-- 
r-- 
=>-- 
r-- 
.--  
Id--  "
==--# %
reviewId--& .
)--. /
... 
Include.. 
(.. 
r.. 
=>..  
r..  !
...! "
Reviewer.." *
)..* +
.// 
Include// 
(// 
r// 
=>//  
r//  !
.//! "
Trainee//" )
)//) *
.00 
FirstOrDefault00 #
(00# $
)00$ %
;00% &
}11 	
public33 
IEnumerable33 
<33 
Review33 !
>33! "
GetReviewByStatusId33# 6
(336 7
int337 :
statusId33; C
)33C D
{44 	
return55 
	dbContext55 
.55 
Reviews55 $
.66 
Where66 
(66 
r66 
=>66 
r66 
.66  
StatusId66  (
==66) +
statusId66, 4
)664 5
.77 
Include77 
(77 
r77 
=>77  
r77  !
.77! "
Status77" (
)77( )
;77) *
}88 	
public:: 
void:: 
	UpdateMom:: 
(:: 
MOM:: !
mom::" %
)::% &
{;; 	
	dbContext<< 
.<< 
MOMs<< 
.<< 
Update<< !
(<<! "
mom<<" %
)<<% &
;<<& '
}== 	
public?? 
void?? 
UpdateReview??  
(??  !
Review??! '
review??( .
)??. /
{@@ 	
	dbContextAA 
.AA 
ReviewsAA 
.AA 
UpdateAA $
(AA$ %
reviewAA% +
)AA+ ,
;AA, -
}BB 	
}CC 
}DD »
vC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Persistent\RoleRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
class 	
RoleRepository
 
: 
IRoleRepository *
{ 
private 
readonly 
AppDbContext %
	dbContext& /
;/ 0
public		 
RoleRepository		 
(		 
AppDbContext		 *
	dbContext		+ 4
)		4 5
{

 	
this 
. 
	dbContext 
= 
	dbContext &
;& '
} 	
public 
IEnumerable 
< 
Role 
>  
GetRoles! )
() *
)* +
{ 	
return 
	dbContext 
. 
Roles "
." #
ToList# )
() *
)* +
;+ ,
} 	
} 
} ªj
rC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Persistent\Statistics.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

class 

Statistics 
{ 
private 
readonly 
AppDbContext %
	dbContext& /
;/ 0
public

 

Statistics

 
(

 
AppDbContext

 &
	dbContext

' 0
)

0 1
{ 	
this 
. 
	dbContext 
= 
	dbContext &
;& '
} 	
public 
int 
GetUserCount 
(  
)  !
{ 	
return 
	dbContext 
. 
Users "
." #
Count# (
(( )
)) *
;* +
} 	
public 
int 

lastUserId 
( 
) 
{ 	
return 
	dbContext 
. 
Users "
." #
OrderBy# *
(* +
u+ ,
=>, .
u. /
./ 0
Id0 2
)2 3
.3 4
Last4 8
(8 9
)9 :
.: ;
Id; =
;= >
} 	
public 
int 
GetCoordinatorCount &
(& '
)' (
{ 	
return 
	dbContext 
. 
Users "
." #
Where# (
(( )
u) *
=>* ,
u, -
.- .
RoleId. 4
==5 7
$num8 9
)9 :
.: ;
Count; @
(@ A
)A B
;B C
} 	
public 
int 
GetDepartmentsCount &
(& '
)' (
{ 	
return 
	dbContext 
. 
Departments (
.( )
Count) .
(. /
)/ 0
;0 1
} 	
public 
int 
GetTraineesCount #
(# $
)$ %
{ 	
return   
	dbContext   
.   
Users   "
.  " #
Where  # (
(  ( )
u  ) *
=>  * ,
u  , -
.  - .
RoleId  . 4
==  5 7
$num  8 9
)  9 :
.  : ;
Count  ; @
(  @ A
)  A B
;  B C
}!! 	
public"" 
int"" 
GetTrainersCount"" #
(""# $
)""$ %
{## 	
return$$ 
	dbContext$$ 
.$$ 
Users$$ "
.$$" #
Where$$# (
($$( )
u$$) *
=>$$* ,
u$$, -
.$$- .
RoleId$$. 4
==$$5 7
$num$$8 9
)$$9 :
.$$: ;
Count$$; @
($$@ A
)$$A B
;$$B C
}%% 	
public&& 
int&& 
GetReviewersCount&& $
(&&$ %
)&&% &
{&&& '
return'' 
	dbContext'' 
.'' 
Users'' "
.''" #
Where''# (
(''( )
u'') *
=>''* ,
u'', -
.''- .
RoleId''. 4
==''5 7
$num''8 9
)''9 :
.'': ;
Count''; @
(''@ A
)''A B
;''B C
}(( 	
public)) 
int)) 
GetCourseCount)) !
())! "
int))" %
userId))& ,
))), -
{** 	
return++ 
	dbContext++ 
.++ 
CourseUsers++ (
.++( )
Where++) .
(++. /
cu++/ 1
=>++1 3
cu++3 5
.++5 6
UserId++6 <
==++= ?
userId++@ F
)++F G
.++G H
Count++H M
(++M N
)++N O
;++O P
},, 	
public-- 
int-- 
GetCompletedReviews-- &
(--& '
int--' *
userId--+ 1
)--1 2
{.. 	
return// 
	dbContext// 
.// 
Reviews// $
.//$ %
Where//% *
(//* +
r//+ ,
=>//, .
r//. /
./// 0
StatusId//0 8
==//9 ;
$num//< =
&&//> @
r//A B
.//B C

ReviewerId//C M
==//N P
userId//Q W
)//W X
.//X Y
Count//Y ^
(//^ _
)//_ `
;//` a
}00 	
public11 
int11 
GetUpComingReviews11 %
(11% &
int11& )
userId11* 0
)110 1
{22 	
return33 
	dbContext33 
.33 
Reviews33 $
.33$ %
Where33% *
(33* +
r33+ ,
=>33, .
r33. /
.33/ 0
	TraineeId330 9
==33: <
userId33= C
&&33D F
r33G H
.33H I
StatusId33I Q
==33R T
$num33U V
&&33W Y
r33Z [
.33[ \

ReviewDate33\ f
.33f g
Day33g j
>=33k m
DateTime33n v
.33v w
Now33w z
.33z {
Day33{ ~
)33~ 
.	33 
Count
33 
(
33 
)
33 
;
33 
}44 	
public55 
int55 
GetCanceledReviews55 %
(55% &
)55& '
{66 	
return77 
	dbContext77 
.77 
Reviews77 $
.77$ %
Where77% *
(77* +
r77+ ,
=>77, .
r77. /
.77/ 0
StatusId770 8
==779 ;
$num77< =
)77= >
.77> ?
Count77? D
(77D E
)77E F
;77F G
}88 	
public99 
int99 
GetAttendanceCount99 %
(99% &
int99& )
courseId99* 2
,992 3
List993 7
<997 8
int998 ;
>99; <
?99< =
topicIds99> F
,99F G
int99G J
userId99K Q
)99Q R
{:: 	
bool;; 
present;; 
=;; 
false;;  
;;;  !
int<< 
result<< 
=<< 
$num<< 
;<< 
if== 
(== 
topicIds== 
!=== 
null== 
)==  
{>> 
foreach?? 
(?? 
var?? 
topicId?? $
in??% '
topicIds??( 0
)??0 1
{@@ 
presentAA 
=AA 
	dbContextAA '
.AA' (
AttendancesAA( 3
.AA3 4
AnyAA4 7
(AA7 8
aAA8 9
=>AA9 ;
aAA; <
.AA< =
CourseIdAA= E
==AAF H
courseIdAAI Q
&&AAR T
aAAU V
.AAV W
TopicIdAAW ^
==AA_ a
topicIdAAb i
&&AAj l
aAAm n
.AAn o
OwnerIdAAo v
==AAw y
userId	AAz 
)
AA 
;
AA 
ifBB 
(BB 
presentBB 
)BB 
resultBB  &
++BB& (
;BB( )
}CC 
}DD 
returnEE 
resultEE 
;EE 
}FF 	
publicGG 

DictionaryGG 
<GG 
stringGG  
,GG  !
stringGG! '
>GG' (
GetCourseStatsGG) 7
(GG7 8
intGG8 ;
userIdGG< B
)GGB C
{HH 	
varII 
	courseIdsII 
=II 
	dbContextII %
.II% &
CourseUsersII& 1
.II1 2
WhereII2 7
(II7 8
cuII8 :
=>II: <
cuII< >
.II> ?
UserIdII? E
==IIF H
userIdIII O
)IIO P
.IIP Q
SelectIIQ W
(IIW X
cuIIX Z
=>IIZ \
cuII\ ^
.II^ _
CourseIdII_ g
)IIg h
.IIh i
ToListIIi o
(IIo p
)IIp q
;IIq r
boolJJ 
isCompletedJJ 
=JJ 
falseJJ $
;JJ$ %
intKK 
courseCountKK 
=KK 
	courseIdsKK '
.KK' (
CountKK( -
(KK- .
)KK. /
;KK/ 0
intLL  
completedCourseCountLL $
=LL% &
$numLL' (
;LL( )
foreachMM 
(MM 
varMM 
courseIdMM !
inMM" $
	courseIdsMM% .
)MM. /
{NN 
isCompletedOO 
=OO 
IsCourseCompletedOO /
(OO/ 0
userIdOO0 6
,OO6 7
courseIdOO7 ?
)OO? @
;OO@ A
ifPP 
(PP 
isCompletedPP 
)PP  
completedCourseCountQQ (
++QQ( *
;QQ* +
}RR 
intSS !
inProgressCourseCountSS %
=SS& '
courseCountSS( 3
-SS4 5 
completedCourseCountSS6 J
;SSJ K
varTT 
resultTT 
=TT 
newTT 

DictionaryTT '
<TT' (
stringTT( .
,TT. /
stringTT/ 5
>TT5 6
(TT6 7
)TT7 8
;TT8 9
resultUU 
.UU 
AddUU 
(UU 
nameofUU 
(UU 
courseCountUU )
)UU) *
,UU* +
courseCountUU+ 6
.UU6 7
ToStringUU7 ?
(UU? @
)UU@ A
)UUA B
;UUB C
resultVV 
.VV 
AddVV 
(VV 
nameofVV 
(VV  
completedCourseCountVV 2
)VV2 3
,VV3 4 
completedCourseCountVV4 H
.VVH I
ToStringVVI Q
(VVQ R
)VVR S
)VVS T
;VVT U
resultWW 
.WW 
AddWW 
(WW 
nameofWW 
(WW !
inProgressCourseCountWW 3
)WW3 4
,WW4 5!
inProgressCourseCountWW5 J
.WWJ K
ToStringWWK S
(WWS T
)WWT U
)WWU V
;WWV W
returnXX 
resultXX 
;XX 
}YY 	
publicZZ 
boolZZ 
IsCourseCompletedZZ %
(ZZ% &
intZZ& )
userIdZZ* 0
,ZZ0 1
intZZ1 4
courseIdZZ5 =
)ZZ= >
{[[ 	
var\\ 
topicIds\\ 
=\\ 
	dbContext\\ $
.\\$ %
Topics\\% +
.\\+ ,
Where\\, 1
(\\1 2
t\\2 3
=>\\3 5
t\\5 6
.\\6 7
CourseId\\7 ?
==\\@ B
courseId\\C K
)\\K L
.\\L M
Select\\M S
(\\S T
t\\T U
=>\\U W
t\\W X
.\\X Y
TopicId\\Y `
)\\` a
.\\a b
ToList\\b h
(\\h i
)\\i j
;\\j k
int]] 
topicsCount]] 
=]] 
topicIds]] &
.]]& '
Count]]' ,
(]], -
)]]- .
;]]. /
int^^ 
attendanceCount^^ 
=^^  !
GetAttendanceCount^^" 4
(^^4 5
courseId^^5 =
,^^= >
topicIds^^> F
,^^F G
userId^^G M
)^^M N
;^^N O
return__ 
topicsCount__ 
==__ !
attendanceCount__" 1
?__2 3
true__4 8
:__8 9
false__: ?
;__? @
}`` 	
publicaa 

Dictionaryaa 
<aa 
stringaa  
,aa  !
stringaa! '
>aa' (
userDetailsaa) 4
(aa4 5
intaa5 8
userIdaa9 ?
)aa? @
{bb 	
varcc 
usercc 
=cc 
	dbContextcc  
.cc  !
Userscc! &
.cc& '
Wherecc' ,
(cc, -
ucc- .
=>cc. 0
ucc0 1
.cc1 2
Idcc2 4
==cc5 7
userIdcc8 >
)cc> ?
.cc? @
Includecc@ G
(ccG H
uccH I
=>ccI K
uccK L
.ccL M
RoleccM Q
)ccQ R
.ccR S
FirstOrDefaultccS a
(cca b
)ccb c
;ccc d
vardd 
resultdd 
=dd 
newdd 

Dictionarydd '
<dd' (
stringdd( .
,dd. /
stringdd/ 5
>dd5 6
(dd6 7
)dd7 8
;dd8 9
ifee 
(ee 
useree 
!=ee 
nullee 
)ee 
{ff 
resultgg 
.gg 
Addgg 
(gg 
$strgg !
,gg! "
usergg" &
.gg& '
FullNamegg' /
)gg/ 0
;gg0 1
resulthh 
.hh 
Addhh 
(hh 
$strhh !
,hh! "
userhh" &
.hh& '
Rolehh' +
.hh+ ,
Namehh, 0
)hh0 1
;hh1 2
resultii 
.ii 
Addii 
(ii 
$strii "
,ii" #
userii# '
.ii' (
Base64ii( .
+ii/ 0
Convertii1 8
.ii8 9
ToBase64Stringii9 G
(iiG H
useriiH L
.iiL M
ImageiiM R
)iiR S
)iiS T
;iiT U
}jj 
returnkk 
resultkk 
;kk 
}ll 	
}mm 
}nn ,
vC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\Persistent\UserRepository.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
class 	
UserRepository
 
: 
IUserRepository *
{		 
private

 
readonly

 
AppDbContext

 %
	dbContext

& /
;

/ 0
public 
UserRepository 
( 
AppDbContext *
	dbContext+ 4
)4 5
{ 	
this 
. 
	dbContext 
= 
	dbContext &
;& '
} 	
public 
void 

CreateUser 
( 
User #
user$ (
)( )
{ 	
	dbContext 
. 
Users 
. 
Add 
(  
user  $
)$ %
;% &
} 	
public 
User %
GetUserByEmailAndPassword -
(- .

LoginModel. 8
user9 =
)= >
{ 	
return 
	dbContext 
. 
Users "
. 
Where 
( 
u 
=> 
u  !
.! "
Email" '
==( *
user+ /
./ 0
Email0 5
&&6 8
u 
. 
Password %
==& (
HashPassword) 5
.5 6
Sha2566 <
(< =
user= A
.A B
PasswordB J
)J K
)K L
. 
Include 
( 
u 
=> !
u" #
.# $
Role$ (
)( )
.) *
FirstOrDefault* 8
(8 9
)9 :
;: ;
} 	
public 
User 
GetUserById 
(  
int  #
id$ &
)& '
{ 	
return 
	dbContext 
. 
Users "
.   
Where   
(   
u   
=>   
u   
.    
Id    "
==  # %
id  & (
)  ( )
.!! 
Include!! 
(!! 
u!! 
=>!!  
u!!  !
.!!! "
Role!!" &
)!!& '
."" 
Include"" 
("" 
u"" 
=>""  
u""  !
.""! "

Department""" ,
)"", -
.## 
FirstOrDefault## #
(### $
)##$ %
;##% &
}$$ 	
public%% 
IEnumerable%% 
<%% 
User%% 
>%%  
GetUsersByRole%%! /
(%%/ 0
int%%0 3
roleId%%4 :
)%%: ;
{&& 	
return'' 
	dbContext'' 
.'' 
Users'' "
.(( 
Where(( 
((( 
u(( 
=>(( 
u(( 
.((  
RoleId((  &
==((' )
roleId((* 0
)((0 1
.)) 
Include)) 
()) 
u)) 
=>))  
u))  !
.))! "

Department))" ,
))), -
.** 
Include** 
(** 
u** 
=>**  
u**  !
.**! "
Role**" &
)**& '
;**' (
}++ 	
public,, 
IEnumerable,, 
<,, 
User,, 
>,,   
GetUsersByDepartment,,! 5
(,,5 6
int,,6 9
departmentId,,: F
),,F G
{-- 	
return.. 
	dbContext.. 
... 
Users.. "
.// 
Where// 
(// 
u// 
=>// 
u// 
.//  
DepartmentId//  ,
==//- /
departmentId//0 <
)//< =
.00 
Include00 
(00 
u00 
=>00  
u00  !
.00! "

Department00" ,
)00, -
.11 
Include11 
(11 
u11 
=>11  
u11  !
.11! "
Role11" &
)11& '
;11' (
}22 	
public44 
IEnumerable44 
<44 
User44 
>44  !
GetUsersByDeptandrole44! 6
(446 7
int447 :
departmentId44; G
,44G H
int44I L
roleId44M S
)44S T
{55 	
return66 
	dbContext66 
.66 
Users66 "
.77 
Where77 
(77 
u77 
=>77 
u77 
.77  
DepartmentId77  ,
==77- /
departmentId770 <
&&77= ?
u77@ A
.77A B
RoleId77B H
==77I K
roleId77L R
)77R S
.88 
Include88 
(88 
u88 
=>88  
u88  !
.88! "

Department88" ,
)88, -
.99 
Include99 
(99 
u99 
=>99  
u99  !
.99! "
Role99" &
)99& '
;99' (
}:: 	
public<< 
void<< 

UpdateUser<< 
(<< 
User<< #
user<<$ (
)<<( )
{== 	
	dbContext>> 
.>> 
Users>> 
.>> 
Update>> "
(>>" #
user>># '
)>>' (
;>>( )
}?? 	
}@@ 
}AA ü
gC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Repositories\UnitOfWork.cs
	namespace 	
TMS
 
. 
API 
. 
Repositories 
{ 
public 

class 

UnitOfWork 
{ 
private 
readonly 
AppDbContext %
	dbContext& /
;/ 0
public		 
IUserRepository		 
Users		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
public

 
IRoleRepository

 
Roles

 $
{

% &
get

' *
;

* +
set

, /
;

/ 0
}

1 2
public 
ICourseRepository  
Courses! (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
IReviewRepository  
Reviews! (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
IFeedbackRepository "
	Feedbacks# ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public !
IDepartmentRepository $
Departments% 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 

Validation 

Validation $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

Statistics 
stats 
{  !
get" %
;% &
set' *
;* +
}, -
public 

UnitOfWork 
( 
AppDbContext &
	dbContext' 0
)0 1
{ 	
this 
. 
	dbContext 
= 
	dbContext &
;& '
Users 
= 
new 
UserRepository &
(& '
	dbContext' 0
)0 1
;1 2
Roles 
= 
new 
RoleRepository &
(& '
	dbContext' 0
)0 1
;1 2
Courses 
= 
new 
CourseRepository *
(* +
	dbContext+ 4
)4 5
;5 6
Reviews 
= 
new 
ReviewRepository *
(* +
	dbContext+ 4
)4 5
;5 6
	Feedbacks 
= 
new 
FeedbackRepository .
(. /
	dbContext/ 8
)8 9
;9 :
Departments 
= 
new  
DepartmentRepository 2
(2 3
	dbContext3 <
)< =
;= >

Validation 
= 
new 

Validation '
(' (
	dbContext( 1
)1 2
;2 3
stats 
= 
new 

Statistics "
(" #
	dbContext# ,
), -
;- .
} 	
public 
void 
Complete 
( 
) 
{ 	
	dbContext   
.   
SaveChanges   !
(  ! "
)  " #
;  # $
}!! 	
}"" 
}## à
tC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\AuthServices\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public		 

partial		 
class		 
AuthService		 $
{

 
private 
static 
string 
GenerateTokenString 1
(1 2
User2 6
dbUser7 =
)= >
{ 	
var 
claims 
= 
GenerateClaims '
(' (
dbUser( .
). /
;/ 0
var 
	secretKey 
= 
new  
SymmetricSecurityKey  4
(4 5
Encoding5 =
.= >
UTF8> B
.B C
GetBytesC K
(K L
$strL `
)` a
)a b
;b c
var 
signinCredentials !
=" #
new$ '
SigningCredentials( :
(: ;
	secretKey; D
,D E
SecurityAlgorithmsF X
.X Y

HmacSha256Y c
)c d
;d e
var 
tokeOptions 
= 
new !
JwtSecurityToken" 2
(2 3
issuer 
: 
$str 0
,0 1
audience 
: 
$str 2
,2 3
claims 
: 
claims 
, 
expires 
: 
DateTime !
.! "
Now" %
.% &
AddDays& -
(- .
$num. /
)/ 0
,0 1
signingCredentials "
:" #
signinCredentials$ 5
) 
; 
var 
tokenString 
= 
new !#
JwtSecurityTokenHandler" 9
(9 :
): ;
.; <

WriteToken< F
(F G
tokeOptionsG R
)R S
;S T
return 
tokenString 
; 
} 	
private 
static 
List 
< 
Claim !
>! "
GenerateClaims# 1
(1 2
User2 6
dbUser7 =
)= >
{ 	
return 
new 
List 
< 
Claim !
>! "
{ 
new 
Claim 
( 
$str !
,! "
dbUser" (
.( )
Email) .
). /
,/ 0
new 
Claim 
( 
$str  
,  !
dbUser" (
.( )
FullName) 1
)1 2
,2 3
new   
Claim   
(   
$str    
,    !
dbUser  " (
.  ( )
Role  ) -
.  - .
Name  . 2
)  2 3
,  3 4
new!! 
Claim!! 
(!! 

ClaimTypes!! $
.!!$ %
Role!!% )
,!!) *
dbUser!!+ 1
.!!1 2
Role!!2 6
.!!6 7
Name!!7 ;
)!!; <
,!!< =
new"" 
Claim"" 
("" 
$str"" "
,""" #
dbUser""$ *
.""* +
RoleId""+ 1
.""1 2
ToString""2 :
("": ;
)""; <
)""< =
,""= >
new## 
Claim## 
(## 
$str## "
,##" #
dbUser##$ *
.##* +
Id##+ -
.##- .
ToString##. 6
(##6 7
)##7 8
)##8 9
}$$ 
;$$ 
}%% 	
}&& 
}'' ¨
sC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\AuthServices\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
AuthService $
{ 
private 
readonly 

UnitOfWork #
_repo$ )
;) *
public		 
AuthService		 
(		 

UnitOfWork		 %
repo		& *
)		* +
{

 	
_repo 
= 
repo 
; 
} 	
public 

Dictionary 
< 
string  
,  !
string! '
>' (
Login) .
(. /

LoginModel/ 9
user: >
)> ?
{ 	
var 

validation 
= 
_repo "
." #

Validation# -
.- . 
ValidateLoginDetails. B
(B C
userC G
)G H
;H I
if 
( 

validation 
. 
ContainsKey %
(% &
$str& /
)/ 0
)0 1
{ 
var 
result 
= 
new  

Dictionary! +
<+ ,
string, 2
,2 3
string3 9
>9 :
(: ;
); <
;< =
var 
dbUser 
= 
_repo "
." #
Users# (
.( )%
GetUserByEmailAndPassword) B
(B C
userC G
)G H
;H I
string 
tokenString "
=# $
GenerateTokenString% 8
(8 9
dbUser9 ?
)? @
;@ A
result 
. 
Add 
( 
$str "
," #
tokenString$ /
)/ 0
;0 1
return 
result 
; 
} 
return 

validation 
; 
} 	
} 
} 
C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\CourseServices\Assignment\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
CourseService &
{ 
private 
static 
void 
prepareAssignment -
(- .

Assignment. 8

assignment9 C
)C D
{ 	
File		 
PDF		 
=		 
FileService		 "
.		" #'
GetBase64HeaderAndByteArray		# >
(		> ?

assignment		? I
.		I J
Base64		J P
)		P Q
;		Q R

assignment

 
.

 
Base64

 
=

 
PDF

  #
.

# $
header

$ *
;

* +

assignment 
. 
Document 
=  !
PDF" %
.% &
bytes& +
;+ ,

assignment 
. 
	CreatedOn  
=! "
DateTime# +
.+ ,
Now, /
;/ 0
} 	
private 
static 
void 
prepareAssignment -
(- .

Assignment. 8

assignment9 C
,C D

AssignmentE O
dbAssignmentP \
)\ ]
{ 	
File 
PDF 
= 
FileService "
." #'
GetBase64HeaderAndByteArray# >
(> ?

assignment? I
.I J
Base64J P
)P Q
;Q R
dbAssignment 
. 
Base64 
=  !
PDF" %
.% &
header& ,
;, -
dbAssignment 
. 
Document !
=" #
PDF$ '
.' (
bytes( -
;- .
dbAssignment 
. 
	UpdatedOn "
=# $
DateTime% -
.- .
Now. 1
;1 2
} 	
} 
} 1
C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\CourseServices\Assignment\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
CourseService &
{		 
private

 
readonly

 

UnitOfWork

 #
_repo

$ )
;

) *
public 
CourseService 
( 

UnitOfWork '
repo( ,
), -
{ 	
_repo 
= 
repo 
; 
} 	
public 
IEnumerable 
< 

Assignment %
>% &#
GetAssignmentsByTopicId' >
(> ?
int? B
topicIdC J
)J K
{ 	
var 
topicExists 
= 
_repo #
.# $

Validation$ .
.. /
TopicExists/ :
(: ;
topicId; B
)B C
;C D
if 
( 
topicExists 
) 
{ 
return 
_repo 
. 
Courses $
.$ %#
GetAssignmentsByTopicId% <
(< =
topicId= D
)D E
;E F
;F G
} 
throw 
new 
ArgumentException '
(' (
$str( 4
)4 5
;5 6
} 	
public 

Assignment 4
(GetAssignmentByCourseIdTopicIdAndOwnerId B
(B C
intC F
courseIdG O
,O P
intQ T
topicIdU \
,\ ]
int^ a
ownerIdb i
)i j
{ 	
var 
assignmentExists  
=! "
_repo# (
.( )

Validation) 3
.3 4
AssignmentExists4 D
(D E
courseIdE M
,M N
topicIdO V
,V W
ownerIdX _
)_ `
;` a
if 
( 
assignmentExists  
)  !
{ 
return   
_repo   
.   
Courses   $
.  $ %4
(GetAssignmentByCourseIdTopicIdAndOwnerId  % M
(  M N
courseId  N V
,  V W
topicId  W ^
,  ^ _
ownerId  _ f
)  f g
;  g h
}!! 
throw"" 
new"" 
ArgumentException"" '
(""' (
$str""( 6
)""6 7
;""7 8
}## 	
public$$ 

Dictionary$$ 
<$$ 
string$$  
,$$  !
string$$" (
>$$( )
CreateAssignment$$* :
($$: ;

Assignment$$; E

assignment$$F P
)$$P Q
{%% 	
if&& 
(&& 

assignment&& 
is&& 
null&& "
)&&" #
throw&&$ )
new&&* -!
ArgumentNullException&&. C
(&&C D
nameof&&D J
(&&J K

assignment&&K U
)&&U V
)&&V W
;&&W X
var'' 

validation'' 
='' 
_repo'' "
.''" #

Validation''# -
.''- .
ValidateAssignment''. @
(''@ A

assignment''A K
)''K L
;''L M
if(( 
((( 

validation(( 
.(( 
ContainsKey(( &
(((& '
$str((' 0
)((0 1
&&((2 4
!((5 6

validation((6 @
.((@ A
ContainsKey((A L
(((L M
$str((M U
)((U V
)((V W
{)) 
prepareAssignment** !
(**! "

assignment**" ,
)**, -
;**- .
_repo++ 
.++ 
Courses++ 
.++ 
CreateAssignment++ .
(++. /

assignment++/ 9
)++9 :
;++: ;
_repo,, 
.,, 
Complete,, 
(,, 
),,  
;,,  !
}-- 
return.. 

validation.. 
;.. 
}// 	
public00 

Dictionary00 
<00 
string00  
,00  !
string00" (
>00( )
UpdateAssignment00* :
(00: ;

Assignment00; E

assignment00F P
)00P Q
{11 	
if22 
(22 

assignment22 
is22 
null22 "
)22" #
throw22$ )
new22* -!
ArgumentNullException22. C
(22C D
nameof22D J
(22J K

assignment22K U
)22U V
)22V W
;22W X
var33 

validation33 
=33 
_repo33 "
.33" #

Validation33# -
.33- .
ValidateAssignment33. @
(33@ A

assignment33A K
)33K L
;33L M
if44 
(44 

validation44 
.44 
ContainsKey44 &
(44& '
$str44' 0
)440 1
&&442 4

validation445 ?
.44? @
ContainsKey44@ K
(44K L
$str44L T
)44T U
)44U V
{55 
var66 
dbAssignment66  
=66! "
_repo66# (
.66( )
Courses66) 0
.660 14
(GetAssignmentByCourseIdTopicIdAndOwnerId661 Y
(66Y Z

assignment66Z d
.66d e
CourseId66e m
,66m n

assignment66n x
.66x y
TopicId	66y 
,
66 

assignment
66 
.
66 
OwnerId
66 
)
66 
;
66 
prepareAssignment77 !
(77! "

assignment77" ,
,77, -
dbAssignment77- 9
)779 :
;77: ;
_repo88 
.88 
Courses88 
.88 
UpdateAssignment88 .
(88. /
dbAssignment88/ ;
)88; <
;88< =
_repo99 
.99 
Complete99 
(99 
)99  
;99  !
}:: 
return;; 

validation;; 
;;; 
}<< 	
}== 
}>> A
}C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\CourseServices\Course\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
CourseService &
{ 
private		 
List		 
<		 
CourseUsers		  
>		  !
GetListOfValidUsers		" 5
(		5 6
AddUsersToCourse		6 F
data		G K
,		K L
int		M P
currentUserId		Q ^
)		^ _
{

 	
var 
	validList 
= 
new 
List  $
<$ %
CourseUsers% 0
>0 1
(1 2
)2 3
;3 4
bool 
courseUsertExists "
=# $
false% *
;* +
foreach 
( 
var 
user 
in  
data! %
.% &
users& +
)+ ,
{ 
courseUsertExists !
=" #
_repo$ )
.) *

Validation* 4
.4 5
CourseUserExists5 E
(E F
dataF J
.J K
CourseIdK S
,S T
userU Y
.Y Z
UserIdZ `
,` a
userb f
.f g
RoleIdg m
)m n
;n o
if 
( 
! 
courseUsertExists &
)& '
{ 
var 

courseUser "
=# $
new% (
CourseUsers) 4
(4 5
)5 6
;6 7

courseUser 
. 
CourseId '
=( )
data* .
.. /
CourseId/ 7
;7 8

courseUser 
. 
UserId %
=& '
user( ,
., -
UserId- 3
;3 4

courseUser 
. 
RoleId %
=& '
user( ,
., -
RoleId- 3
;3 4

courseUser 
. 
	CreatedOn (
=) *
DateTime+ 3
.3 4
Now4 7
;7 8

courseUser 
. 
	CreatedBy (
=) *
currentUserId+ 8
;8 9
	validList 
. 
Add !
(! "

courseUser" ,
), -
;- .
} 
} 
return 
	validList 
. 
Distinct %
(% &
)& '
.' (
ToList( .
(. /
)/ 0
;0 1
} 	
private 
List 
< 
CourseUsers  
>  !
GetCourseUsers" 0
(0 1
AddUsersToCourse1 A
dataB F
,F G
intH K
currentUserIdL Y
)Y Z
{ 	
var 
	validList 
= 
new 
List  $
<$ %
CourseUsers% 0
>0 1
(1 2
)2 3
;3 4
bool   
courseUsertExists   "
=  # $
false  % *
;  * +
foreach!! 
(!! 
var!! 
user!! 
in!!  
data!!! %
.!!% &
users!!& +
)!!+ ,
{"" 
courseUsertExists## !
=##" #
_repo##$ )
.##) *

Validation##* 4
.##4 5
CourseUserExists##5 E
(##E F
data##F J
.##J K
CourseId##K S
,##S T
user##U Y
.##Y Z
UserId##Z `
,##` a
user##b f
.##f g
RoleId##g m
)##m n
;##n o
if$$ 
($$ 
courseUsertExists$$ %
)$$% &
{%% 
var&& 

courseUser&& "
=&&# $
new&&% (
CourseUsers&&) 4
(&&4 5
)&&5 6
;&&6 7

courseUser'' 
.'' 
CourseId'' '
=''( )
data''* .
.''. /
CourseId''/ 7
;''7 8

courseUser(( 
.(( 
UserId(( %
=((& '
user((( ,
.((, -
UserId((- 3
;((3 4

courseUser)) 
.)) 
RoleId)) %
=))& '
user))( ,
.)), -
RoleId))- 3
;))3 4

courseUser** 
.** 
	CreatedOn** (
=**) *
DateTime**+ 3
.**3 4
Now**4 7
;**7 8

courseUser++ 
.++ 
	CreatedBy++ (
=++) *
currentUserId+++ 8
;++8 9
	validList,, 
.,, 
Add,, !
(,,! "

courseUser,," ,
),,, -
;,,- .
}-- 
}.. 
return// 
	validList// 
.// 
Distinct// %
(//% &
)//& '
.//' (
ToList//( .
(//. /
)/// 0
;//0 1
}00 	
private11 
void11 
SetUpCourseDetails11 '
(11' (
Course11( .
course11/ 5
)115 6
{22 	
var33 
user33 
=33 
_repo33 
.33 
Users33 "
.33" #
GetUserById33# .
(33. /
course33/ 5
.335 6
	TrainerId336 ?
)33? @
;33@ A
var44 
courseTrainer44 
=44 
new44  #
CourseUsers44$ /
(44/ 0
)440 1
{441 2
CourseId55 
=55 
course55 
.55  
Id55  "
,55" #
UserId66 
=66 
course66 
.66 
	TrainerId66 '
,66' (
RoleId77 
=77 
$num77 
,77 
	CreatedOn88 
=88 
DateTime88 $
.88$ %
Now88% (
,88( )
	CreatedBy99 
=99 
course99 "
.99" #
	CreatedBy99# ,
}:: 
;:: 
course;; 
.;; 
UserMapping;; 
=;;  
new;;! $
List;;% )
<;;) *
CourseUsers;;* 5
>;;5 6
(;;6 7
);;7 8
;;;8 9
course== 
.== 
UserMapping== 
.== 
Add== "
(==" #
courseTrainer==# 0
)==0 1
;==1 2
course>> 
.>> 
	CreatedOn>> 
=>> 
DateTime>> '
.>>' (
Now>>( +
;>>+ ,
}?? 	
private@@ 
void@@ 
SetUpCourseDetails@@ '
(@@' (
Course@@( .
course@@/ 5
,@@5 6
Course@@6 <
dbCourse@@= E
)@@E F
{AA 	
dbCourseBB 
.BB 
DepartmentIdBB !
=BB" #
courseBB$ *
.BB* +
DepartmentIdBB+ 7
;BB7 8
dbCourseCC 
.CC 
NameCC 
=CC 
courseCC "
.CC" #
NameCC# '
;CC' (
dbCourseDD 
.DD 
DurationDD 
=DD 
courseDD  &
.DD& '
DurationDD' /
;DD/ 0
dbCourseEE 
.EE 
DescriptionEE  
=EE! "
courseEE# )
.EE) *
DescriptionEE* 5
;EE5 6
dbCourseFF 
.FF 
	UpdatedOnFF 
=FF  
DateTimeFF! )
.FF) *
NowFF* -
;FF- .
}GG 	
privateHH 
voidHH 
disableHH 
(HH 
intHH  
currentUserIdHH! .
,HH. /
CourseHH/ 5
dbCourseHH6 >
)HH> ?
{II 	
dbCourseJJ 
.JJ 

isDisabledJJ 
=JJ  !
trueJJ" &
;JJ& '
dbCourseKK 
.KK 
	UpdatedByKK 
=KK  
currentUserIdKK! .
;KK. /
dbCourseLL 
.LL 
	UpdatedOnLL 
=LL  
DateTimeLL! )
.LL) *
NowLL* -
;LL- .
}MM 	
}NN 
}OO ÙZ
|C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\CourseServices\Course\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
CourseService &
{		 
public

 
IEnumerable

 
<

 
Course

 !
>

! "
GetCoursesByUserId

# 5
(

5 6
int

6 9
userId

: @
)

@ A
{ 	
var 

userExists 
= 
_repo "
." #

Validation# -
.- .

UserExists. 8
(8 9
userId9 ?
)? @
;@ A
if 
( 

userExists 
) 
{ 
return 
_repo 
. 
Courses $
.$ %
GetCoursesByUserId% 7
(7 8
userId8 >
)> ?
;? @
} 
else 
throw 
new 
ArgumentException ,
(, -
nameof- 3
(3 4
userId4 :
): ;
); <
;< =
} 	
public 
IEnumerable 
< 
Course !
>! "$
GetCoursesByDepartmentId# ;
(; <
int< ?
departmentId@ L
)L M
{ 	
var 
departmentExists  
=! "
_repo# (
.( )

Validation) 3
.3 4
DepartmentExists4 D
(D E
departmentIdE Q
)Q R
;R S
if 
( 
departmentExists 
)  
{ 
return 
_repo 
. 
Courses $
.$ %$
GetCoursesByDepartmentId% =
(= >
departmentId> J
)J K
;K L
} 
else 
throw 
new 
ArgumentException ,
(, -
nameof- 3
(3 4
departmentId4 @
)@ A
)A B
;B C
} 	
public 
IEnumerable 
< 
Course !
>! "

GetCourses# -
(- .
). /
{ 	
return 
_repo 
. 
Courses  
.  !

GetCourses! +
(+ ,
), -
;- .
} 	
public   
Course   
GetCourseById   #
(  # $
int  $ '
courseId  ( 0
)  0 1
{!! 	
var"" 
courseExists"" 
="" 
_repo"" $
.""$ %

Validation""% /
.""/ 0
CourseExists""0 <
(""< =
courseId""= E
)""E F
;""F G
if## 
(## 
courseExists## 
)## 
{$$ 
return%% 
_repo%% 
.%% 
Courses%% $
.%%$ %
GetCourseById%%% 2
(%%2 3
courseId%%3 ;
)%%; <
;%%< =
}&& 
throw'' 
new'' 
ArgumentException'' '
(''' (
nameof''( .
(''. /
courseId''/ 7
)''7 8
)''8 9
;''9 :
}(( 	
public)) 

Dictionary)) 
<)) 
string))  
,))  !
string))! '
>))' (
CreateCourse))) 5
())5 6
Course))6 <
course))= C
)))C D
{** 	
if++ 
(++ 
course++ 
is++ 
null++ 
)++ 
throw++  %
new++& )!
ArgumentNullException++* ?
(++? @
nameof++@ F
(++F G
course++G M
)++M N
)++N O
;++O P
var,, 

validation,, 
=,, 
_repo,, "
.,," #

Validation,,# -
.,,- .
ValidateCourse,,. <
(,,< =
course,,= C
),,C D
;,,D E
if-- 
(-- 

validation-- 
.-- 
ContainsKey-- &
(--& '
$str--' 0
)--0 1
&&--2 4
!--5 6

validation--6 @
.--@ A
ContainsKey--A L
(--L M
$str--M U
)--U V
)--V W
{.. 
SetUpCourseDetails// "
(//" #
course//# )
)//) *
;//* +
_repo00 
.00 
Courses00 
.00 
CreateCourse00 *
(00* +
course00+ 1
)001 2
;002 3
_repo11 
.11 
Complete11 
(11 
)11  
;11  !
}22 
return33 

validation33 
;33 
}44 	
public55 

Dictionary55 
<55 
string55  
,55  !
string55! '
>55' (
UpdateCourse55) 5
(555 6
Course556 <
course55= C
)55C D
{66 	
if77 
(77 
course77 
is77 
null77 
)77 
throw77  %
new77& )!
ArgumentNullException77* ?
(77? @
nameof77@ F
(77F G
course77G M
)77M N
)77N O
;77O P
var88 

validation88 
=88 
_repo88 "
.88" #

Validation88# -
.88- .
ValidateCourse88. <
(88< =
course88= C
)88C D
;88D E
if99 
(99 

validation99 
.99 
ContainsKey99 &
(99& '
$str99' 0
)990 1
&&992 4

validation995 ?
.99? @
ContainsKey99@ K
(99K L
$str99L T
)99T U
)99U V
{:: 
var;; 
dbCourse;; 
=;; 
_repo;; $
.;;$ %
Courses;;% ,
.;;, -
GetCourseById;;- :
(;;: ;
course;;; A
.;;A B
Id;;B D
);;D E
;;;E F
SetUpCourseDetails<< "
(<<" #
course<<# )
,<<) *
dbCourse<<+ 3
)<<3 4
;<<4 5
_repo== 
.== 
Courses== 
.== 
UpdateCourse== *
(==* +
dbCourse==+ 3
)==3 4
;==4 5
_repo>> 
.>> 
Complete>> 
(>> 
)>>  
;>>  !
}?? 
return@@ 

validation@@ 
;@@ 
}AA 	
publicBB 
boolBB 
DisableCourseBB !
(BB! "
intBB" %
courseIdBB& .
,BB. /
intBB0 3
currentUserIdBB4 A
)BBA B
{CC 	
varDD 
courseExistsDD 
=DD 
_repoDD $
.DD$ %

ValidationDD% /
.DD/ 0
CourseExistsDD0 <
(DD< =
courseIdDD= E
)DDE F
;DDF G
ifEE 
(EE 
courseExistsEE 
)EE 
{FF 
varGG 
dbCourseGG 
=GG 
_repoGG $
.GG$ %
CoursesGG% ,
.GG, -
GetCourseByIdGG- :
(GG: ;
courseIdGG; C
)GGC D
;GGD E
disableHH 
(HH 
currentUserIdHH %
,HH% &
dbCourseHH& .
)HH. /
;HH/ 0
_repoII 
.II 
CompleteII 
(II 
)II  
;II  !
}JJ 
returnKK 
courseExistsKK 
;KK  
}LL 	
publicMM 

DictionaryMM 
<MM 
stringMM  
,MM  !
ListMM! %
<MM% &
CourseUsersMM& 1
>MM1 2
>MM2 3
AddUsersToCourseMM4 D
(MMD E
AddUsersToCourseMME U
dataMMV Z
,MMZ [
intMM\ _
currentUserIdMM` m
)MMm n
{NN 	
varOO 
courseExistsOO 
=OO 
_repoOO $
.OO$ %

ValidationOO% /
.OO/ 0
CourseExistsOO0 <
(OO< =
dataOO= A
.OOA B
CourseIdOOB J
)OOJ K
;OOK L
ifPP 
(PP 
courseExistsPP 
)PP 
{QQ 
varRR 
resultRR 
=RR 
newRR !

DictionaryRR" ,
<RR, -
stringRR- 3
,RR3 4
ListRR4 8
<RR8 9
CourseUsersRR9 D
>RRD E
>RRE F
(RRF G
)RRG H
;RRH I
varSS 
	validListSS 
=SS 
GetListOfValidUsersSS  3
(SS3 4
dataSS4 8
,SS8 9
currentUserIdSS9 F
)SSF G
;SSG H
_repoTT 
.TT 
CoursesTT 
.TT 
AddUsersToCourseTT .
(TT. /
	validListTT/ 8
)TT8 9
;TT9 :
resultUU 
.UU 
AddUU 
(UU 
$strUU >
,UU> ?
	validListUU@ I
)UUI J
;UUJ K
_repoVV 
.VV 
CompleteVV 
(VV 
)VV  
;VV  !
returnWW 
resultWW 
;WW 
}XX 
elseYY 
throwYY 
newYY 
ArgumentExceptionYY ,
(YY, -
nameofYY- 3
(YY3 4
dataYY4 8
)YY8 9
)YY9 :
;YY: ;
}ZZ 	
public\\ 

Dictionary\\ 
<\\ 
string\\  
,\\  !
List\\! %
<\\% &
CourseUsers\\& 1
>\\1 2
>\\2 3!
RemoveUsersFromCourse\\4 I
(\\I J
AddUsersToCourse\\J Z
data\\[ _
,\\_ `
int\\a d
currentUserId\\e r
)\\r s
{]] 	
var^^ 
courseExists^^ 
=^^ 
_repo^^ $
.^^$ %

Validation^^% /
.^^/ 0
CourseExists^^0 <
(^^< =
data^^= A
.^^A B
CourseId^^B J
)^^J K
;^^K L
if__ 
(__ 
courseExists__ 
)__ 
{`` 
varaa 
resultaa 
=aa 
newaa !

Dictionaryaa" ,
<aa, -
stringaa- 3
,aa3 4
Listaa4 8
<aa8 9
CourseUsersaa9 D
>aaD E
>aaE F
(aaF G
)aaG H
;aaH I
varbb 
	validListbb 
=bb 
GetCourseUsersbb  .
(bb. /
databb/ 3
,bb3 4
currentUserIdbb4 A
)bbA B
;bbB C
_repocc 
.cc 
Coursescc 
.cc !
RemoveUsersFromCoursecc 3
(cc3 4
	validListcc4 =
)cc= >
;cc> ?
resultdd 
.dd 
Adddd 
(dd 
$strdd >
,dd> ?
	validListdd? H
)ddH I
;ddI J
_repoee 
.ee 
Completeee 
(ee 
)ee  
;ee  !
returnff 
resultff 
;ff 
}gg 
elsehh 
throwhh 
newhh 
ArgumentExceptionhh ,
(hh, -
nameofhh- 3
(hh3 4
datahh4 8
)hh8 9
)hh9 :
;hh: ;
}ii 	
}jj 
}kk ö
|C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\CourseServices\Topic\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
CourseService &
{ 
private 
void 
SetUpTopicDetails &
(& '
Topic' ,
topic- 2
)2 3
{		 	
topic

 
.

 

isDisabled

 
=

 
false

 $
;

$ %
topic 
. 
	CreatedOn 
= 
DateTime &
.& '
Now' *
;* +
} 	
private 
void 
SetUpTopicDetails &
(& '
Topic' ,
topic- 2
,2 3
Topic4 9
dbTopic: A
)A B
{ 	
dbTopic 
. 
Name 
= 
topic  
.  !
Name! %
;% &
dbTopic 
. 
Duration 
= 
topic $
.$ %
Duration% -
;- .
dbTopic 
. 
Content 
= 
topic #
.# $
Content$ +
;+ ,
dbTopic 
. 
	UpdatedOn 
= 
DateTime  (
.( )
Now) ,
;, -
} 	
private 
void 
disable 
( 
int  
currentUserId! .
,. /
Topic/ 4
dbTopic5 <
)< =
{ 	
dbTopic 
. 

isDisabled 
=  
true! %
;% &
dbTopic 
. 
	UpdatedBy 
= 
currentUserId  -
;- .
dbTopic 
. 
	UpdatedOn 
= 
DateTime  (
.( )
Now) ,
;, -
} 	
} 
} ç<
{C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\CourseServices\Topic\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
CourseService &
{ 
public		 
IEnumerable		 
<		 
Topic		  
>		  !
GetTopicsByCourseId		" 5
(		5 6
int		6 9
courseId		: B
)		B C
{

 	
var 
courseExists 
= 
_repo $
.$ %

Validation% /
./ 0
CourseExists0 <
(< =
courseId= E
)E F
;F G
if 
( 
courseExists 
) 
return #
_repo$ )
.) *
Courses* 1
.1 2
GetTopicsByCourseId2 E
(E F
courseIdF N
)N O
;O P
else 
throw 
new 
ArgumentException ,
(, -
$str- 9
)9 :
;: ;
} 	
public 
Topic 
GetTopicById !
(! "
int" %
courseId& .
,. /
int/ 2
topicId3 :
,: ;
int; >
userId? E
)E F
{ 	
var 
topicExists 
= 
_repo #
.# $

Validation$ .
.. /
TopicExists/ :
(: ;
topicId; B
)B C
;C D
if 
( 
topicExists 
) 
{ 
return 
_repo 
. 
Courses $
.$ %
GetTopicById% 1
(1 2
courseId2 :
,: ;
topicId; B
,B C
userIdC I
)I J
;J K
} 
throw 
new 
ArgumentException '
(' (
$str( 4
)4 5
;5 6
} 	
public 

Dictionary 
< 
string  
,  !
string! '
>' (
CreateTopic) 4
(4 5
Topic5 :
topic; @
)@ A
{ 	
if 
( 
topic 
is 
null 
) 
throw $
new% (!
ArgumentNullException) >
(> ?
nameof? E
(E F
topicF K
)K L
)L M
;M N
var 

validation 
= 
_repo "
." #

Validation# -
.- .
ValidateTopic. ;
(; <
topic< A
)A B
;B C
if 
( 

validation 
. 
ContainsKey &
(& '
$str' 0
)0 1
&&2 4
!5 6

validation6 @
.@ A
ContainsKeyA L
(L M
$strM U
)U V
)V W
{ 
SetUpTopicDetails !
(! "
topic" '
)' (
;( )
_repo 
. 
Courses 
. 
CreateTopic )
() *
topic* /
)/ 0
;0 1
_repo   
.   
Complete   
(   
)    
;    !
}!! 
return"" 

validation"" 
;"" 
}## 	
public$$ 

Dictionary$$ 
<$$ 
string$$  
,$$  !
string$$! '
>$$' (
UpdateTopic$$) 4
($$4 5
Topic$$5 :
topic$$; @
)$$@ A
{%% 	
if&& 
(&& 
topic&& 
is&& 
null&& 
)&& 
throw&& $
new&&% (!
ArgumentNullException&&) >
(&&> ?
nameof&&? E
(&&E F
topic&&F K
)&&K L
)&&L M
;&&M N
var'' 

validation'' 
='' 
_repo'' "
.''" #

Validation''# -
.''- .
ValidateTopic''. ;
(''; <
topic''< A
)''A B
;''B C
if(( 
((( 

validation(( 
.(( 
ContainsKey(( &
(((& '
$str((' 0
)((0 1
&&((2 4

validation((5 ?
.((? @
ContainsKey((@ K
(((K L
$str((L T
)((T U
)((U V
{)) 
var** 
dbTopic** 
=** 
_repo** #
.**# $
Courses**$ +
.**+ ,
GetTopicById**, 8
(**8 9
topic**9 >
.**> ?
CourseId**? G
,**G H
topic**H M
.**M N
TopicId**N U
)**U V
;**V W
SetUpTopicDetails++ !
(++! "
topic++" '
,++' (
dbTopic++) 0
)++0 1
;++1 2
_repo,, 
.,, 
Courses,, 
.,, 
UpdateTopic,, )
(,,) *
dbTopic,,* 1
),,1 2
;,,2 3
_repo-- 
.-- 
Complete-- 
(-- 
)--  
;--  !
}.. 
return// 

validation// 
;// 
}00 	
public11 
bool11 
DisableTopic11  
(11  !
int11! $
courseId11% -
,11- .
int11. 1
topicId112 9
,119 :
int11; >
currentUserId11? L
)11L M
{22 	
var33 
topicExists33 
=33 
_repo33 #
.33# $

Validation33$ .
.33. /
TopicExists33/ :
(33: ;
topicId33; B
,33B C
courseId33C K
)33K L
;33L M
if44 
(44 
topicExists44 
)44 
{55 
var66 
dbTopic66 
=66 
_repo66 #
.66# $
Courses66$ +
.66+ ,
GetTopicById66, 8
(668 9
courseId669 A
,66A B
topicId66B I
)66I J
;66J K
disable77 
(77 
currentUserId77 %
,77% &
dbTopic77& -
)77- .
;77. /
_repo88 
.88 
Complete88 
(88 
)88  
;88  !
}99 
return:: 
topicExists:: 
;:: 
};; 	
public<< 

Dictionary<< 
<<< 
string<<  
,<<  !
string<<! '
><<' (
MarkAttendance<<) 7
(<<7 8

Attendance<<8 B

attendance<<C M
)<<M N
{== 	
var>> 

validation>> 
=>> 
_repo>> "
.>>" #

Validation>># -
.>>- .
ValidateAttendance>>. @
(>>@ A

attendance>>A K
)>>K L
;>>L M
if?? 
(?? 

validation?? 
.?? 
ContainsKey?? &
(??& '
$str??' 0
)??0 1
&&??2 4
!??5 6

validation??6 @
.??@ A
ContainsKey??A L
(??L M
$str??M U
)??U V
)??V W
{@@ 
_repoAA 
.AA 
CoursesAA 
.AA 
MarkAttendanceAA ,
(AA, -

attendanceAA- 7
)AA7 8
;AA8 9
}BB 
returnCC 

validationCC 
;CC 
}DD 	
}EE 
}FF ²
zC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\DepartmentServices\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
DepartmentService *
{ 
private 
void "
SetUpDepartmentDetails +
(+ ,

Department, 6

department7 A
)A B
{ 	

department		 
.		 

isDisabled		 !
=		" #
false		$ )
;		) *

department

 
.

 
	CreatedOn

  
=

! "
DateTime

# +
.

+ ,
Now

, /
;

/ 0
} 	
private 
void "
SetUpDepartmentDetails +
(+ ,

Department, 6

department7 A
,A B

DepartmentB L
dbDepartmentM Y
)Y Z
{ 	
dbDepartment 
. 
Name 
= 

department  *
.* +
Name+ /
;/ 0

department 
. 
	UpdatedOn  
=! "
DateTime# +
.+ ,
Now, /
;/ 0
} 	
private 
void 
disable 
( 
int  
currentUserId! .
,. /

Department/ 9
dbDepartment: F
)F G
{ 	
dbDepartment 
. 

isDisabled #
=$ %
true& *
;* +
dbDepartment 
. 
	UpdatedBy "
=# $
currentUserId% 2
;2 3
dbDepartment 
. 
	UpdatedOn "
=# $
DateTime% -
.- .
Now. 1
;1 2
} 	
} 
} 4
yC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\DepartmentServices\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
DepartmentService *
{ 
private		 
readonly		 

UnitOfWork		 #
_repo		$ )
;		) *
public 
DepartmentService  
(  !

UnitOfWork! +
repo, 0
)0 1
{ 	
_repo 
= 
repo 
; 
} 	
public 
IEnumerable 
< 

Department %
>% &
GetDepartments' 5
(5 6
)6 7
{ 	
return 
_repo 
. 
Departments $
.$ %
GetDepartments% 3
(3 4
)4 5
;5 6
} 	
public 

Department 
GetDepartmentById +
(+ ,
int, /
departmentId0 <
)< =
{ 	
var 
departmentExists  
=! "
_repo# (
.( )

Validation) 3
.3 4
DepartmentExists4 D
(D E
departmentIdE Q
)Q R
;R S
if 
( 
departmentExists  
)  !
{ 
var 
result 
= 
_repo "
." #
Departments# .
.. /
GetDepartmentById/ @
(@ A
departmentIdA M
)M N
;N O
return 
result 
; 
} 
throw 
new 
ArgumentException '
(' (
$str( 4
)4 5
;5 6
} 	
public   

Dictionary   
<   
string    
,    !
string  " (
>  ( )
CreateDepartment  * :
(  : ;

Department  ; E

department  F P
)  P Q
{!! 	
if"" 
("" 

department"" 
is"" 
null"" "
)""" #
throw""$ )
new""* -!
ArgumentNullException"". C
(""C D
nameof""D J
(""J K

department""K U
)""U V
)""V W
;""W X
var## 

validation## 
=## 
_repo## "
.##" #

Validation### -
.##- .
ValidateDepartment##. @
(##@ A

department##A K
)##K L
;##L M
if$$ 
($$ 

validation$$ 
.$$ 
ContainsKey$$ &
($$& '
$str$$' 0
)$$0 1
&&$$2 4
!$$5 6

validation$$6 @
.$$@ A
ContainsKey$$A L
($$L M
$str$$M U
)$$U V
)$$V W
{%% "
SetUpDepartmentDetails&& &
(&&& '

department&&' 1
)&&1 2
;&&2 3
_repo'' 
.'' 
Departments'' !
.''! "
CreateDepartment''" 2
(''2 3

department''3 =
)''= >
;''> ?
_repo(( 
.(( 
Complete(( 
((( 
)((  
;((  !
})) 
return** 

validation** 
;** 
}++ 	
public-- 

Dictionary-- 
<-- 
string--  
,--  !
string--" (
>--( )
UpdateDepartment--* :
(--: ;

Department--; E

department--F P
)--P Q
{.. 	
if// 
(// 

department// 
is// 
null// "
)//" #
throw//$ )
new//* -!
ArgumentNullException//. C
(//C D
nameof//D J
(//J K

department//K U
)//U V
)//V W
;//W X
var00 

validation00 
=00 
_repo00 "
.00" #

Validation00# -
.00- .
ValidateDepartment00. @
(00@ A

department00A K
)00K L
;00L M
if11 
(11 

validation11 
.11 
ContainsKey11 &
(11& '
$str11' 0
)110 1
&&112 4

validation115 ?
.11? @
ContainsKey11@ K
(11K L
$str11L T
)11T U
)11U V
{22 
var33 
dbDeparment33 
=33  !
_repo33" '
.33' (
Departments33( 3
.333 4
GetDepartmentById334 E
(33E F

department33F P
.33P Q
Id33Q S
)33S T
;33T U"
SetUpDepartmentDetails44 &
(44& '

department44' 1
,441 2
dbDeparment443 >
)44> ?
;44? @
_repo55 
.55 
Departments55 !
.55! "
UpdateDepartment55" 2
(552 3
dbDeparment553 >
)55> ?
;55? @
_repo66 
.66 
Complete66 
(66 
)66  
;66  !
}77 
return88 

validation88 
;88 
}99 	
public;; 
bool;; 
DisableDepartment;; %
(;;% &
int;;& )
departmentId;;* 6
,;;6 7
int;;8 ;
currentUserId;;< I
);;I J
{<< 	
var== 
departmentExists==  
===! "
_repo==# (
.==( )

Validation==) 3
.==3 4
DepartmentExists==4 D
(==D E
departmentId==E Q
)==Q R
;==R S
if>> 
(>> 
departmentExists>>  
)>>  !
{?? 
var@@ 
dbDeparment@@ 
=@@  !
_repo@@" '
.@@' (
Departments@@( 3
.@@3 4
GetDepartmentById@@4 E
(@@E F
departmentId@@F R
)@@R S
;@@S T
disableAA 
(AA 
currentUserIdAA %
,AA% &
dbDeparmentAA& 1
)AA1 2
;AA2 3
_repoBB 
.BB 
DepartmentsBB !
.BB! "
UpdateDepartmentBB" 2
(BB2 3
dbDeparmentBB3 >
)BB> ?
;BB? @
_repoCC 
.CC 
CompleteCC 
(CC 
)CC  
;CC  !
}DD 
returnEE 
departmentExistsEE #
;EE# $
}FF 	
}GG 
}HH Ã
C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\FeedBackServices\CourseFeedback\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
FeedbackService (
{ 
private 
void &
SetUpCourseFeedbackDetails /
(/ 0
CourseFeedback0 >
courseFeedback? M
)M N
{ 	
courseFeedback		 
.		 
	CreatedOn		 $
=		% &
DateTime		' /
.		/ 0
Now		0 3
;		3 4
}

 	
private 
void &
SetUpCourseFeedbackDetails /
(/ 0
CourseFeedback0 >
courseFeedback? M
,M N
CourseFeedbackN \
dbCourseFeedback] m
)m n
{ 	
dbCourseFeedback 
. 
Feedback %
=& '
courseFeedback( 6
.6 7
Feedback7 ?
;? @
dbCourseFeedback 
. 
Rating #
=$ %
courseFeedback& 4
.4 5
Rating5 ;
;; <
dbCourseFeedback 
. 
	UpdatedOn &
=' (
DateTime) 1
.1 2
Now2 5
;5 6
} 	
} 
} ·+
C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\FeedBackServices\CourseFeedback\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
FeedbackService (
{ 
private		 
readonly		 

UnitOfWork		 #
_repo		$ )
;		) *
public 
FeedbackService 
( 

UnitOfWork )
repo* .
). /
{ 	
_repo 
= 
repo 
; 
} 	
public 
CourseFeedback 3
'GetCourseFeedbackByCourseIdAndTraineeId E
(E F
intF I
courseIdJ R
,R S
intT W
	traineeIdX a
)a b
{ 	
var 
courseExists 
= 
_repo $
.$ %

Validation% /
./ 0
CourseExists0 <
(< =
courseId= E
)E F
;F G
var 
traineeExists 
= 
_repo  %
.% &

Validation& 0
.0 1

UserExists1 ;
(; <
	traineeId< E
)E F
;F G
if 
( 
courseExists 
&& 
traineeExists ,
), -
{ 
return 
_repo 
. 
	Feedbacks &
.& '3
'GetCourseFeedbackByCourseIdAndTraineeId' N
(N O
courseIdO W
,W X
	traineeIdX a
)a b
;b c
} 
throw 
new 
ArgumentException '
(' (
$str( 6
)6 7
;7 8
} 	
public 

Dictionary 
< 
string  
,  !
string! '
>' ( 
CreateCourseFeedback) =
(= >
CourseFeedback> L
courseFeedbackM [
)[ \
{ 	
if 
( 
courseFeedback 
is !
null" &
)& '
throw( -
new. 1!
ArgumentNullException2 G
(G H
nameofH N
(N O
courseFeedbackO ]
)] ^
)^ _
;_ `
var 

validation 
= 
_repo "
." #

Validation# -
.- ."
ValidateCourseFeedback. D
(D E
courseFeedbackE S
)S T
;T U
if 
( 

validation 
. 
ContainsKey &
(& '
$str' 0
)0 1
&&2 4
!5 6

validation6 @
.@ A
ContainsKeyA L
(L M
$strM U
)U V
)V W
{   &
SetUpCourseFeedbackDetails!! *
(!!* +
courseFeedback!!+ 9
)!!9 :
;!!: ;
_repo"" 
."" 
	Feedbacks"" 
.""   
CreateCourseFeedback""  4
(""4 5
courseFeedback""5 C
)""C D
;""D E
_repo## 
.## 
Complete## 
(## 
)##  
;##  !
}$$ 
return%% 

validation%% 
;%% 
}&& 	
public'' 

Dictionary'' 
<'' 
string''  
,''  !
string''! '
>''' ( 
UpdateCourseFeedback'') =
(''= >
CourseFeedback''> L
courseFeedback''M [
)''[ \
{(( 	
if)) 
()) 
courseFeedback)) 
is))  
null))! %
)))% &
throw))' ,
new))- 0!
ArgumentNullException))1 F
())F G
nameof))G M
())M N
courseFeedback))N \
)))\ ]
)))] ^
;))^ _
var** 

validation** 
=** 
_repo** "
.**" #

Validation**# -
.**- ."
ValidateCourseFeedback**. D
(**D E
courseFeedback**E S
)**S T
;**T U
if++ 
(++ 

validation++ 
.++ 
ContainsKey++ &
(++& '
$str++' 0
)++0 1
&&++2 4

validation++5 ?
.++? @
ContainsKey++@ K
(++K L
$str++L T
)++T U
)++U V
{,, 
var-- 
dbCourseFeedback-- $
=--% &
_repo--' ,
.--, -
	Feedbacks--- 6
.--6 73
'GetCourseFeedbackByCourseIdAndTraineeId--7 ^
(--^ _
courseFeedback--_ m
.--m n
CourseId--n v
,--v w
courseFeedback	--w 
.
-- 
	TraineeId
-- 
)
-- 
;
-- &
SetUpCourseFeedbackDetails.. *
(..* +
courseFeedback..+ 9
,..9 :
dbCourseFeedback..; K
)..K L
;..L M
_repo// 
.// 
	Feedbacks// 
.//   
UpdateCourseFeedback//  4
(//4 5
dbCourseFeedback//5 E
)//E F
;//F G
_repo00 
.00 
Complete00 
(00 
)00  
;00  !
}11 
return22 

validation22 
;22 
}33 	
}44 
}55 ²

C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\FeedBackServices\TraineeFeedback\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
FeedbackService (
{ 
private 
void '
SetUpTraineeFeedbackDetails 0
(0 1
TraineeFeedback1 @
traineeFeedbackA P
)P Q
{ 	
traineeFeedback		 
.		 
	CreatedOn		 %
=		& '
DateTime		( 0
.		0 1
Now		1 4
;		4 5
}

 	
private 
void '
SetUpTraineeFeedbackDetails 0
(0 1
TraineeFeedback1 @
traineeFeedbackA P
,P Q
TraineeFeedbackQ `
dbTraineeFeedbacka r
)r s
{ 	
dbTraineeFeedback 
. 
Feedback &
=' (
traineeFeedback) 8
.8 9
Feedback9 A
;A B
dbTraineeFeedback 
. 
	UpdatedOn '
=( )
DateTime* 2
.2 3
Now3 6
;6 7
} 	
} 
} ¥0
C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\FeedBackServices\TraineeFeedback\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
FeedbackService (
{ 
public		 
TraineeFeedback		 =
1GetTraineeFeedbackByCourseIdTrainerIdAndTraineeId		 P
(		P Q
int		Q T
courseId		U ]
,		] ^
int		_ b
	traineeId		c l
,		l m
int		n q
	trainerId		r {
)		{ |
{

 	
var 
courseExists 
= 
_repo $
.$ %

Validation% /
./ 0
CourseExists0 <
(< =
courseId= E
)E F
;F G
var 
traineeExists 
= 
_repo  %
.% &

Validation& 0
.0 1

UserExists1 ;
(; <
	traineeId< E
)E F
;F G
var 
trainerExists 
= 
_repo  %
.% &

Validation& 0
.0 1

UserExists1 ;
(; <
	trainerId< E
)E F
;F G
if 
( 
courseExists 
&& 
traineeExists  -
&&. 0
trainerExists1 >
)> ?
{ 
var !
traineeFeedbackExists )
=* +
_repo, 1
.1 2

Validation2 <
.< =!
TraineeFeedbackExists= R
(R S
courseIdS [
,[ \
	traineeId] f
,f g
	trainerIdh q
)q r
;r s
if 
( !
traineeFeedbackExists )
)) *
{ 
return 
_repo  
.  !
	Feedbacks! *
.* +=
1GetTraineeFeedbackByCourseIdTrainerIdAndTraineeId+ \
(\ ]
courseId] e
,e f
	traineeIdf o
,o p
	trainerIdp y
)y z
;z {
} 
} 
throw 
new 
ArgumentException '
(' (
$str( 4
)4 5
;5 6
} 	
public 

Dictionary 
< 
string  
,  !
string" (
>( )!
CreateTraineeFeedback* ?
(? @
TraineeFeedback@ O
traineeFeedbackP _
)_ `
{ 	
if 
( 
traineeFeedback 
is  "
null# '
)' (
throw) .
new/ 2!
ArgumentNullException3 H
(H I
nameofI O
(O P
traineeFeedbackP _
)_ `
)` a
;a b
var 

validation 
= 
_repo "
." #

Validation# -
.- .#
ValidateTraineeFeedback. E
(E F
traineeFeedbackF U
)U V
;V W
if 
( 

validation 
. 
ContainsKey &
(& '
$str' 0
)0 1
&&2 4
!5 6

validation6 @
.@ A
ContainsKeyA L
(L M
$strM U
)U V
)V W
{ '
SetUpTraineeFeedbackDetails +
(+ ,
traineeFeedback, ;
); <
;< =
_repo 
. 
	Feedbacks 
.  !
CreateTraineeFeedback  5
(5 6
traineeFeedback6 E
)E F
;F G
_repo   
.   
Complete   
(   
)    
;    !
}!! 
return"" 

validation"" 
;"" 
}## 	
public$$ 

Dictionary$$ 
<$$ 
string$$  
,$$  !
string$$" (
>$$( )!
UpdateTraineeFeedback$$* ?
($$? @
TraineeFeedback$$@ O
traineeFeedback$$P _
)$$_ `
{%% 	
if&& 
(&& 
traineeFeedback&& 
is&&  "
null&&# '
)&&' (
throw&&) .
new&&/ 2!
ArgumentNullException&&3 H
(&&H I
nameof&&I O
(&&O P
traineeFeedback&&P _
)&&_ `
)&&` a
;&&a b
var'' 

validation'' 
='' 
_repo'' "
.''" #

Validation''# -
.''- .#
ValidateTraineeFeedback''. E
(''E F
traineeFeedback''F U
)''U V
;''V W
if(( 
((( 

validation(( 
.(( 
ContainsKey(( &
(((& '
$str((' 0
)((0 1
&&((2 4

validation((5 ?
.((? @
ContainsKey((@ K
(((K L
$str((L T
)((T U
)((U V
{)) 
var** 
dbTraineeFeedback** %
=**& '
_repo**( -
.**- .
	Feedbacks**. 7
.**7 8=
1GetTraineeFeedbackByCourseIdTrainerIdAndTraineeId**8 i
(**i j
traineeFeedback**j y
.**y z
CourseId	**z 
,
** 
traineeFeedback
** 
.
** 
	TraineeId
** 
,
** 
traineeFeedback
** ¬
.
**¬ ­
	TrainerId
**­ ¶
)
**¶ ·
;
**· ¸'
SetUpTraineeFeedbackDetails++ +
(+++ ,
traineeFeedback++, ;
,++; <
dbTraineeFeedback++= N
)++N O
;++O P
_repo,, 
.,, 
	Feedbacks,, 
.,,  !
UpdateTraineeFeedback,,  5
(,,5 6
dbTraineeFeedback,,6 G
),,G H
;,,H I
_repo-- 
.-- 
Complete-- 
(-- 
)--  
;--  !
}.. 
return// 

validation// 
;// 
}00 	
}11 
}22 ½
zC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\ReviewServices\Mom\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
ReviewService &
{ 
private 
void 
SetUpMomDetails $
($ %
MOM% (
mom) ,
), -
{ 	
mom		 
.		 
	CreatedOn		 
=		 
DateTime		 $
.		$ %
Now		% (
;		( )
}

 	
private 
void 
SetUpMomDetails $
($ %
MOM% (
mom) ,
,, -
MOM. 1
dbMom2 7
)7 8
{ 	
dbMom 
. 
Agenda 
= 
mom 
. 
Agenda %
;% &
dbMom 
. 
PurposeOfMeeting "
=# $
mom% (
.( )
PurposeOfMeeting) 9
;9 :
dbMom 
. 
MeetingNotes 
=  
mom! $
.$ %
MeetingNotes% 1
;1 2
dbMom 
. 
	UpdatedOn 
= 
DateTime &
.& '
Now' *
;* +
} 	
} 
} 2
yC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\ReviewServices\Mom\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
ReviewService &
{ 
private		 
readonly		 

UnitOfWork		 #
_repo		$ )
;		) *
public 
ReviewService 
( 

UnitOfWork '
repo( ,
), -
{ 	
_repo 
= 
repo 
; 
} 	
public 
IEnumerable 
< 
MOM 
>  
GetListOfMomByUserId  4
(4 5
int5 8
userId9 ?
)? @
{ 	
var 

userExists 
= 
_repo "
." #

Validation# -
.- .

UserExists. 8
(8 9
userId9 ?
)? @
;@ A
if 
( 

userExists 
) 
return !
_repo" '
.' (
Reviews( /
./ 0 
GetListOfMomByUserId0 D
(D E
userIdE K
)K L
;L M
else 
throw 
new 
ArgumentException ,
(, -
$str- 9
)9 :
;: ;
} 	
public 
MOM (
GetMomByReviewIdAndTraineeId /
(/ 0
int0 3
reviewId4 <
,< =
int= @
	traineeIdA J
)J K
{ 	
var 
reviewExists 
= 
_repo $
.$ %

Validation% /
./ 0
ReviewExists0 <
(< =
reviewId= E
)E F
;F G
var 
traineeExists 
= 
_repo  %
.% &

Validation& 0
.0 1

UserExists1 ;
(; <
	traineeId< E
)E F
;F G
if 
( 
reviewExists 
&& 
traineeExists ,
), -
{ 
var 
	momExists 
= 
_repo  %
.% &

Validation& 0
.0 1
	MOMExists1 :
(: ;
reviewId; C
,C D
	traineeIdD M
)M N
;N O
if 
( 
	momExists 
) 
{ 
return   
_repo    
.    !
Reviews  ! (
.  ( )(
GetMomByReviewIdAndTraineeId  ) E
(  E F
reviewId  F N
,  N O
	traineeId  O X
)  X Y
;  Y Z
;  Z [
}!! 
}"" 
throw## 
new## 
ArgumentException## '
(##' (
$str##( 6
)##6 7
;##7 8
}$$ 	
public%% 

Dictionary%% 
<%% 
string%%  
,%%  !
string%%! '
>%%' (
	CreateMom%%) 2
(%%2 3
MOM%%3 6
mom%%7 :
)%%: ;
{&& 	
if'' 
('' 
mom'' 
is'' 
null'' 
)'' 
throw'' !
new''" %!
ArgumentNullException''& ;
(''; <
nameof''< B
(''B C
mom''C F
)''F G
)''G H
;''H I
var(( 

validation(( 
=(( 
_repo(( "
.((" #

Validation((# -
.((- .
ValidateMOM((. 9
(((9 :
mom((: =
)((= >
;((> ?
if)) 
()) 

validation)) 
.)) 
ContainsKey)) &
())& '
$str))' 0
)))0 1
&&))2 4
!))5 6

validation))6 @
.))@ A
ContainsKey))A L
())L M
$str))M U
)))U V
)))V W
{** 
SetUpMomDetails++ 
(++  
mom++  #
)++# $
;++$ %
_repo,, 
.,, 
Reviews,, 
.,, 
	CreateMom,, '
(,,' (
mom,,( +
),,+ ,
;,,, -
_repo-- 
.-- 
Complete-- 
(-- 
)--  
;--  !
}.. 
return// 

validation// 
;// 
}00 	
public11 

Dictionary11 
<11 
string11  
,11  !
string11! '
>11' (
	UpdateMom11) 2
(112 3
MOM113 6
mom117 :
)11: ;
{22 	
if33 
(33 
mom33 
is33 
null33 
)33 
throw33 !
new33" %!
ArgumentNullException33& ;
(33; <
nameof33< B
(33B C
mom33C F
)33F G
)33G H
;33H I
var44 

validation44 
=44 
_repo44 "
.44" #

Validation44# -
.44- .
ValidateMOM44. 9
(449 :
mom44: =
)44= >
;44> ?
if55 
(55 

validation55 
.55 
ContainsKey55 &
(55& '
$str55' 0
)550 1
&&552 4

validation555 ?
.55? @
ContainsKey55@ K
(55K L
$str55L T
)55T U
)55U V
{66 
var77 
dbMom77 
=77 
_repo77 !
.77! "
Reviews77" )
.77) *(
GetMomByReviewIdAndTraineeId77* F
(77F G
mom77G J
.77J K
ReviewId77K S
,77S T
mom77T W
.77W X
	TraineeId77X a
)77a b
;77b c
SetUpMomDetails88 
(88  
mom88  #
,88# $
dbMom88% *
)88* +
;88+ ,
_repo99 
.99 
Reviews99 
.99 
	UpdateMom99 '
(99' (
dbMom99( -
)99- .
;99. /
_repo:: 
.:: 
Complete:: 
(:: 
)::  
;::  !
};; 
return<< 

validation<< 
;<< 
}== 	
}>> 
}?? 
}C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\ReviewServices\Review\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
ReviewService &
{ 
private 
void 
SetUpReviewDetails '
(' (
Review( .
review/ 5
)5 6
{ 	
review		 
.		 
	CreatedOn		 
=		 
DateTime		 '
.		' (
Now		( +
;		+ ,
}

 	
private 
void 
SetUpReviewDetails '
(' (
Review( .
review/ 5
,5 6
Review7 =
dbReview> F
)F G
{ 	
dbReview 
. 
Mode 
= 
review "
." #
Mode# '
;' (
dbReview 
. 

ReviewerId 
=  !
review" (
.( )

ReviewerId) 3
;3 4
dbReview 
. 
	TraineeId 
=  
review! '
.' (
	TraineeId( 1
;1 2
dbReview 
. 

ReviewDate 
=  !
review" (
.( )

ReviewDate) 3
;3 4
dbReview 
. 

ReviewTime 
=  !
review" (
.( )

ReviewTime) 3
;3 4
dbReview 
. 
StatusId 
= 
review  &
.& '
StatusId' /
;/ 0
dbReview 
. 
	UpdatedOn 
=  
DateTime! )
.) *
Now* -
;- .
} 	
} 
} Ã*
|C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\ReviewServices\Review\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
ReviewService &
{		 
public

 
IEnumerable

 
<

 
Review

 !
>

! "
GetReviewByStatusId

# 6
(

6 7
int

7 :
statusId

; C
)

C D
{ 	
var 
reviewStatusExists "
=# $
_repo% *
.* +

Validation+ 5
.5 6
ReviewStatusExists6 H
(H I
statusIdI Q
)Q R
;R S
if 
( 
reviewStatusExists "
)" #
return$ *
_repo+ 0
.0 1
Reviews1 8
.8 9
GetReviewByStatusId9 L
(L M
statusIdM U
)U V
;V W
else 
throw 
new 
ArgumentException ,
(, -
$str- 9
)9 :
;: ;
} 	
public 
Review 
GetReviewById #
(# $
int$ '
reviewId( 0
)0 1
{ 	
var 
reviewExists 
= 
_repo $
.$ %

Validation% /
./ 0
ReviewExists0 <
(< =
reviewId= E
)E F
;F G
if 
( 
reviewExists 
) 
{ 
var 
result 
= 
_repo "
." #
Reviews# *
.* +
GetReviewById+ 8
(8 9
reviewId9 A
)A B
;B C
return 
result 
; 
} 
throw 
new 
ArgumentException '
(' (
$str( 4
)4 5
;5 6
} 	
public 

Dictionary 
< 
string  
,  !
string" (
>( )
CreateReview* 6
(6 7
Review7 =
review> D
)D E
{ 	
if 
( 
review 
is 
null 
) 
throw  %
new& )!
ArgumentNullException* ?
(? @
nameof@ F
(F G
reviewG M
)M N
)N O
;O P
var 

validation 
= 
_repo "
." #

Validation# -
.- .
ValidateReview. <
(< =
review= C
)C D
;D E
if 
( 

validation 
. 
ContainsKey &
(& '
$str' 0
)0 1
&&2 4
!5 6

validation6 @
.@ A
ContainsKeyA L
(L M
$strM U
)U V
)V W
{ 
SetUpReviewDetails   "
(  " #
review  # )
)  ) *
;  * +
_repo!! 
.!! 
Reviews!! 
.!! 
CreateReview!! *
(!!* +
review!!+ 1
)!!1 2
;!!2 3
_repo"" 
."" 
Complete"" 
("" 
)""  
;""  !
}## 
return$$ 

validation$$ 
;$$ 
}%% 	
public&& 

Dictionary&& 
<&& 
string&&  
,&&  !
string&&" (
>&&( )
UpdateReview&&* 6
(&&6 7
Review&&7 =
review&&> D
)&&D E
{'' 	
if(( 
((( 
review(( 
is(( 
null(( 
)(( 
throw((  %
new((& )!
ArgumentNullException((* ?
(((? @
nameof((@ F
(((F G
review((G M
)((M N
)((N O
;((O P
var)) 

validation)) 
=)) 
_repo)) "
.))" #

Validation))# -
.))- .
ValidateReview)). <
())< =
review))= C
)))C D
;))D E
if** 
(** 

validation** 
.** 
ContainsKey** &
(**& '
$str**' 0
)**0 1
&&**2 4

validation**5 ?
.**? @
ContainsKey**@ K
(**K L
$str**L T
)**T U
)**U V
{++ 
var,, 
dbReview,, 
=,, 
_repo,, $
.,,$ %
Reviews,,% ,
.,,, -
GetReviewById,,- :
(,,: ;
review,,; A
.,,A B
Id,,B D
),,D E
;,,E F
SetUpReviewDetails-- "
(--" #
review--# )
,--) *
dbReview--+ 3
)--3 4
;--4 5
_repo.. 
... 
Reviews.. 
... 
UpdateReview.. *
(..* +
dbReview..+ 3
)..3 4
;..4 5
_repo// 
.// 
Complete// 
(// 
)//  
;//  !
}00 
return11 

validation11 
;11 
}22 	
}33 
}44 Ý
sC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\RoleServices\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

class 
RoleService 
{ 
private		 
readonly		 

UnitOfWork		 #
_repo		$ )
;		) *
public 
RoleService 
( 

UnitOfWork %
repo& *
)* +
{ 	
_repo 
= 
repo 
; 
} 	
public 
IEnumerable 
< 
Role 
>  
GetRoles! )
() *
)* +
{ 	
return 
_repo 
. 
Roles 
. 
GetRoles '
(' (
)( )
;) *
} 	
} 
} ï
fC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\UnitOfService.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

class 
UnitOfService 
{ 
private 
readonly 

UnitOfWork #
_repo$ )
;) *
public		 
AuthService		 
AuthService		 &
{		' (
get		) ,
;		, -
set		. 1
;		1 2
}		3 4
public

 
UserService

 
UserService

 &
{

' (
get

) ,
;

, -
set

. 1
;

1 2
}

3 4
public 
RoleService 
RoleService &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
ReviewService 
ReviewService *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
FeedbackService 
FeedbackService .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
DepartmentService  
DepartmentService! 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
CourseService 
CourseService *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 

Validation 

Validation $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
UnitOfService 
( 

UnitOfWork '
repo( ,
), -
{ 	
_repo 
= 
repo 
; 
AuthService 
= 
new 
AuthService )
() *
_repo* /
)/ 0
;0 1
UserService 
= 
new 
UserService )
() *
_repo* /
,/ 0
_repo0 5
.5 6
stats6 ;
); <
;< =
RoleService 
= 
new 
RoleService )
() *
_repo* /
)/ 0
;0 1
ReviewService 
= 
new 
ReviewService  -
(- .
_repo. 3
)3 4
;4 5
FeedbackService 
= 
new !
FeedbackService" 1
(1 2
_repo2 7
)7 8
;8 9
DepartmentService 
= 
new  #
DepartmentService$ 5
(5 6
_repo6 ;
); <
;< =
CourseService 
= 
new 
CourseService  -
(- .
_repo. 3
)3 4
;4 5

Validation 
= 
_repo 
. 

Validation )
;) *
} 	
public 
void 
Complete 
( 
) 
{   	
_repo!! 
.!! 
Complete!! 
(!! 
)!! 
;!! 
}"" 	
}## 
}$$ 8
C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\UserServices\DashboardService\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
UserService $
{ 
private 

Dictionary 
< 
string  
,  !
string! '
>' ( 
prepareHeadDashboard) =
(= >
int> A
userIdB H
)H I
{ 	
var 
result 
= 
_stats 
.  
userDetails  +
(+ ,
userId, 2
)2 3
;3 4
result 
. 
Add 
( 
$str *
,* +
_stats, 2
.2 3
GetCoordinatorCount3 F
(F G
)G H
.H I
ToStringI Q
(Q R
)R S
)S T
;T U,
 AddTraineeTrainerDepartmentCount		 ,
(		, -
result		- 3
)		3 4
;		4 5
return

 
result

 
;

 
} 	
private 
void ,
 AddTraineeTrainerDepartmentCount 5
(5 6

Dictionary6 @
<@ A
stringA G
,G H
stringI O
>O P
resultQ W
)W X
{ 	
result 
. 
Add 
( 
$str &
,& '
_stats( .
.. /
GetTraineesCount/ ?
(? @
)@ A
.A B
ToStringB J
(J K
)K L
)L M
;M N
result 
. 
Add 
( 
$str &
,& '
_stats( .
.. /
GetTrainersCount/ ?
(? @
)@ A
.A B
ToStringB J
(J K
)K L
)L M
;M N
result 
. 
Add 
( 
$str (
,( )
_stats* 0
.0 1
GetDepartmentsCount1 D
(D E
)E F
.F G
ToStringG O
(O P
)P Q
)Q R
;R S
result 
. 
Add 
( 
$str '
,' (
_stats) /
./ 0
GetReviewersCount0 A
(A B
)B C
.C D
ToStringD L
(L M
)M N
)N O
;O P
} 	
private 

Dictionary 
< 
string !
,! "
string" (
>( )
?) *'
prepareCoordinatorDashboard+ F
(F G
intG J
userIdK Q
)Q R
{ 	
var 
result 
= 
_stats 
.  
userDetails  +
(+ ,
userId, 2
)2 3
;3 4
result 
. 
Add 
( 
$str $
,$ %
_stats% +
.+ ,
GetCourseCount, :
(: ;
userId; A
)A B
.B C
ToStringC K
(K L
)L M
)M N
;N O,
 AddTraineeTrainerDepartmentCount ,
(, -
result- 3
)3 4
;4 5
return 
result 
; 
} 	
private 

Dictionary 
< 
string !
,! "
string" (
>( )#
prepareTraineeDashboard* A
(A B
intB E
userIdF L
)L M
{ 	
var 
result 
= 
_stats 
.  
userDetails  +
(+ ,
userId, 2
)2 3
;3 4
AddCourseStats 
( 
userId !
,! "
result# )
)) *
;* +"
AddUpcomingReviewCount   "
(  " #
userId  # )
,  ) *
result  + 1
)  1 2
;  2 3
return!! 
result!! 
;!! 
}"" 	
private$$ 
void$$ "
AddUpcomingReviewCount$$ +
($$+ ,
int$$, /
userId$$0 6
,$$6 7

Dictionary$$8 B
<$$B C
string$$C I
,$$I J
string$$K Q
>$$Q R
result$$S Y
)$$Y Z
{%% 	
result&& 
.&& 
Add&& 
(&& 
$str&& )
,&&) *
_stats&&+ 1
.&&1 2
GetUpComingReviews&&2 D
(&&D E
userId&&E K
)&&K L
.&&L M
ToString&&M U
(&&U V
)&&V W
)&&W X
;&&X Y
}'' 	
private)) 
void)) 
AddCourseStats)) #
())# $
int))$ '
userId))( .
,)). /

Dictionary))0 :
<)): ;
string)); A
,))A B
string))C I
>))I J
result))K Q
)))Q R
{** 	
var++ 
courseStats++ 
=++ 
_stats++ $
.++$ %
GetCourseStats++% 3
(++3 4
userId++4 :
)++: ;
;++; <
foreach,, 
(,, 
var,, 
item,, 
in,,  
courseStats,,! ,
),,, -
{-- 
result.. 
... 
Add.. 
(.. 
item.. 
...  
Key..  #
,..# $
item..% )
...) *
Value..* /
)../ 0
;..0 1
}// 
}00 	
private22 

Dictionary22 
<22 
string22 !
,22! "
string22" (
>22( )#
prepareTrainerDashboard22* A
(22A B
int22B E
userId22F L
)22L M
{33 	
var44 
result44 
=44 
_stats44 
.44  
userDetails44  +
(44+ ,
userId44, 2
)442 3
;443 4
AddCourseStats55 
(55 
userId55 !
,55! "
result55" (
)55( )
;55) *
return66 
result66 
;66 
}77 	
private88 

Dictionary88 
<88 
string88 !
,88! "
string88" (
>88( )$
prepareReviewerDashboard88* B
(88B C
int88C F
userId88G M
)88M N
{99 	
var:: 
result:: 
=:: 
_stats:: 
.::  
userDetails::  +
(::+ ,
userId::, 2
)::2 3
;::3 4"
AddUpcomingReviewCount;; "
(;;" #
userId;;# )
,;;) *
result;;+ 1
);;1 2
;;;2 3
return<< 
result<< 
;<< 
}== 	
}>> 
}?? û
C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\UserServices\DashboardService\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
UserService $
{ 
public 

Dictionary 
< 
string  
,  !
string! '
>' (
	Dashboard) 2
(2 3
int3 6
userId7 =
)= >
{ 	
var 

userExists 
= 
_repo "
." #

Validation# -
.- .

UserExists. 8
(8 9
userId9 ?
)? @
;@ A
var 
user 
= 
_repo 
. 
Users "
." #
GetUserById# .
(. /
userId/ 5
)5 6
;6 7
var		 
result		 
=		 
new		 

Dictionary		 '
<		' (
string		( .
,		. /
string		/ 5
>		5 6
(		6 7
)		7 8
;		8 9
if

 
(

 

userExists

 
)

 
{ 
switch 
( 
user 
. 
RoleId #
)# $
{ 
case 
$num 
: 
result "
=# $ 
prepareHeadDashboard% 9
(9 :
userId: @
)@ A
;A B
break 
; 
case 
$num 
: 
result "
=# $'
prepareCoordinatorDashboard% @
(@ A
userIdA G
)G H
;H I
break 
; 
case 
$num 
: 
result "
=# $#
prepareTrainerDashboard% <
(< =
userId= C
)C D
;D E
break 
; 
case 
$num 
: 
result "
=# $#
prepareTraineeDashboard% <
(< =
userId= C
)C D
;D E
break 
; 
case 
$num 
: 
result "
=# $$
prepareReviewerDashboard% =
(= >
userId> D
)D E
;E F
break 
; 
} 
return 
result 
; 
} 
throw 
new 
ArgumentException '
(' (
$str( 6
)6 7
;7 8
} 	
} 
} â1
C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\UserServices\UserService\privateMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
UserService $
{ 
private 
void 
GenerateUserId #
(# $
User$ (
user) -
)- .
{		 	
var

 
count

 
=

 
_stats

 
.

  
GetUserCount

  ,
(

, -
)

- .
;

. /
int 
newId 
= 
$num 
; 
if 
( 
count 
> 
$num 
) 
{ 
newId 
= 
_stats 
. 

lastUserId )
() *
)* +
+, -
$num. /
;/ 0
} 
if 
( 
user 
. 
DepartmentId !
!=" $
$num% &
&&' )
user* .
.. /
DepartmentId/ ;
!=< >
null? C
)C D
userE I
.I J

EmployeeIdJ T
=U V
$"W Y
$strY \
{\ ]
user] a
.a b
RoleIdb h
}h i
{i j
userj n
.n o
DepartmentIdo {
}{ |
{| }
newId	} 
}
 
"
 
;
 
else 
user 
. 

EmployeeId  
=! "
$"# %
$str% (
{( )
user) -
.- .
RoleId. 4
}4 5
$str5 6
{6 7
newId7 <
}< =
"= >
;> ?
} 	
private 
void 

SetUpImage 
(  
User  $
user% )
)) *
{ 	
File 
Image 
= 
FileService $
.$ %'
GetBase64HeaderAndByteArray% @
(@ A
userA E
.E F
Base64F L
)L M
;M N
user 
. 
Base64 
= 
Image 
.  
header  &
;& '
user 
. 
Image 
= 
Image 
. 
bytes $
;$ %
} 	
private 
void 
SetUpUserDetails %
(% &
User& *
user+ /
)/ 0
{ 	
user 
. 

isDisabled 
= 
false #
;# $
user 
. 
Password 
= 
HashPassword (
.( )
Sha256) /
(/ 0
user0 4
.4 5
Password5 =
)= >
;> ?
if 
( 
string 
. 
IsNullOrEmpty $
($ %
user% )
.) *

EmployeeId* 4
)4 5
)5 6
GenerateUserId7 E
(E F
userF J
)J K
;K L
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
user& *
.* +
Base64+ 1
)1 2
&&3 5
user6 :
.: ;
Base64; A
.A B
LengthB H
>I J
$numK O
)O P

SetUpImageQ [
([ \
user\ `
)` a
;a b
user 
. 
	CreatedOn 
= 
DateTime %
.% &
Now& )
;) *
}   	
private!! 
void!! 
SetUpUserDetails!! %
(!!% &
User!!& *
user!!+ /
,!!/ 0
User!!1 5
dbUser!!6 <
)!!< =
{"" 	
dbUser## 
.## 

isDisabled## 
=## 
false##  %
;##% &
dbUser$$ 
.$$ 
Password$$ 
=$$ 
HashPassword$$ *
.$$* +
Sha256$$+ 1
($$1 2
user$$2 6
.$$6 7
Password$$7 ?
)$$? @
;$$@ A
dbUser%% 
.%% 
FullName%% 
=%% 
user%% "
.%%" #
FullName%%# +
;%%+ ,
dbUser&& 
.&& 
UserName&& 
=&& 
user&& "
.&&" #
UserName&&# +
;&&+ ,
dbUser'' 
.'' 
Email'' 
='' 
user'' 
.''  
Email''  %
;''% &

SetUpImage(( 
((( 
user(( 
)(( 
;(( 
dbUser)) 
.)) 
Base64)) 
=)) 
user))  
.))  !
Base64))! '
;))' (
dbUser** 
.** 
Image** 
=** 
user** 
.**  
Image**  %
;**% &
dbUser++ 
.++ 
	UpdatedOn++ 
=++ 
DateTime++ '
.++' (
Now++( +
;+++ ,
if,, 
(,, 
user,, 
.,, 
DepartmentId,,  
!=,,! #
$num,,$ %
),,% &
dbUser,,' -
.,,- .
DepartmentId,,. :
=,,; <
user,,= A
.,,A B
DepartmentId,,B N
;,,N O
}-- 	
private// 
void// 
disable// 
(// 
int//  
currentUserId//! .
,//. /
User//0 4
dbUser//5 ;
)//; <
{00 	
dbUser11 
.11 

isDisabled11 
=11 
true11  $
;11$ %
dbUser22 
.22 
	UpdatedBy22 
=22 
currentUserId22 ,
;22, -
dbUser33 
.33 
	UpdatedOn33 
=33 
DateTime33 '
.33' (
Now33( +
;33+ ,
}44 	
}55 
}66 õG
C:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Services\UserServices\UserService\publicMethods.cs
	namespace 	
TMS
 
. 
API 
. 
Services 
{ 
public 

partial 
class 
UserService $
{ 
private		 
readonly		 

UnitOfWork		 #
_repo		$ )
;		) *
private

 
readonly

 

Statistics

 #
_stats

$ *
;

* +
public 
UserService 
( 

UnitOfWork %
repo& *
,* +

Statistics+ 5
stats6 ;
); <
{ 	
_repo 
= 
repo 
; 
_stats 
= 
_repo 
. 
stats  
;  !
} 	
public 
IEnumerable 
< 
User 
>   
GetUsersByDepartment! 5
(5 6
int6 9
departmentId: F
)F G
{ 	
var 
departmentExists  
=! "
_repo# (
.( )

Validation) 3
.3 4
DepartmentExists4 D
(D E
departmentIdE Q
)Q R
;R S
if 
( 
departmentExists  
)  !
return" (
_repo) .
.. /
Users/ 4
.4 5 
GetUsersByDepartment5 I
(I J
departmentIdJ V
)V W
;W X
else 
throw 
new 
ArgumentException ,
(, -
$str- 9
)9 :
;: ;
} 	
public 
IEnumerable 
< 
User 
>  
GetUsersByRole! /
(/ 0
int0 3
roleId4 :
): ;
{ 	
var 

roleExists 
= 
_repo "
." #

Validation# -
.- .

RoleExists. 8
(8 9
roleId9 ?
)? @
;@ A
if 
( 

roleExists 
) 
return "
_repo# (
.( )
Users) .
.. /
GetUsersByRole/ =
(= >
roleId> D
)D E
;E F
else 
throw 
new 
ArgumentException ,
(, -
$str- 9
)9 :
;: ;
} 	
public 
IEnumerable 
< 
User 
>  !
GetUsersByDeptandrole! 6
(6 7
int7 :
departmentId; G
,G H
intI L
roleIdM S
)S T
{ 	
var 
departmentExists  
=! "
_repo# (
.( )

Validation) 3
.3 4
DepartmentExists4 D
(D E
departmentIdE Q
)Q R
;R S
var   

roleExists   
=   
_repo   "
.  " #

Validation  # -
.  - .

RoleExists  . 8
(  8 9
roleId  9 ?
)  ? @
;  @ A
if!! 
(!! 
departmentExists!!  
&&!!! #

roleExists!!$ .
)!!. /
return!!0 6
_repo!!7 <
.!!< =
Users!!= B
.!!B C!
GetUsersByDeptandrole!!C X
(!!X Y
departmentId!!Y e
,!!e f
roleId!!f l
)!!l m
;!!m n
else"" 
throw"" 
new"" 
ArgumentException"" ,
("", -
$str""- ;
)""; <
;""< =
}## 	
public$$ 
User$$ 
GetUserById$$ 
($$  
int$$  #
userId$$$ *
)$$* +
{%% 	
var&& 

userExists&& 
=&& 
_repo&& "
.&&" #

Validation&&# -
.&&- .

UserExists&&. 8
(&&8 9
userId&&9 ?
)&&? @
;&&@ A
if'' 
('' 

userExists'' 
)'' 
{(( 
var)) 
result)) 
=)) 
_repo)) #
.))# $
Users))$ )
.))) *
GetUserById))* 5
())5 6
userId))6 <
)))< =
;))= >
return** 
result** 
;** 
}++ 
throw,, 
new,, 
ArgumentException,, '
(,,' (
$str,,( 4
),,4 5
;,,5 6
}-- 	
public.. 

Dictionary.. 
<.. 
string..  
,..  !
string.." (
>..( )

CreateUser..* 4
(..4 5
User..5 9
user..: >
)..> ?
{// 	
if00 
(00 
user00 
is00 
null00 
)00 
throw00 #
new00$ '!
ArgumentNullException00( =
(00= >
nameof00> D
(00D E
user00E I
)00I J
)00J K
;00K L
var11 

validation11 
=11 
_repo11 "
.11" #

Validation11# -
.11- .
ValidateUser11. :
(11: ;
user11; ?
)11? @
;11@ A
if22 
(22 

validation22 
.22 
ContainsKey22 &
(22& '
$str22' 0
)220 1
&&222 4
!225 6

validation226 @
.22@ A
ContainsKey22A L
(22L M
$str22M U
)22U V
)22V W
{33 
SetUpUserDetails44  
(44  !
user44! %
)44% &
;44& '
_repo55 
.55 
Users55 
.55 

CreateUser55 &
(55& '
user55' +
)55+ ,
;55, -
_repo66 
.66 
Complete66 
(66 
)66  
;66  !
}77 
return88 

validation88 
;88 
}99 	
public:: 

Dictionary:: 
<:: 
string::  
,::  !
string::" (
>::( )

UpdateUser::* 4
(::4 5
User::5 9
user::: >
)::> ?
{;; 	
if<< 
(<< 
user<< 
is<< 
null<< 
)<< 
throw<< #
new<<$ '!
ArgumentNullException<<( =
(<<= >
nameof<<> D
(<<D E
user<<E I
)<<I J
)<<J K
;<<K L
var== 

validation== 
=== 
_repo== "
.==" #

Validation==# -
.==- .
ValidateUser==. :
(==: ;
user==; ?
)==? @
;==@ A
if>> 
(>> 

validation>> 
.>> 
ContainsKey>> &
(>>& '
$str>>' 0
)>>0 1
&&>>2 4

validation>>5 ?
.>>? @
ContainsKey>>@ K
(>>K L
$str>>L T
)>>T U
)>>U V
{?? 
var@@ 
dbUser@@ 
=@@ 
_repo@@ "
.@@" #
Users@@# (
.@@( )
GetUserById@@) 4
(@@4 5
user@@5 9
.@@9 :
Id@@: <
)@@< =
;@@= >
SetUpUserDetailsAA  
(AA  !
userAA! %
,AA% &
dbUserAA' -
)AA- .
;AA. /
_repoBB 
.BB 
UsersBB 
.BB 

UpdateUserBB &
(BB& '
dbUserBB' -
)BB- .
;BB. /
_repoCC 
.CC 
CompleteCC 
(CC 
)CC  
;CC  !
}DD 
returnEE 

validationEE 
;EE 
}FF 	
publicGG 
boolGG 
DisableUserGG 
(GG  
intGG  #
userIdGG$ *
,GG* +
intGG, /
currentUserIdGG0 =
)GG= >
{HH 	
varII 

userExistsII 
=II 
_repoII "
.II" #

ValidationII# -
.II- .

UserExistsII. 8
(II8 9
userIdII9 ?
)II? @
;II@ A
ifJJ 
(JJ 

userExistsJJ 
)JJ 
{KK 
varLL 
dbUserLL 
=LL 
_repoLL "
.LL" #
UsersLL# (
.LL( )
GetUserByIdLL) 4
(LL4 5
userIdLL5 ;
)LL; <
;LL< =
disableMM 
(MM 
currentUserIdMM %
,MM% &
dbUserMM' -
)MM- .
;MM. /
_repoNN 
.NN 
UsersNN 
.NN 

UpdateUserNN &
(NN& '
dbUserNN' -
)NN- .
;NN. /
_repoOO 
.OO 
CompleteOO 
(OO 
)OO  
;OO  !
}PP 
returnQQ 

userExistsQQ 
;QQ 
}RR 	
}SS 
}TT ¹

qC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\UtilityFunctions\ControllerHelper.cs
	namespace 	
TMS
 
. 
API 
. 
UtilityFunctions "
{ 
public 

static 
class 
ControllerHelper (
{ 
public 
static 
int 
GetCurrentUserId *
(* +
HttpContext+ 6
context7 >
)> ?
{		 	
var

 
identity

 
=

 
context

 "
.

" #
User

# '
.

' (
Identity

( 0
as

1 3
ClaimsIdentity

4 B
;

B C
int 
userId 
= 
$num 
; 
if 
( 
identity 
!= 
null  
)  !
{ 
int 
. 
TryParse 
( 
identity %
.% &
	FindFirst& /
(/ 0
$str0 8
)8 9
.9 :
Value: ?
,? @
out@ C
userIdD J
)J K
;K L
} 
return 
userId 
; 
} 	
} 
} í
eC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\UtilityFunctions\File.cs
	namespace 	
TMS
 
. 
API 
{ 
public 

class 
File 
{ 
public 
string 
header 
{ 
get "
;" #
set$ '
;' (
}) *
public 
byte 
[ 
] 
bytes 
{ 
get !
;! "
set# &
;& '
}( )
} 
} É
lC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\UtilityFunctions\FileService.cs
	namespace 	
TMS
 
. 
API 
{ 
public 

static 
partial 
class 
FileService  +
{ 
public 
static 
File '
GetBase64HeaderAndByteArray 6
(6 7
string7 =
base64String> J
)J K
{ 	
String 
[ 
] 

substrings 
=  !
base64String" .
.. /
Split/ 4
(4 5
$char5 8
)8 9
;9 :
string		 
header		 
=		 

substrings		 &
[		& '
$num		' (
]		( )
;		) *
string

 
imgData

 
=

 

substrings

 '
[

' (
$num

( )
]

) *
;

* +
byte 
[ 
] 
bytes 
= 
Convert "
." #
FromBase64String# 3
(3 4
imgData4 ;
); <
;< =
return 
new 
File 
{ 
header $
=% &
header' -
,- .
bytes/ 4
=5 6
bytes7 <
}= >
;> ?
} 	
} 
} 

mC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\UtilityFunctions\HashPassword.cs
	namespace 	
TMS
 
. 
API 
. 
UtilityFunctions "
{ 
public 

static 
class 
HashPassword $
{ 
public 
static 
string 
Sha256 #
(# $
this$ (
string) /
input0 5
)5 6
{		 	
using

 
(

 
var

 
sha

 
=

 
SHA256

 #
.

# $
Create

$ *
(

* +
)

+ ,
)

, -
{ 
var 
bytes 
= 
Encoding $
.$ %
UTF8% )
.) *
GetBytes* 2
(2 3
input3 8
)8 9
;9 :
var 
hash 
= 
sha 
. 
ComputeHash *
(* +
bytes+ 0
)0 1
;1 2
return 
Convert 
. 
ToBase64String -
(- .
hash. 2
)2 3
;3 4
} 
} 	
} 
} Ø	
jC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\UtilityFunctions\TMSLogger.cs
	namespace 	
TMS
 
. 
API 
. 
UtilityFunctions "
{ 
public 

static 
class 
	TMSLogger !
{ 
public 
static 
void "
ServiceInjectionFailed 1
(1 2%
InvalidOperationException2 K
exL N
,N O
ILoggerP W
_loggerX _
,_ `
stringa g
ControllerNameh v
,v w
stringx ~
method	 
)
 
{ 	
_logger 
. 
LogCritical 
(  
$"  "
$str" ?
{? @
ControllerName@ N
}N O
$strO n
{n o
methodo u
}u v
$str	v Ã
"
Ã Ä
)
Ä Å
;
Å Æ
_logger 
. 
LogTrace 
( 
ex 
.  
ToString  (
(( )
)) *
)* +
;+ ,
}		 	
}

 
} ßp
hC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Validations\EntityExists.cs
	namespace 	
TMS
 
. 
API 
{ 
public 

partial 
class 

Validation #
{ 
public		 
bool		 
AttendanceExists		 $
(		$ %
int		% (
courseId		) 1
,		1 2
int		2 5
topicId		6 =
,		= >
int		> A
ownerId		B I
)		I J
{

 	
return 
	dbContext 
. 
Attendances (
.( )
Any) ,
(, -
a- .
=>. 0
a0 1
.1 2
CourseId2 :
==; =
courseId> F
&&G I
aJ K
.K L
TopicIdL S
==T V
topicIdW ^
&&_ a
ab c
.c d
OwnerIdd k
==l n
ownerIdo v
)v w
;w x
} 	
public 
bool 
AssignmentExists $
($ %
int% (
courseId) 1
,1 2
int2 5
topicId6 =
,= >
int> A
ownerIdB I
)I J
{ 	
return 
	dbContext 
. 
Assignments (
.( )
Any) ,
(, -
a- .
=>. 0
a0 1
.1 2
CourseId2 :
==; =
courseId> F
&&G I
aJ K
.K L
TopicIdL S
==T V
topicIdW ^
&&_ a
ab c
.c d
OwnerIdd k
==l n
ownerIdo v
)v w
;w x
} 	
public 
bool 
CourseUserExists $
($ %
int% (
courseId) 1
,1 2
int2 5
userId6 <
,< =
int= @
roleIdA G
)G H
{ 	
return 
	dbContext 
. 
CourseUsers (
.( )
Any) ,
(, -
cu- /
=>/ 1
cu2 4
.4 5
CourseId5 =
==> @
courseIdA I
&&J L
cuM O
.O P
UserIdP V
==W Y
userIdZ `
&&a c
cud f
.f g
RoleIdg m
==n p
roleIdq w
)w x
;x y
} 	
public 
bool 
CourseExists  
(  !
int! $
courseId% -
)- .
{ 	
return 
	dbContext 
. 
Courses $
.$ %
Any% (
(( )
c) *
=>* ,
c- .
.. /
Id/ 1
==2 4
courseId5 =
)= >
;> ?
} 	
public 
bool !
IsCourseNameAvailable )
() *
int* -
courseId. 6
,6 7
int7 :
departmentId; G
,G H
stringH N
nameO S
)S T
{ 	
return 
	dbContext 
. 
Courses $
.$ %
Any% (
(( )
c) *
=>* ,
c, -
.- .
Id. 0
!=1 3
courseId4 <
&&= ?
c@ A
.A B
DepartmentIdB N
==O Q
departmentIdR ^
&&_ a
cb c
.c d
Named h
==h j
namej n
)n o
;o p
} 	
public	 
bool 
IsTopicNameAvailabe (
(( )
int) ,
topicId- 4
,4 5
int5 8
courseId9 A
,A B
stringB H
nameI M
)M N
{ 	
return 
	dbContext 
. 
Topics #
.# $
Any$ '
(' (
c( )
=>) +
c+ ,
., -
TopicId- 4
!=4 6
topicId6 =
&&> @
cA B
.B C
CourseIdC K
==L N
courseIdO W
&&X Z
c[ \
.\ ]
Name] a
==a c
namec g
)g h
;h i
}   	
public"" 
bool"" 
DepartmentExists"" $
(""$ %
int""% (
?""( )
departmentId""* 6
)""6 7
{## 	
return$$ 
	dbContext$$ 
.$$ 
Departments$$ (
.$$( )
Any$$) ,
($$, -
d$$- .
=>$$. 0
d$$0 1
.$$1 2
Id$$2 4
==$$5 7
departmentId$$8 D
)$$D E
;$$E F
}%% 	
public&& 
bool&& 
	MOMExists&& 
(&& 
int&& !
reviewId&&" *
,&&* +
int&&+ .
	traineeId&&/ 8
)&&8 9
{'' 	
return(( 
	dbContext(( 
.(( 
MOMs(( !
.((! "
Any((" %
(((% &
m((& '
=>((' )
m(() *
.((* +
ReviewId((+ 3
==((4 6
reviewId((7 ?
&&((@ B
m((C D
.((D E
	TraineeId((E N
==((O Q
	traineeId((R [
)(([ \
;((\ ]
})) 	
public** 
bool** 
ReviewExists**  
(**  !
int**! $
reviewId**% -
)**. /
{++ 	
return,, 
	dbContext,, 
.,, 
Reviews,, $
.,,$ %
Any,,% (
(,,( )
r,,) *
=>,,* ,
r,,, -
.,,- .
Id,,. 0
==,,0 2
reviewId,,2 :
),,: ;
;,,; <
}-- 	
public.. 
bool.. &
ReviewerAvailabilityExists.. .
(... /
int../ 2
id..3 5
,..5 6
int..6 9

reviewerId..: D
,..D E
DateTime..E M

reviewDate..N X
,..X Y
DateTime..Y a

reviewTime..b l
,..l m
int..m p
statusId..q y
)..y z
{// 	
return00 
	dbContext00 
.00 
Reviews00 $
.00$ %
Any00% (
(00( )
r00) *
=>00* ,
r00, -
.00- .
Id00. 0
!=000 2
id002 4
&&005 7
r008 9
.009 :

ReviewerId00: D
==00D F

reviewerId00F P
&&00Q S
r00T U
.00U V

ReviewDate00V `
==00` b

reviewDate00b l
&&00m o
r00p q
.00q r

ReviewTime00r |
==00| ~

reviewTime	00~ 
&&
00 
statusId
00 
==
00 
$num
00 
)
00 
;
00 
}11 	
public22	 
bool22 %
TraineeAvailabilityExists22 .
(22. /
int22/ 2
id223 5
,225 6
int226 9
	traineeId22: C
,22C D
DateTime22D L

reviewDate22M W
,22W X
DateTime22X `

reviewTime22a k
,22k l
int22l o
statusId22p x
)22x y
{33 	
return44 
	dbContext44 
.44 
Reviews44 $
.44$ %
Any44% (
(44( )
r44) *
=>44* ,
r44, -
.44- .
Id44. 0
!=440 2
id442 4
&&445 7
r448 9
.449 :
	TraineeId44: C
==44C E
	traineeId44E N
&&44O Q
r44R S
.44S T

ReviewDate44T ^
==44^ `

reviewDate44` j
&&44k m
r44n o
.44o p

ReviewTime44p z
==44z |

reviewTime	44| 
&&
44 
statusId
44 
==
44 
$num
44 
)
44 
;
44 
}55 	
public66	 
bool66 
MOMReviewExists66 $
(66$ %
int66% (
reviewId66) 1
,662 3
int663 6
	traineeId667 @
)66@ A
{77 	
return88 
	dbContext88 
.88 
Reviews88 $
.88$ %
Any88% (
(88( )
r88) *
=>88* ,
r88, -
.88- .
Id88. 0
==880 2
reviewId882 :
&&88; =
r88> ?
.88? @
	TraineeId88@ I
==88I K
	traineeId88K T
)88T U
;88U V
}99 	
public:: 
bool:: 
ReviewStatusExists:: &
(::& '
int::' *
statusId::+ 3
)::3 4
{;; 	
return<< 
	dbContext<< 
.<< 
ReviewStatuses<< +
.<<+ ,
Any<<, /
(<</ 0
r<<0 1
=><<1 3
r<<3 4
.<<4 5
Id<<5 7
==<<8 :
statusId<<; C
)<<C D
;<<D E
}== 	
public>> 
bool>> 

RoleExists>> 
(>> 
int>> "
roleId>># )
)>>) *
{?? 	
return@@ 
	dbContext@@ 
.@@ 
Roles@@ "
.@@" #
Any@@# &
(@@& '
r@@' (
=>@@( *
r@@* +
.@@+ ,
Id@@, .
==@@. 0
roleId@@0 6
)@@6 7
;@@7 8
}AA 	
publicBB 
boolBB 
TopicExistsBB 
(BB  
intBB  #
topicIdBB$ +
,BB+ ,
intBB, /
courseIdBB0 8
)BB8 9
{CC 	
returnDD 
	dbContextDD 
.DD 
TopicsDD #
.DD# $
AnyDD$ '
(DD' (
tDD( )
=>DD) +
tDD+ ,
.DD, -
TopicIdDD- 4
==DD4 6
topicIdDD6 =
&&DD> @
tDDA B
.DDB C
CourseIdDDC K
==DDL N
courseIdDDO W
)DDW X
;DDX Y
}EE 	
publicFF 
boolFF 
TopicExistsFF 
(FF  
intFF  #
topicIdFF$ +
)FF+ ,
{GG 	
returnHH 
	dbContextHH 
.HH 
TopicsHH #
.HH# $
AnyHH$ '
(HH' (
tHH( )
=>HH) +
tHH+ ,
.HH, -
TopicIdHH- 4
==HH4 6
topicIdHH6 =
)HH= >
;HH> ?
}II 	
publicJJ 
boolJJ !
TopicValidationExistsJJ )
(JJ) *
intJJ* -
courseIdJJ. 6
,JJ6 7
stringJJ7 =
nameJJ> B
)JJB C
{KK 	
returnLL 
	dbContextLL 
.LL 
TopicsLL #
.LL# $
AnyLL$ '
(LL' (
tLL( )
=>LL) +
tLL+ ,
.LL, -
CourseIdLL- 5
==LL5 7
courseIdLL7 ?
&&LL@ B
tLLC D
.LLD E
NameLLE I
==LLI K
nameLLK O
)LLO P
;LLP Q
}MM 	
publicNN 
boolNN !
TraineeFeedbackExistsNN )
(NN) *
intNN* -
courseIdNN. 6
,NN6 7
intNN7 :
	traineeIdNN; D
,NND E
intNNE H
	trainerIdNNI R
)NNR S
{OO 	
returnPP 
	dbContextPP 
.PP 
TraineeFeedbacksPP -
.PP- .
AnyPP. 1
(PP1 2
tfPP2 4
=>PP4 6
tfPP6 8
.PP8 9
CourseIdPP9 A
==PPA C
courseIdPPC K
&&PPL N
tfPPO Q
.PPQ R
	TraineeIdPPR [
==PP\ ^
	traineeIdPP_ h
&&PPi k
tfPPl n
.PPn o
	TrainerIdPPo x
==PPy {
	trainerId	PP| 
)
PP 
;
PP 
}QQ 	
publicRR 
boolRR  
CourseFeedbackExistsRR (
(RR( )
intRR) ,
courseIdRR- 5
,RR5 6
intRR6 9
	traineeIdRR: C
)RRC D
{SS 	
returnTT 
	dbContextTT 
.TT 
CourseFeedbacksTT ,
.TT, -
AnyTT- 0
(TT0 1
cfTT1 3
=>TT3 5
cfTT5 7
.TT7 8
CourseIdTT8 @
==TT@ B
courseIdTTB J
&&TTK M
cfTTN P
.TTP Q
	TraineeIdTTQ Z
==TT[ ]
	traineeIdTT^ g
)TTg h
;TTh i
}UU 	
publicVV 
boolVV 

UserExistsVV 
(VV 
intVV "
userIdVV# )
)VV) *
{WW 	
returnXX 
	dbContextXX 
.XX 
UsersXX "
.XX" #
AnyXX# &
(XX& '
uXX' (
=>XX( *
uXX* +
.XX+ ,
IdXX, .
==XX. 0
userIdXX0 6
)XX6 7
;XX7 8
}YY 	
publicZZ 
boolZZ 

UserExistsZZ 
(ZZ 
intZZ "
userIdZZ# )
,ZZ) *
intZZ* -
roleIdZZ. 4
)ZZ4 5
{[[ 	
return\\ 
	dbContext\\ 
.\\ 
Users\\ "
.\\" #
Any\\# &
(\\& '
u\\' (
=>\\( *
u\\* +
.\\+ ,
Id\\, .
==\\. 0
userId\\0 6
&&\\7 9
u\\: ;
.\\; <
RoleId\\< B
==\\C E
roleId\\F L
)\\L M
;\\M N
}]] 	
public^^ 
bool^^ 

UserExists^^ 
(^^ 

LoginModel^^  *
user^^+ /
)^^/ 0
{__ 	
return`` 
	dbContext`` 
.`` 
Users`` "
.``" #
Any``# &
(``& '
u``' (
=>``( *
u``* +
.``+ ,
Email``, 1
==``1 3
user``3 7
.``7 8
Email``8 =
&&``> @
u``A B
.``B C
Password``C K
==``K M
HashPassword``M Y
.``Y Z
Sha256``Z `
(``` a
user``a e
.``e f
Password``f n
)``n o
)``o p
;``p q
}aa 	
}bb 
}cc áI
lC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Validations\PrivateFunctions.cs
	namespace 	
TMS
 
. 
API 
{ 
public 

partial 
class 

Validation #
{		 
private

 
void

 
	AddEntery

 
(

 
string

 %
key

& )
,

) *
string

* 0
value

1 6
)

6 7
{ 	
result 
. 
Add 
( 
key 
, 
value  
)  !
;! "
} 	
private 
void '
AddEnteryValidateCourseUser 0
(0 1
bool1 5
courseExists6 B
,B C
boolC G

userexistsH R
)R S
{ 	#
AddEnteryCourseNotFound #
(# $
courseExists$ 0
)0 1
;1 2
if 
( 
! 

userExists 
) 
	AddEntery %
(% &
$str& 6
,6 7
$str7 L
)L M
;M N
} 	
private 
void '
AddEnteryValidateAssignment 0
(0 1
bool1 5
courseExists6 B
,B C
boolC G
topicExistsH S
,S T
boolT X

userexistsY c
)c d
{ 	#
AddEnteryCourseNotFound #
(# $
courseExists$ 0
)0 1
;1 2
if 
( 
! 
topicExists 
) 
	AddEntery &
(& '
$str' 0
,0 1
$str1 G
)G H
;H I
if 
( 
! 

userExists 
) 
	AddEntery %
(% &
$str& /
,/ 0
$str0 E
)E F
;F G
} 	
private 
void '
AddEnteryValidateAttendance 0
(0 1
bool1 5
courseExists6 B
,B C
boolC G
topicExistsH S
,S T
boolT X

userexistsY c
)c d
{ 	#
AddEnteryCourseNotFound #
(# $
courseExists$ 0
)0 1
;1 2
if 
( 
! 
topicExists 
) 
	AddEntery &
(& '
$str' 0
,0 1
$str1 G
)G H
;H I
if 
( 
! 

userExists 
) 
	AddEntery %
(% &
$str& /
,/ 0
$str0 E
)E F
;F G
} 	
private 
void #
AddEnteryValidateCourse ,
(, -
bool- 1

userExists2 <
,< =
bool> B
departmentExistsC S
,S T
boolU Y!
isCourseNameAvailableZ o
)o p
{   	
if!! 
(!! 
!!! 

userExists!! 
)!! 
	AddEntery!! &
(!!& '
$str!!' 2
,!!2 3
$str!!4 I
)!!I J
;!!J K
if"" 
("" 
!"" 
departmentExists"" !
)""! "
	AddEntery""# ,
("", -
$str""- ;
,""; <
$str""= X
)""X Y
;""Y Z
if## 
(## !
isCourseNameAvailable## %
)##% &
	AddEntery##' 0
(##0 1
$str##1 7
,##7 8
$str##9 _
)##_ `
;##` a
}$$ 	
private&& 
void&& #
AddEnteryCourseNotFound&& ,
(&&, -
bool&&- 1
courseExists&&2 >
)&&> ?
{'' 	
if(( 
((( 
!(( 
courseExists(( 
)(( 
	AddEntery(( (
(((( )
$str(() 3
,((3 4
$str((5 L
)((L M
;((M N
})) 	
private++ 
void++ +
AddEnteryValidateCourseFeedback++ 4
(++4 5
bool++5 9
courseExists++: F
,++F G
bool++H L

userExists++M W
)++W X
{,, 	
if-- 
(-- 
!-- 

userExists-- 
)-- 
	AddEntery-- %
(--% &
$str--& 1
,--1 2
$str--2 G
)--G H
;--H I#
AddEnteryCourseNotFound.. #
(..# $
courseExists..$ 0
)..0 1
;..1 2
}// 	
private00 
void00  
AddEnteryValidateMOM00 )
(00) *
bool00* .

userExists00/ 9
,009 :
bool00; ?
reviewExists00@ L
,00L M
bool00N R
	momExists00S \
)00\ ]
{11 	
if22 
(22 
!22 

userExists22 
)22 
	AddEntery22 %
(22% &
$str22& 1
,221 2
$str222 G
)22G H
;22H I
if33 
(33 
!33 
reviewExists33 
)33 
	AddEntery33 '
(33' (
$str33( 2
,332 3
$str333 J
)33J K
;33K L
if44 
(44 
	momExists44 
)44 
	AddEntery44 #
(44# $
$str44$ )
,44) *
$str44* >
)44> ?
;44? @
}55 	
private66 
void66 "
AddEnteryValidateTopic66 +
(66+ ,
bool66, 0
isTopicNameAvailabe661 D
,66D E
bool66F J
courseExists66K W
,66W X
bool66Y ]
topicExists66^ i
)66i j
{77 	#
AddEnteryCourseNotFound88 #
(88# $
courseExists88$ 0
)880 1
;881 2
if99 
(99 
isTopicNameAvailabe99 #
)99# $
	AddEntery99% .
(99. /
$str99/ 5
,995 6
$str997 \
)99\ ]
;99] ^
}:: 	
private<< 
void<< "
AddEnteryTopicNotFound<< +
(<<+ ,
bool<<, 0
topicExists<<1 <
)<<< =
{== 	
if>> 
(>> 
!>> 
topicExists>> 
)>> 
	AddEntery>> '
(>>' (
$str>>( 1
,>>1 2
$str>>3 I
)>>I J
;>>J K
}?? 	
privateAA 
voidAA ,
 AddEnteryValidateTraineeFeedbackAA 5
(AA5 6
boolAA6 :
courseExistsAA; G
,AAG H
boolAAH L

userExistsAAM W
,AAW X
boolAAY ]
traineeExistsAA^ k
)AAk l
{BB 	#
AddEnteryCourseNotFoundCC #
(CC# $
courseExistsCC$ 0
)CC0 1
;CC1 2
ifDD 
(DD 
!DD 

userExistsDD 
)DD 
	AddEnteryDD %
(DD% &
$strDD& 1
,DD1 2
$strDD2 G
)DDG H
;DDH I
ifEE 
(EE 
!EE 
traineeExistsEE 
)EE 
	AddEnteryEE (
(EE( )
$strEE) 4
,EE4 5
$strEE5 J
)EEJ K
;EEK L
}FF 	
privateGG 
voidGG %
checkIdForCourseTopicUserGG .
(GG. /
intGG/ 2
courseIdGG3 ;
,GG; <
intGG= @
topicIdGGA H
,GGH I
intGGJ M
ownerIdGGN U
)GGU V
{HH 	
ifII 
(II 
courseIdII 
==II 
$numII 
)II 
	AddEnteryII '
(II' (
$strII( 2
,II2 3
$strII3 B
)IIB C
;IIC D
ifJJ 
(JJ 
topicIdJJ 
==JJ 
$numJJ 
)JJ 
	AddEnteryJJ &
(JJ& '
$strJJ' 0
,JJ0 1
$strJJ1 @
)JJ@ A
;JJA B
ifKK 
(KK 
ownerIdKK 
==KK 
$numKK 
)KK 
	AddEnteryKK &
(KK& '
$strKK' 0
,KK0 1
$strKK1 @
)KK@ A
;KKA B
}LL 	
privateMM 
voidMM  
validateAndAddEnteryMM )
(MM) *
stringMM* 0
keyMM1 4
,MM4 5
stringMM5 ;
inputMM< A
,MMA B
stringMMB H
regexMMI N
)MMN O
{NN 	
ifOO 
(OO 
!OO 
RegexOO 
.OO 
MatchOO 
(OO 
inputOO !
,OO! "
regexOO" '
)OO' (
.OO( )
SuccessOO) 0
)OO0 1
	AddEnteryPP 
(PP 
keyPP 
,PP 
$strPP ,
)PP, -
;PP- .
}QQ 	
privateRR 
voidRR 
checkIdAndAddEnteryRR (
(RR( )
intRR) ,
idRR- /
,RR/ 0
stringRR0 6
keyRR7 :
)RR: ;
{SS 	
ifTT 
(TT 
idTT 
==TT 
$numTT 
)TT 
	AddEnteryTT !
(TT! "
keyTT" %
,TT% &
$strTT& 5
)TT5 6
;TT6 7
}UU 	
}VV 
}WW ¯Ã
jC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Validations\ValidateEntity.cs
	namespace 	
TMS
 
. 
API 
{ 
public 

partial 
class 

Validation #
{ 
public 

Dictionary 
< 
string  
,  !
string" (
>( )
ValidateCourseUser* <
(< =
CourseUsers= H
userI M
)M N
{		 	
courseExists

 
=

 
CourseExists

 '
(

' (
user

( ,
.

, -
CourseId

- 5
)

5 6
;

6 7

userExists 
= 

UserExists #
(# $
user$ (
.( )
UserId) /
,/ 0
user0 4
.4 5
RoleId5 ;
); <
;< ='
AddEnteryValidateCourseUser '
(' (
courseExists( 4
,4 5

userExists5 ?
)? @
;@ A
if 
( 
result 
. 
Count 
== 
$num  
&&! #
courseExists$ 0
&&1 3

userExists4 >
)> ?
{ 
courseUsertExists !
=" #
CourseUserExists$ 4
(4 5
user5 9
.9 :
CourseId: B
,B C
userC G
.G H
UserIdH N
,N O
userO S
.S T
RoleIdT Z
)Z [
;[ \
if 
( 
courseUsertExists $
)$ %
	AddEntery& /
(/ 0
$str0 8
,8 9
$str9 ?
)? @
;@ A
} 
if 
( 
result 
. 
Count 
== 
$num  
||! #
($ %
result% +
.+ ,
ContainsKey, 7
(7 8
$str8 @
)@ A
&&B D
!E F
resultF L
.L M
ContainsKeyM X
(X Y
$strY b
)b c
)c d
)d e
	AddEnteryf o
(o p
$strp y
,y z
$str	z 
)
 
;
 
return 
result 
; 
} 	
public 

Dictionary 
< 
string  
,  !
string" (
>( )
ValidateAssignment* <
(< =

Assignment= G

assignmentH R
)R S
{ 	
courseExists 
= 
CourseExists '
(' (

assignment( 2
.2 3
CourseId3 ;
); <
;< =
topicExists 
= 
TopicExists %
(% &

assignment& 0
.0 1
TopicId1 8
)8 9
;9 :

userExists 
= 

UserExists #
(# $

assignment$ .
.. /
OwnerId/ 6
)6 7
;7 8'
AddEnteryValidateAssignment '
(' (
courseExists( 4
,4 5
topicExists5 @
,@ A

userExistsA K
)K L
;L M
if 
( 
result 
. 
Count 
== 
$num  
&&! #
courseExists$ 0
&&1 3
topicExists4 ?
&&@ B

userExistsC M
)M N
{ 
assignmentExists  
=! "
AssignmentExists# 3
(3 4

assignment4 >
.> ?
CourseId? G
,G H

assignmentH R
.R S
TopicIdS Z
,Z [

assignment[ e
.e f
OwnerIdf m
)m n
;n o
if 
( 
assignmentExists #
)# $
	AddEntery% .
(. /
$str/ 7
,7 8
$str8 >
)> ?
;? @
} 
if!! 
(!! 
result!! 
.!! 
Count!! 
==!! 
$num!!  
||!!! #
(!!$ %
result!!% +
.!!+ ,
ContainsKey!!, 7
(!!7 8
$str!!8 @
)!!@ A
&&!!B D
!!!E F
result!!F L
.!!L M
ContainsKey!!M X
(!!X Y
$str!!Y b
)!!b c
)!!c d
)!!d e
	AddEntery!!f o
(!!o p
$str!!p y
,!!y z
$str	!!z 
)
!! 
;
!! 
return"" 
result"" 
;"" 
}## 	
public$$ 

Dictionary$$ 
<$$ 
string$$  
,$$  !
string$$" (
>$$( )
ValidateAttendance$$* <
($$< =

Attendance$$= G

attendance$$H R
)$$R S
{%% 	%
checkIdForCourseTopicUser&& %
(&&% &

attendance&&& 0
.&&0 1
CourseId&&1 9
,&&9 :

attendance&&: D
.&&D E
TopicId&&E L
,&&L M

attendance&&M W
.&&W X
OwnerId&&X _
)&&_ `
;&&` a
if'' 
('' 
result'' 
.'' 
Count'' 
=='' 
$num''  
)''  !
{(( 
courseExists)) 
=)) 
CourseExists)) +
())+ ,

attendance)), 6
.))6 7
CourseId))7 ?
)))? @
;))@ A
topicExists** 
=** 
TopicExists** )
(**) *

attendance*** 4
.**4 5
TopicId**5 <
)**< =
;**= >

userExists++ 
=++ 

UserExists++ '
(++' (

attendance++( 2
.++2 3
OwnerId++3 :
)++: ;
;++; <'
AddEnteryValidateAttendance,, +
(,,+ ,
courseExists,,, 8
,,,8 9
topicExists,,9 D
,,,D E

userExists,,E O
),,O P
;,,P Q
if-- 
(-- 
courseExists-- 
&&--  "
topicExists--# .
&&--/ 1

userExists--2 <
)--< =
{.. 
attendanceExists// $
=//% &
AttendanceExists//' 7
(//7 8

attendance//8 B
.//B C
CourseId//C K
,//K L

attendance//L V
.//V W
TopicId//W ^
,//^ _

attendance//_ i
.//i j
OwnerId//j q
)//q r
;//r s
if00 
(00 
attendanceExists00 '
)00' (
	AddEntery00) 2
(002 3
$str003 ;
,00; <
$str00< B
)00B C
;00C D
}11 
	AddEntery22 
(22 
$str22 #
,22# $
$str22$ *
)22* +
;22+ ,
}33 
return44 
result44 
;44 
}55 	
public66 

Dictionary66 
<66 
string66  
,66  !
string66" (
>66( ) 
ValidateLoginDetails66* >
(66> ?

LoginModel66? I
user66J N
)66N O
{77 	 
validateAndAddEntery88  
(88  !
nameof88! '
(88' (
user88( ,
.88, -
Email88- 2
)882 3
,883 4
user884 8
.888 9
Email889 >
,88> ?
emailValidation88? N
)88N O
;88O P 
validateAndAddEntery99  
(99  !
nameof99! '
(99' (
user99( ,
.99, -
Password99- 5
)995 6
,996 7
user997 ;
.99; <
Password99< D
,99D E
passwordValidation99E W
)99W X
;99X Y
if:: 
(:: 
result:: 
.:: 
Count:: 
==:: 
$num::  
)::  !
{;; 

userExists<< 
=<< 

UserExists<< '
(<<' (
user<<( ,
)<<, -
;<<- .
if== 
(== 

userExists== 
)== 
	AddEntery== (
(==( )
$str==) 2
,==2 3
$str==3 9
)==9 :
;==: ;
}>> 
return?? 
result?? 
;?? 
}@@ 	
publicBB 

DictionaryBB 
<BB 
stringBB  
,BB  !
stringBB" (
>BB( )
ValidateCourseBB* 8
(BB8 9
CourseBB9 ?
courseBB@ F
)BBF G
{CC 	
checkIdAndAddEnteryDD 
(DD  
courseDD  &
.DD& '
	TrainerIdDD' 0
,DD0 1
nameofDD1 7
(DD7 8
courseDD8 >
.DD> ?
	TrainerIdDD? H
)DDH I
)DDI J
;DDJ K
checkIdAndAddEnteryEE 
(EE  
courseEE  &
.EE& '
DepartmentIdEE' 3
,EE3 4
nameofEE4 :
(EE: ;
courseEE; A
.EEA B
DepartmentIdEEB N
)EEN O
)EEO P
;EEP Q 
validateAndAddEnteryFF  
(FF  !
nameofFF! '
(FF' (
courseFF( .
.FF. /
NameFF/ 3
)FF3 4
,FF4 5
courseFF5 ;
.FF; <
NameFF< @
,FF@ A
nameValidationFFA O
)FFO P
;FFP Q 
validateAndAddEnteryGG  
(GG  !
nameofGG! '
(GG' (
courseGG( .
.GG. /
DurationGG/ 7
)GG7 8
,GG8 9
courseGG9 ?
.GG? @
DurationGG@ H
,GGH I
durationValidationGGI [
)GG[ \
;GG\ ] 
validateAndAddEnteryHH  
(HH  !
nameofHH! '
(HH' (
courseHH( .
.HH. /
DescriptionHH/ :
)HH: ;
,HH; <
courseHH< B
.HHB C
DescriptionHHC N
,HHN O
contentValidationHHO `
)HH` a
;HHa b
ifJJ 
(JJ 
resultJJ 
.JJ 
CountJJ 
==JJ 
$numJJ  
)JJ  !
{KK 

userExistsLL 
=LL 

UserExistsLL '
(LL' (
courseLL( .
.LL. /
	TrainerIdLL/ 8
,LL8 9
$numLL9 :
)LL: ;
;LL; <
ifMM 
(MM 
courseMM 
.MM 
IdMM 
!=MM 
$numMM  !
)MM! "
{NN 
courseExistsOO  
=OO! "
CourseExistsOO# /
(OO/ 0
courseOO0 6
.OO6 7
IdOO7 9
)OO9 :
;OO: ;#
AddEnteryCourseNotFoundPP +
(PP+ ,
courseExistsPP, 8
)PP8 9
;PP9 :
}QQ 
departmentExistsRR  
=RR! "
DepartmentExistsRR# 3
(RR3 4
courseRR4 :
.RR: ;
DepartmentIdRR; G
)RRG H
;RRH I
ifSS 
(SS 

userExistsSS 
&&SS  
departmentExistsSS! 1
)SS1 2!
isCourseNameAvailableSS3 H
=SSH I!
IsCourseNameAvailableSSI ^
(SS^ _
courseSS_ e
.SSe f
IdSSf h
,SSh i
courseSSi o
.SSo p
DepartmentIdSSp |
,SS| }
course	SS} 
.
SS 
Name
SS 
)
SS 
;
SS #
AddEnteryValidateCourseTT '
(TT' (

userExistsTT( 2
,TT2 3
departmentExistsTT3 C
,TTC D!
isCourseNameAvailableTTD Y
)TTY Z
;TTZ [
ifUU 
(UU 
courseExistsUU 
&&UU  "

userExistsUU# -
)UU- .
	AddEnteryUU/ 8
(UU8 9
$strUU9 A
,UUA B
$strUUB H
)UUH I
;UUI J
}VV 
ifXX 
(XX 
resultXX 
.XX 
CountXX 
==XX 
$numXX  
||XX! #
(XX$ %
resultXX% +
.XX+ ,
ContainsKeyXX, 7
(XX7 8
$strXX8 @
)XX@ A
&&XXB D
!XXE F
resultXXF L
.XXL M
ContainsKeyXXM X
(XXX Y
$strXXY b
)XXb c
)XXc d
)XXd e
	AddEnteryXXf o
(XXo p
$strXXp y
,XXy z
$str	XXz 
)
XX 
;
XX 
returnYY 
resultYY 
;YY 
}ZZ 	
public[[ 

Dictionary[[ 
<[[ 
string[[  
,[[  !
string[[" (
>[[( )"
ValidateCourseFeedback[[* @
([[@ A
CourseFeedback[[A O
feedback[[P X
)[[X Y
{\\ 	
checkIdAndAddEntery]] 
(]]  
feedback]]  (
.]]( )
CourseId]]) 1
,]]1 2
nameof]]2 8
(]]8 9
feedback]]9 A
.]]A B
CourseId]]B J
)]]J K
)]]K L
;]]L M
checkIdAndAddEntery^^ 
(^^  
feedback^^  (
.^^( )
	TraineeId^^) 2
,^^2 3
nameof^^3 9
(^^9 :
feedback^^: B
.^^B C
	TraineeId^^C L
)^^L M
)^^M N
;^^N O 
validateAndAddEntery__  
(__  !
nameof__! '
(__' (
feedback__( 0
.__0 1
Feedback__1 9
)__9 :
,__: ;
feedback__; C
.__C D
Feedback__D L
,__L M
feedbackValidation__M _
)___ `
;__` a
if`` 
(`` 
feedback`` 
.`` 
Rating`` 
<=`` !
$num``" #
||``$ &
feedback``' /
.``/ 0
Rating``0 6
>``7 8
$num``9 :
)``: ;
	AddEntery``< E
(``E F
$str``F N
,``N O
$str``O n
)``n o
;``o p
ifaa 
(aa 
resultaa 
.aa 
Countaa 
==aa 
$numaa  
)aa  !
{bb 
courseExistscc 
=cc 
CourseExistscc +
(cc+ ,
feedbackcc, 4
.cc4 5
CourseIdcc5 =
)cc= >
;cc> ?

userExistsdd 
=dd 

UserExistsdd '
(dd' (
feedbackdd( 0
.dd0 1
	TraineeIddd1 :
,dd: ;
$numdd; <
)dd< =
;dd= >+
AddEnteryValidateCourseFeedbackee /
(ee/ 0
courseExistsee0 <
,ee< =

userExistsee= G
)eeG H
;eeH I
ifff 
(ff 
courseExistsff 
&&ff  "

userExistsff# -
)ff- . 
courseFeedbackExistsff/ C
=ffD E 
CourseFeedbackExistsffF Z
(ffZ [
feedbackff[ c
.ffc d
CourseIdffd l
,ffl m
feedbackffm u
.ffu v
	TraineeIdffv 
)	ff 
;
ff 
ifgg 
(gg  
courseFeedbackExistsgg '
)gg' (
	AddEnterygg) 2
(gg2 3
$strgg3 ;
,gg; <
$strgg< B
)ggB C
;ggC D
}hh 
ifjj 
(jj 
resultjj 
.jj 
Countjj 
==jj 
$numjj  
||jj! #
(jj$ %
resultjj% +
.jj+ ,
ContainsKeyjj, 7
(jj7 8
$strjj8 @
)jj@ A
&&jjB D
!jjE F
resultjjF L
.jjL M
ContainsKeyjjM X
(jjX Y
$strjjY b
)jjb c
)jjc d
)jjd e
	AddEnteryjjf o
(jjo p
$strjjp y
,jjy z
$str	jjz 
)
jj 
;
jj 
returnkk 
resultkk 
;kk 
}ll 	
publicmm 

Dictionarymm 
<mm 
stringmm  
,mm  !
stringmm" (
>mm( )
ValidateDepartmentmm* <
(mm< =

Departmentmm= G
dpetmmH L
)mmL M
{nn 	 
validateAndAddEnteryoo  
(oo  !
nameofoo! '
(oo' (
dpetoo( ,
.oo, -
Nameoo- 1
)oo1 2
,oo2 3
dpetoo3 7
.oo7 8
Nameoo8 <
,oo< =
userNameValidationoo= O
)ooO P
;ooP Q
ifpp 
(pp 
dpetpp 
.pp 
Idpp 
!=pp 
$numpp 
)pp 
departmentExistspp -
=pp- .
DepartmentExistspp. >
(pp> ?
dpetpp? C
.ppC D
IdppD F
)ppF G
;ppG H
ifqq 
(qq 
departmentExistsqq 
&&qq  "
!qq# $
resultqq$ *
.qq* +
ContainsKeyqq+ 6
(qq6 7
$strqq7 ?
)qq? @
)qq@ A
	AddEnteryqqA J
(qqJ K
$strqqK S
,qqS T
$strqqT Z
)qqZ [
;qq[ \
ifrr 
(rr 
resultrr 
.rr 
Countrr 
==rr 
$numrr  
||rr! #
(rr$ %
resultrr% +
.rr+ ,
ContainsKeyrr, 7
(rr7 8
$strrr8 @
)rr@ A
&&rrB D
!rrE F
resultrrF L
.rrL M
ContainsKeyrrM X
(rrX Y
$strrrY b
)rrb c
)rrc d
)rrd e
	AddEnteryrrf o
(rro p
$strrrp y
,rry z
$str	rrz 
)
rr 
;
rr 
returnss 
resultss 
;ss 
}tt 	
publicvv 

Dictionaryvv 
<vv 
stringvv  
,vv  !
stringvv" (
>vv( )
ValidateMOMvv* 5
(vv5 6
MOMvv6 9
momvv: =
)vv= >
{ww 	
checkIdAndAddEnteryxx 
(xx  
momxx  #
.xx# $
ReviewIdxx$ ,
,xx, -
nameofxx- 3
(xx3 4
momxx4 7
.xx7 8
ReviewIdxx8 @
)xx@ A
)xxA B
;xxB C
checkIdAndAddEnteryyy 
(yy  
momyy  #
.yy# $
	TraineeIdyy$ -
,yy- .
nameofyy. 4
(yy4 5
momyy5 8
.yy8 9
	TraineeIdyy9 B
)yyB C
)yyC D
;yyD E 
validateAndAddEnteryzz  
(zz  !
nameofzz! '
(zz' (
momzz( +
.zz+ ,
Agendazz, 2
)zz2 3
,zz3 4
momzz4 7
.zz7 8
Agendazz8 >
,zz> ?
contentValidationzz? P
)zzP Q
;zzQ R 
validateAndAddEntery{{  
({{  !
nameof{{! '
({{' (
mom{{( +
.{{+ ,
MeetingNotes{{, 8
){{8 9
,{{9 :
mom{{: =
.{{= >
MeetingNotes{{> J
,{{J K
contentValidation{{K \
){{\ ]
;{{] ^ 
validateAndAddEntery||  
(||  !
nameof||! '
(||' (
mom||( +
.||+ ,
PurposeOfMeeting||, <
)||< =
,||= >
mom||> A
.||A B
PurposeOfMeeting||B R
,||R S
contentValidation||S d
)||d e
;||e f
if}} 
(}} 
result}} 
.}} 
Count}} 
==}} 
$num}} 
)}} 
{~~ 

userExists 
= 

UserExists '
(' (
mom( +
.+ ,
	TraineeId, 5
,5 6
$num6 7
)7 8
;8 9
reviewExists
 
=
 
MOMReviewExists
 .
(
. /
mom
/ 2
.
2 3
ReviewId
3 ;
,
; <
mom
< ?
.
? @
	TraineeId
@ I
)
I J
;
J K
if
 
(
 

userExists
 
&&
  
reviewExists
! -
)
- .
	momExists
/ 8
=
9 :
	MOMExists
; D
(
D E
mom
E H
.
H I
ReviewId
I Q
,
Q R
mom
R U
.
U V
	TraineeId
V _
)
_ `
;
` a"
AddEnteryValidateMOM
 $
(
$ %

userExists
% /
,
/ 0
reviewExists
0 <
,
< =
	momExists
= F
)
F G
;
G H
if
 
(
 
	momExists
 
)
 
	AddEntery
 '
(
' (
$str
( 0
,
0 1
$str
1 7
)
7 8
;
8 9
}
 
if
 
(
 
result
 
.
 
Count
 
==
 
$num
 
||
 !
(
" #
result
# )
.
) *
ContainsKey
* 5
(
5 6
$str
6 >
)
> ?
&&
@ B
!
C D
result
D J
.
J K
ContainsKey
K V
(
V W
$str
W `
)
` a
)
a b
)
b c
	AddEntery
d m
(
m n
$str
n w
,
w x
$str
x ~
)
~ 
; 
return
 
result
 
;
 
}
 	
public
 

Dictionary
 
<
 
string
  
,
  !
string
" (
>
( )
ValidateReview
* 8
(
8 9
Review
9 ?
review
@ F
)
F G
{
 	!
checkIdAndAddEntery
 
(
  
review
  &
.
& '

ReviewerId
' 1
,
1 2
nameof
2 8
(
8 9
review
9 ?
.
? @

ReviewerId
@ J
)
J K
)
K L
;
L M!
checkIdAndAddEntery
 
(
  
review
  &
.
& '
	TraineeId
' 0
,
0 1
nameof
1 7
(
7 8
review
8 >
.
> ?
	TraineeId
? H
)
H I
)
I J
;
J K!
checkIdAndAddEntery
 
(
  
review
  &
.
& '
StatusId
' /
,
/ 0
nameof
0 6
(
6 7
review
7 =
.
= >
StatusId
> F
)
F G
)
G H
;
H I"
validateAndAddEntery
  
(
  !
nameof
! '
(
' (
review
( .
.
. /

ReviewDate
/ 9
)
9 :
,
: ;
review
; A
.
A B

ReviewDate
B L
.
L M
ToShortDateString
M ^
(
^ _
)
_ `
,
` a
dateValidation
a o
)
o p
;
p q"
validateAndAddEntery
  
(
  !
nameof
! '
(
' (
review
( .
.
. /

ReviewTime
/ 9
)
9 :
,
: ;
review
; A
.
A B

ReviewTime
B L
.
L M
ToShortTimeString
M ^
(
^ _
)
_ `
,
` a
timeValidation
a o
)
o p
;
p q"
validateAndAddEntery
  
(
  !
nameof
! '
(
' (
review
( .
.
. /
Mode
/ 3
)
3 4
,
4 5
review
5 ;
.
; <
Mode
< @
,
@ A
modeValidation
A O
)
O P
;
P Q
if
 
(
 
result
 
.
 
Count
 
==
 
$num
 
)
 
{
 

userExists
 
=
 

UserExists
 '
(
' (
review
( .
.
. /

ReviewerId
/ 9
,
9 :
$num
: ;
)
; <
;
< =
traineeExists
 
=
 

UserExists
  *
(
* +
review
+ 1
.
1 2
	TraineeId
2 ;
,
; <
$num
< =
)
= >
;
> ? 
reviewStatusExists
 "
=
# $ 
ReviewStatusExists
% 7
(
7 8
review
8 >
.
> ?
StatusId
? G
)
G H
;
H I
if
 
(
 
!
  
reviewStatusExists
 &
)
& '
	AddEntery
( 1
(
1 2
nameof
2 8
(
8 9
review
9 ?
.
? @
StatusId
@ H
)
H I
,
I J
$str
J V
)
V W
;
W X
if
 
(
 
review
 
.
 

ReviewDate
 $
<
% &
DateTime
' /
.
/ 0
Now
0 3
)
3 4
	AddEntery
 
(
 
nameof
 $
(
$ %
review
% +
.
+ ,

ReviewDate
, 6
)
6 7
,
7 8
$str
8 F
)
F G
;
G H
if
 
(
 
review
 
.
 
Id
 
!=
 
$num
  !
)
! "
revieweExists
 !
=
" #
ReviewExists
$ 0
(
0 1
review
1 7
.
7 8
Id
8 :
)
: ;
;
; <
if
 
(
 

userExists
 
&&
  
traineeExists
! .
&&
/ 1 
reviewStatusExists
2 D
)
D E(
reviewerAvailabilityExists
 .
=
/ 0(
ReviewerAvailabilityExists
1 K
(
K L
review
L R
.
R S
Id
S U
,
U V
review
V \
.
\ ]

ReviewerId
] g
,
g h
review
h n
.
n o

ReviewDate
o y
,
y z
reviewz 
. 

ReviewTime 
, 
review 
. 
StatusId 
) 
; 
if
   
(
   (
reviewerAvailabilityExists
   -
)
  - .
	AddEntery
¡¡ 
(
¡¡ 
$str
¡¡ *
,
¡¡* +
$str
¡¡+ =
)
¡¡= >
;
¡¡> ?
if
££ 
(
££ 

userExists
££ 
&&
££  
traineeExists
££! .
&&
££/ 1 
reviewStatusExists
££2 D
)
££D E'
traineeAvailabilityExists
¤¤ -
=
¤¤. /'
TraineeAvailabilityExists
¤¤0 I
(
¤¤I J
review
¤¤J P
.
¤¤P Q
Id
¤¤Q S
,
¤¤S T
review
¤¤T Z
.
¤¤Z [
	TraineeId
¤¤[ d
,
¤¤d e
review
¤¤e k
.
¤¤k l

ReviewDate
¤¤l v
,
¤¤v w
review
¤¤w }
.
¤¤} ~

ReviewTime¤¤~ 
,¤¤ 
review¤¤ 
.¤¤ 
StatusId¤¤ 
)¤¤ 
;¤¤ 
if
¦¦ 
(
¦¦ '
traineeAvailabilityExists
¦¦ ,
)
¦¦, -
	AddEntery
§§ 
(
§§ 
$str
§§ )
,
§§) *
$str
§§* <
)
§§< =
;
§§= >
if
©© 
(
©© 
revieweExists
©©  
)
©©  !
	AddEntery
ªª 
(
ªª 
$str
ªª &
,
ªª& '
$str
ªª' -
)
ªª- .
;
ªª. /
}
«« 
if
¬¬ 
(
¬¬ 
result
¬¬ 
.
¬¬ 
Count
¬¬ 
==
¬¬ 
$num
¬¬ 
||
¬¬ !
(
¬¬" #
result
¬¬# )
.
¬¬) *
ContainsKey
¬¬* 5
(
¬¬5 6
$str
¬¬6 >
)
¬¬> ?
&&
¬¬@ B
!
¬¬C D
result
¬¬D J
.
¬¬J K
ContainsKey
¬¬K V
(
¬¬V W
$str
¬¬W `
)
¬¬` a
)
¬¬a b
)
¬¬b c
	AddEntery
¬¬d m
(
¬¬m n
$str
¬¬n w
,
¬¬w x
$str
¬¬x ~
)
¬¬~ 
;¬¬ 
return
­­ 
result
­­ 
;
­­ 
}
®® 	
public
¯¯ 

Dictionary
¯¯ 
<
¯¯ 
string
¯¯  
,
¯¯  !
string
¯¯" (
>
¯¯( )
ValidateTopic
¯¯* 7
(
¯¯7 8
Topic
¯¯8 =
topic
¯¯> C
)
¯¯C D
{
°° 	!
checkIdAndAddEntery
±± 
(
±±  
topic
±±  %
.
±±% &
CourseId
±±& .
,
±±. /
nameof
±±/ 5
(
±±5 6
topic
±±6 ;
.
±±; <
CourseId
±±< D
)
±±D E
)
±±E F
;
±±F G"
validateAndAddEntery
²²  
(
²²  !
nameof
²²! '
(
²²' (
topic
²²( -
.
²²- .
Name
²². 2
)
²²2 3
,
²²3 4
topic
²²4 9
.
²²9 :
Name
²²: >
,
²²> ?
nameValidation
²²? M
)
²²M N
;
²²N O"
validateAndAddEntery
³³  
(
³³  !
nameof
³³! '
(
³³' (
topic
³³( -
.
³³- .
Duration
³³. 6
)
³³6 7
,
³³7 8
topic
³³8 =
.
³³= >
Duration
³³> F
,
³³F G 
durationValidation
³³G Y
)
³³Y Z
;
³³Z [
if
´´ 
(
´´ 
result
´´ 
.
´´ 
Count
´´ 
==
´´ 
$num
´´ 
)
´´ 
{
µµ 
courseExists
¶¶ 
=
¶¶ 
CourseExists
¶¶ +
(
¶¶+ ,
topic
¶¶, 1
.
¶¶1 2
CourseId
¶¶2 :
)
¶¶: ;
;
¶¶; <
if
·· 
(
·· 
courseExists
·· 
&&
··  "
topic
··# (
.
··( )
TopicId
··) 0
!=
··1 3
$num
··4 5
)
··5 6
{
¸¸ 
topicExists
¹¹ 
=
¹¹  !
TopicExists
¹¹" -
(
¹¹- .
topic
¹¹. 3
.
¹¹3 4
TopicId
¹¹4 ;
,
¹¹; <
topic
¹¹< A
.
¹¹A B
CourseId
¹¹B J
)
¹¹J K
;
¹¹K L$
AddEnteryTopicNotFound
ºº *
(
ºº* +
topicExists
ºº+ 6
)
ºº6 7
;
ºº7 8
}
»» !
isTopicNameAvailabe
¼¼ #
=
¼¼$ %!
IsTopicNameAvailabe
¼¼& 9
(
¼¼9 :
topic
¼¼: ?
.
¼¼? @
TopicId
¼¼@ G
,
¼¼G H
topic
¼¼H M
.
¼¼M N
CourseId
¼¼N V
,
¼¼V W
topic
¼¼W \
.
¼¼\ ]
Name
¼¼] a
)
¼¼a b
;
¼¼b c$
AddEnteryValidateTopic
½½ &
(
½½& '!
isTopicNameAvailabe
½½' :
,
½½: ;
courseExists
½½; G
,
½½G H
topicExists
½½H S
)
½½S T
;
½½T U
if
¾¾ 
(
¾¾ 
topicExists
¾¾ 
)
¾¾ 
	AddEntery
¾¾  )
(
¾¾) *
$str
¾¾* 2
,
¾¾2 3
$str
¾¾3 9
)
¾¾9 :
;
¾¾: ;
}
¿¿ 
if
ÀÀ 
(
ÀÀ 
result
ÀÀ 
.
ÀÀ 
Count
ÀÀ 
==
ÀÀ 
$num
ÀÀ 
||
ÀÀ !
(
ÀÀ" #
result
ÀÀ# )
.
ÀÀ) *
ContainsKey
ÀÀ* 5
(
ÀÀ5 6
$str
ÀÀ6 >
)
ÀÀ> ?
&&
ÀÀ@ B
!
ÀÀC D
result
ÀÀD J
.
ÀÀJ K
ContainsKey
ÀÀK V
(
ÀÀV W
$str
ÀÀW `
)
ÀÀ` a
)
ÀÀa b
)
ÀÀb c
	AddEntery
ÀÀd m
(
ÀÀm n
$str
ÀÀn w
,
ÀÀw x
$str
ÀÀx ~
)
ÀÀ~ 
;ÀÀ 
return
ÁÁ 
result
ÁÁ 
;
ÁÁ 
}
ÂÂ 	
public
ÃÃ 

Dictionary
ÃÃ 
<
ÃÃ 
string
ÃÃ  
,
ÃÃ  !
string
ÃÃ" (
>
ÃÃ( )%
ValidateTraineeFeedback
ÃÃ* A
(
ÃÃA B
TraineeFeedback
ÃÃB Q
feedback
ÃÃR Z
)
ÃÃZ [
{
ÄÄ 	#
traineeFeedbackExists
ÅÅ !
=
ÅÅ! "
false
ÅÅ" '
;
ÅÅ' (!
checkIdAndAddEntery
ÆÆ 
(
ÆÆ  
feedback
ÆÆ  (
.
ÆÆ( )
CourseId
ÆÆ) 1
,
ÆÆ1 2
nameof
ÆÆ2 8
(
ÆÆ8 9
feedback
ÆÆ9 A
.
ÆÆA B
CourseId
ÆÆB J
)
ÆÆJ K
)
ÆÆK L
;
ÆÆL M!
checkIdAndAddEntery
ÇÇ 
(
ÇÇ  
feedback
ÇÇ  (
.
ÇÇ( )
	TraineeId
ÇÇ) 2
,
ÇÇ2 3
nameof
ÇÇ3 9
(
ÇÇ9 :
feedback
ÇÇ: B
.
ÇÇB C
	TraineeId
ÇÇC L
)
ÇÇL M
)
ÇÇM N
;
ÇÇN O!
checkIdAndAddEntery
ÈÈ 
(
ÈÈ  
feedback
ÈÈ  (
.
ÈÈ( )
	TrainerId
ÈÈ) 2
,
ÈÈ2 3
nameof
ÈÈ3 9
(
ÈÈ9 :
feedback
ÈÈ: B
.
ÈÈB C
	TrainerId
ÈÈC L
)
ÈÈL M
)
ÈÈM N
;
ÈÈN O"
validateAndAddEntery
ÉÉ  
(
ÉÉ  !
nameof
ÉÉ! '
(
ÉÉ' (
feedback
ÉÉ( 0
.
ÉÉ0 1
Feedback
ÉÉ1 9
)
ÉÉ9 :
,
ÉÉ: ;
feedback
ÉÉ; C
.
ÉÉC D
Feedback
ÉÉD L
,
ÉÉL M 
feedbackValidation
ÉÉM _
)
ÉÉ_ `
;
ÉÉ` a
if
ÊÊ 
(
ÊÊ 
result
ÊÊ 
.
ÊÊ 
Count
ÊÊ 
==
ÊÊ 
$num
ÊÊ 
)
ÊÊ 
{
ËË 
courseExists
ÌÌ 
=
ÌÌ 
CourseExists
ÌÌ +
(
ÌÌ+ ,
feedback
ÌÌ, 4
.
ÌÌ4 5
CourseId
ÌÌ5 =
)
ÌÌ= >
;
ÌÌ> ?
if
ÍÍ 
(
ÍÍ 
!
ÍÍ 
courseExists
ÍÍ  
)
ÍÍ  !
	AddEntery
ÍÍ" +
(
ÍÍ+ ,
nameof
ÍÍ, 2
(
ÍÍ2 3
feedback
ÍÍ3 ;
.
ÍÍ; <
CourseId
ÍÍ< D
)
ÍÍD E
,
ÍÍE F
$str
ÍÍF T
)
ÍÍT U
;
ÍÍU V

userExists
ÎÎ 
=
ÎÎ 

UserExists
ÎÎ '
(
ÎÎ' (
feedback
ÎÎ( 0
.
ÎÎ0 1
	TrainerId
ÎÎ1 :
,
ÎÎ: ;
$num
ÎÎ; <
)
ÎÎ< =
;
ÎÎ= >
traineeExists
ÏÏ 
=
ÏÏ 

UserExists
ÏÏ  *
(
ÏÏ* +
feedback
ÏÏ+ 3
.
ÏÏ3 4
	TraineeId
ÏÏ4 =
,
ÏÏ= >
$num
ÏÏ> ?
)
ÏÏ? @
;
ÏÏ@ A.
 AddEnteryValidateTraineeFeedback
ÐÐ 0
(
ÐÐ0 1
courseExists
ÐÐ1 =
,
ÐÐ= >

userExists
ÐÐ> H
,
ÐÐH I
traineeExists
ÐÐI V
)
ÐÐV W
;
ÐÐW X
if
ÑÑ 
(
ÑÑ 
courseExists
ÑÑ 
&&
ÑÑ  "

userExists
ÑÑ# -
&&
ÑÑ. 0
traineeExists
ÑÑ1 >
)
ÑÑ> ?#
traineeFeedbackExists
ÑÑ@ U
=
ÑÑV W#
TraineeFeedbackExists
ÑÑX m
(
ÑÑm n
feedback
ÑÑn v
.
ÑÑv w
CourseId
ÑÑw 
,ÑÑ 
feedbackÑÑ 
.ÑÑ 
	TraineeIdÑÑ 
,ÑÑ 
feedbackÑÑ 
.ÑÑ 
	TrainerIdÑÑ ¥
)ÑÑ¥ ¦
;ÑÑ¦ §
if
ÒÒ 
(
ÒÒ #
traineeFeedbackExists
ÒÒ (
)
ÒÒ( )
	AddEntery
ÒÒ* 3
(
ÒÒ3 4
$str
ÒÒ4 <
,
ÒÒ< =
$str
ÒÒ= C
)
ÒÒC D
;
ÒÒD E
}
ÓÓ 
if
ÔÔ 
(
ÔÔ 
result
ÔÔ 
.
ÔÔ 
Count
ÔÔ 
==
ÔÔ 
$num
ÔÔ 
||
ÔÔ !
(
ÔÔ" #
result
ÔÔ# )
.
ÔÔ) *
ContainsKey
ÔÔ* 5
(
ÔÔ5 6
$str
ÔÔ6 >
)
ÔÔ> ?
&&
ÔÔ@ B
!
ÔÔC D
result
ÔÔD J
.
ÔÔJ K
ContainsKey
ÔÔK V
(
ÔÔV W
$str
ÔÔW `
)
ÔÔ` a
)
ÔÔa b
)
ÔÔb c
	AddEntery
ÔÔd m
(
ÔÔm n
$str
ÔÔn w
,
ÔÔw x
$str
ÔÔx ~
)
ÔÔ~ 
;ÔÔ 
return
ÕÕ 
result
ÕÕ 
;
ÕÕ 
}
ÖÖ 	
public
×× 

Dictionary
×× 
<
×× 
string
××  
,
××  !
string
××" (
>
××( )
ValidateUser
××* 6
(
××6 7
User
××7 ;
user
××< @
)
××@ A
{
ØØ 	

roleExists
ÙÙ 
=
ÙÙ 

RoleExists
ÙÙ #
(
ÙÙ# $
user
ÙÙ$ (
.
ÙÙ( )
RoleId
ÙÙ) /
)
ÙÙ/ 0
;
ÙÙ0 1
departmentExists
ÚÚ 
=
ÚÚ 
DepartmentExists
ÚÚ /
(
ÚÚ/ 0
user
ÚÚ0 4
.
ÚÚ4 5
DepartmentId
ÚÚ5 A
)
ÚÚA B
;
ÚÚB C
if
ÛÛ 
(
ÛÛ 
!
ÛÛ 

roleExists
ÛÛ 
)
ÛÛ 
	AddEntery
ÛÛ %
(
ÛÛ% &
nameof
ÛÛ& ,
(
ÛÛ, -
user
ÛÛ- 1
.
ÛÛ1 2
RoleId
ÛÛ2 8
)
ÛÛ8 9
,
ÛÛ9 :
$str
ÛÛ: O
)
ÛÛO P
;
ÛÛP Q
if
ÜÜ 
(
ÜÜ 
(
ÜÜ 

roleExists
ÜÜ 
&&
ÜÜ 
user
ÜÜ "
.
ÜÜ" #
RoleId
ÜÜ# )
>=
ÜÜ* ,
$num
ÜÜ- .
)
ÜÜ. /
&&
ÜÜ0 2
!
ÜÜ3 4
departmentExists
ÜÜ4 D
)
ÜÜD E
	AddEntery
ÜÜF O
(
ÜÜO P
nameof
ÜÜP V
(
ÜÜV W
user
ÜÜW [
.
ÜÜ[ \
DepartmentId
ÜÜ\ h
)
ÜÜh i
,
ÜÜi j
$strÜÜj 
)ÜÜ 
;ÜÜ 
if
ÝÝ 
(
ÝÝ 
result
ÝÝ 
.
ÝÝ 
Count
ÝÝ 
==
ÝÝ 
$num
ÝÝ 
&&
ÝÝ !

roleExists
ÝÝ" ,
)
ÝÝ, -
{
ÞÞ "
validateAndAddEntery
ßß $
(
ßß$ %
nameof
ßß% +
(
ßß+ ,
user
ßß, 0
.
ßß0 1
FullName
ßß1 9
)
ßß9 :
,
ßß: ;
user
ßß; ?
.
ßß? @
FullName
ßß@ H
,
ßßH I 
fullNameValidation
ßßI [
)
ßß[ \
;
ßß\ ]"
validateAndAddEntery
àà $
(
àà$ %
nameof
àà% +
(
àà+ ,
user
àà, 0
.
àà0 1
UserName
àà1 9
)
àà9 :
,
àà: ;
user
àà; ?
.
àà? @
UserName
àà@ H
,
ààH I 
userNameValidation
ààI [
)
àà[ \
;
àà\ ]"
validateAndAddEntery
áá $
(
áá$ %
nameof
áá% +
(
áá+ ,
user
áá, 0
.
áá0 1
Email
áá1 6
)
áá6 7
,
áá7 8
user
áá8 <
.
áá< =
Email
áá= B
,
ááB C
emailValidation
ááC R
)
ááR S
;
ááS T"
validateAndAddEntery
ââ $
(
ââ$ %
nameof
ââ% +
(
ââ+ ,
user
ââ, 0
.
ââ0 1
Password
ââ1 9
)
ââ9 :
,
ââ: ;
user
ââ; ?
.
ââ? @
Password
ââ@ H
,
ââH I 
passwordValidation
ââI [
)
ââ[ \
;
ââ\ ]"
validateAndAddEntery
ãã $
(
ãã$ %
nameof
ãã% +
(
ãã+ ,
user
ãã, 0
.
ãã0 1
Base64
ãã1 7
)
ãã7 8
,
ãã8 9
user
ãã9 =
.
ãã= >
Base64
ãã> D
,
ããD E
Image
ããE J
)
ããJ K
;
ããK L

userExists
ää 
=
ää 

UserExists
ää '
(
ää' (
user
ää( ,
.
ää, -
Id
ää- /
)
ää/ 0
;
ää0 1
if
åå 
(
åå 

userExists
åå 
)
åå 
	AddEntery
åå (
(
åå( )
$str
åå) 1
,
åå1 2
$str
åå2 8
)
åå8 9
;
åå9 :
}
ææ 
if
çç 
(
çç 
result
çç 
.
çç 
Count
çç 
==
çç 
$num
çç 
||
çç !
(
çç" #
(
çç# $
result
çç$ *
.
çç* +
ContainsKey
çç+ 6
(
çç6 7
$str
çç7 ?
)
çç? @
&&
ççA C
!
ççD E
result
ççE K
.
ççK L
ContainsKey
ççL W
(
ççW X
$str
ççX a
)
çça b
)
ççb c
&&
ççd f
!
ççg h
result
ççh n
.
ççn o
ContainsKey
çço z
(
ççz {
$strçç{ 
)çç 
)çç 
)çç 
	AddEnteryçç 
(çç 
$strçç 
,çç 
$strçç ¢
)çç¢ £
;çç£ ¤
return
èè 
result
èè 
;
èè 
}
éé 	
}
ëë 
}ìì Ö
eC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\Validations\Variables.cs
	namespace 	
TMS
 
. 
API 
{ 
public 

partial 
class 

Validation #
{ 
public 

Validation 
( 
AppDbContext &
	dbContext' 0
)0 1
{ 	
this 
. 
	dbContext 
= 
	dbContext &
;& '
} 	

Dictionary			 
<		 
string		 
,		 
string		 !
>		! "
result		# )
=		* +
new		, /

Dictionary		0 :
<		: ;
string		; A
,		A B
string		C I
>		I J
(		J K
)		K L
;		L M
string

	 
fullNameValidation

 "
=

# $
$str

% W
,

W X
nameValidation	 
= 
$str T
,T U
userNameValidation	 
= 
$str Q
,Q R
emailValidation	 
= 
$str [
,[ \
passwordValidation	 
= 
$str G
,G H
Image	 
= 
$str 2
,2 3
dateValidation	 
= 
$str 4
,4 5
timeValidation	 
= 
$str J
,J K
modeValidation	 
= 
$str I
,I J
durationValidation	 
= 
$str v
,v w
contentValidation	 
= 
$str X
,X Y
feedbackValidation	 
= 
$str Y
,Y Z
base64Validation	 
= 
$str =
;= >
bool	 
attendanceExists 
=  
false! &
,& '
assignmentExists	 
= 
false !
,! "
courseUsertExists	 
= 
false "
," #
courseExists	 
= 
false 
, !
isCourseNameAvailable	 
= 
false $
,$ %
isTopicNameAvailabe	 
= 
false "
," #
departmentExists	 
= 
false !
,! "
	momExists	 
= 
false 
, 
reviewExists  	 
=   
false   
,   
reviewStatusExists!!	 
=!! 
false!! #
,!!# $
topicExists""	 
="" 
false"" 
,"" !
traineeFeedbackExists##	 
=##  
false##! &
,##& ' 
courseFeedbackExists$$	 
=$$ 
false$$  %
,$$% &

userExists%%	 
=%% 
false%% 
,%% 
revieweExists&&	 
=&& 
false&& 
,&& &
reviewerAvailabilityExists''	 #
=''# $
false''$ )
,'') *%
traineeAvailabilityExists((	 "
=((" #
false((# (
,((( )
traineeExists))	 
=)) 
false)) 
,)) 

roleExists**	 
=** 
false** 
;** 
private++ 
readonly++ 
AppDbContext++ %
	dbContext++& /
;++/ 0
},, 
}.. È
kC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\ViewModels\AddUsersToCourse.cs
	namespace 	
TMS
 
. 
API 
. 

ViewModels 
{ 
public 

class 
AddUsersToCourse !
{ 
public 
int 
CourseId 
{ 
get !
;! "
set# &
;& '
}( )
public 
List 
< 

CourseUser 
> 
users  %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
public		 

class		 

CourseUser		 
{

 
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
RoleId 
{ 
get 
;  
set! $
;$ %
}& '
} 
} ¶
eC:\Users\arul.ilaya\Documents\Training Management System\API\TMS-API\TMS.API\ViewModels\LoginModel.cs
	namespace 	
TMS
 
. 
API 
. 

ViewModels 
{ 
public 

class 

LoginModel 
{ 
[ 	
DisplayName	 
( 
$str 
) 
] 
[		 	
Required			 
]		 
public

 
string

 
Email

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
[ 	
DisplayName	 
( 
$str 
)  
]  !
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} 