// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMS.API;

#nullable disable

namespace TMS.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

<<<<<<< HEAD
                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "UsersId");

                    b.HasIndex("UsersId");
=======
                    b.Property<int>("TraineesId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "TraineesId");

                    b.HasIndex("TraineesId");
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779

                    b.ToTable("CourseUser");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Assigment", b =>
=======
            modelBuilder.Entity("TMS.API.Models.Assigment", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Document")
<<<<<<< HEAD
=======
                        .IsRequired()
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TopicId");

                    b.ToTable("Assigments");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.AssignmentStatus", b =>
=======
            modelBuilder.Entity("TMS.API.Models.AssignmentStatus", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssignmentStatuses");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Attendance", b =>
=======
            modelBuilder.Entity("TMS.API.Models.Attendance", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TopicId");

                    b.ToTable("Attendances");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.AttendanceStatus", b =>
=======
            modelBuilder.Entity("TMS.API.Models.AttendanceStatus", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AttendanceStatuses");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Course", b =>
=======
            modelBuilder.Entity("TMS.API.Models.Course", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<bool?>("isDisabled")
=======
                    b.Property<bool>("isDisabled")
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

<<<<<<< HEAD
                    b.ToTable("Courses");
                });

            modelBuilder.Entity("TMS.DAL.CourseFeedback", b =>
=======
                    b.HasIndex("StatusId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("TMS.API.Models.CourseFeedback", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<string>("Feedback")
=======
                    b.Property<string>("Feddback")
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<bool?>("isDisabled")
                        .HasColumnType("bit");

=======
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("OwnerId");

                    b.ToTable("CourseFeedbacks");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Department", b =>
=======
            modelBuilder.Entity("TMS.API.Models.CourseStatus", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<bool?>("isDisabled")
=======
                    b.HasKey("Id");

                    b.ToTable("CourseStatuses");
                });

            modelBuilder.Entity("TMS.API.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDisabled")
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.MOM", b =>
=======
            modelBuilder.Entity("TMS.API.Models.MOM", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Agenda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("PurposeOfMeeting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<bool?>("isDisabled")
                        .HasColumnType("bit");

=======
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ReviewId");

                    b.HasIndex("StatusId");

                    b.ToTable("MOMs");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.MOMStatus", b =>
=======
            modelBuilder.Entity("TMS.API.Models.MOMStatus", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MOMStatuses");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Review", b =>
=======
            modelBuilder.Entity("TMS.API.Models.Review", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<bool?>("isDisabled")
=======
                    b.Property<bool>("isDisabled")
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ReviewerId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TraineeId");

                    b.ToTable("Reviews");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.ReviewStatus", b =>
=======
            modelBuilder.Entity("TMS.API.Models.ReviewStatus", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReviewStatuses");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Role", b =>
=======
            modelBuilder.Entity("TMS.API.Models.Role", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<bool?>("isDisabled")
=======
                    b.Property<bool>("isDisabled")
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Topic", b =>
=======
            modelBuilder.Entity("TMS.API.Models.Topic", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
<<<<<<< HEAD
=======


>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<bool?>("isDisabled")
=======
                    b.Property<bool>("isDisabled")
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Topics");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.TraineeFeedback", b =>
=======
            modelBuilder.Entity("TMS.API.Models.TraineeFeedback", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

<<<<<<< HEAD
                    b.Property<bool?>("isDisabled")
                        .HasColumnType("bit");

=======
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TraineeId");

                    b.HasIndex("TrainerId");

<<<<<<< HEAD
                    b.ToTable("TraineeFeedbacks");
                });

            modelBuilder.Entity("TMS.DAL.User", b =>
=======
                    b.ToTable("traineeFeedbacks");
                });

            modelBuilder.Entity("TMS.API.Models.User", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

<<<<<<< HEAD
                    b.Property<string>("base64Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

=======
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                    b.Property<bool?>("isDisabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CourseUser", b =>
                {
<<<<<<< HEAD
                    b.HasOne("TMS.DAL.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("TMS.DAL.Assigment", b =>
                {
                    b.HasOne("TMS.DAL.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.AssignmentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.Topic", "Topic")
                        .WithMany("Assigments")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.NoAction)
=======
                    b.HasOne("TMS.API.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("TraineesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TMS.API.Models.Assigment", b =>
                {
                    b.HasOne("TMS.API.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.AssignmentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.Topic", "Topic")
                        .WithMany("Assigments")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Status");

                    b.Navigation("Topic");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Attendance", b =>
                {
                    b.HasOne("TMS.DAL.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.AttendanceStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.Topic", "Topic")
                        .WithMany("Attendances")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.NoAction)
=======
            modelBuilder.Entity("TMS.API.Models.Attendance", b =>
                {
                    b.HasOne("TMS.API.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.AttendanceStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.Topic", "Topic")
                        .WithMany("Attendances")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Status");

                    b.Navigation("Topic");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Course", b =>
                {
                    b.HasOne("TMS.DAL.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TMS.DAL.CourseFeedback", b =>
                {
                    b.HasOne("TMS.DAL.Course", "Course")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
=======
            modelBuilder.Entity("TMS.API.Models.Course", b =>
                {
                    b.HasOne("TMS.API.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.CourseStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TMS.API.Models.CourseFeedback", b =>
                {
                    b.HasOne("TMS.API.Models.Course", "Course")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Owner");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.MOM", b =>
                {
                    b.HasOne("TMS.DAL.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.MOMStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
=======
            modelBuilder.Entity("TMS.API.Models.MOM", b =>
                {
                    b.HasOne("TMS.API.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.MOMStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Review");

                    b.Navigation("Status");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Review", b =>
                {
                    b.HasOne("TMS.DAL.User", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.ReviewStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.User", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.NoAction)
=======
            modelBuilder.Entity("TMS.API.Models.Review", b =>
                {
                    b.HasOne("TMS.API.Models.User", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.ReviewStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.User", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired();

                    b.Navigation("Reviewer");

                    b.Navigation("Status");

                    b.Navigation("Trainee");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Topic", b =>
                {
                    b.HasOne("TMS.DAL.Course", "Course")
                        .WithMany("Topics")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
=======
            modelBuilder.Entity("TMS.API.Models.Topic", b =>
                {
                    b.HasOne("TMS.API.Models.Course", "Course")
                        .WithMany("Topics")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired();

                    b.Navigation("Course");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.TraineeFeedback", b =>
                {
                    b.HasOne("TMS.DAL.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.User", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TMS.DAL.User", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.NoAction)
=======
            modelBuilder.Entity("TMS.API.Models.TraineeFeedback", b =>
                {
                    b.HasOne("TMS.API.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.User", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMS.API.Models.User", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");

                    b.Navigation("Trainer");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.User", b =>
                {
                    b.HasOne("TMS.DAL.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("TMS.DAL.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
=======
            modelBuilder.Entity("TMS.API.Models.User", b =>
                {
                    b.HasOne("TMS.API.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("TMS.API.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Role");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Course", b =>
=======
            modelBuilder.Entity("TMS.API.Models.Course", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Topics");
                });

<<<<<<< HEAD
            modelBuilder.Entity("TMS.DAL.Topic", b =>
=======
            modelBuilder.Entity("TMS.API.Models.Topic", b =>
>>>>>>> 9f4ee4676bf74e4a6594aa9216c0f03956d03779
                {
                    b.Navigation("Assigments");

                    b.Navigation("Attendances");
                });
#pragma warning restore 612, 618
        }
    }
}
